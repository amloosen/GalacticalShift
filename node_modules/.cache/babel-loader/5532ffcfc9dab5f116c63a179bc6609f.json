{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/MainTask.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\";\nimport { View } from \"react-native\";\nimport OutcomeSlider from \"./sliderOutcome\";\nimport OutcomeSliderBar from \"./sliderOutcomeBar\";\nimport ElementsFullDisplay from \"./elementsFulldisplay\";\nimport ElementsIndicator from \"./elementsIndicator\";\nimport { range } from \"lodash\"; ////////////////////////////////////////////////////////////////////////////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction shuffle(array) {\n  let currentIndex = array.length,\n      randomIndex; // While there remain elements to shuffle...\n\n  while (currentIndex !== 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--; // And swap it with the current element.\n\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n} //\n\n\nfunction getRandomInt(min, max) {\n  const minimum = Math.ceil(min);\n  const maximum = Math.floor(max);\n  return Math.floor(Math.random() * (maximum - minimum + 1)) + minimum;\n}\n\nfunction getRand(array) {\n  var val_options = range(0, 110, 10);\n  var rand = val_options[~~(Math.random() * val_options.length)]; // var rand = Math.floor(Math.random() * 10);\n\n  if (array.indexOf(rand) === -1) {\n    return rand;\n  } else {\n    return getRand(array);\n  }\n} /////////////////////////////////////////////////////////////////////////////////\n\n\nclass MainTask extends React.Component {\n  constructor(props) {\n    super(props);\n    var randNum = \"struct_\" + getRandomInt(1, 10);\n\n    var StructToRender = require(\"./taskStructs/\" + randNum + \".json\");\n\n    var precededShift = StructToRender[0]; //1=intra-dimensional; 2=extra-dimensional\n\n    var w0 = StructToRender[1];\n    var relevant_w = StructToRender[2];\n    var corPos_sq = StructToRender[3];\n    var val_corr_elem = StructToRender[4];\n    var epsilon = StructToRender[5];\n    var true_pop_size_tmp = StructToRender[6];\n    var true_pop_size = true_pop_size_tmp.map(function (each_element) {\n      return Number(each_element.toFixed(0));\n    });\n    var nr_trial = w0.length; //pregenerate the values of the remaining elements\n\n    var check_al2 = [];\n    var check_al1 = [];\n\n    for (var i = 0; i <= nr_trial - 1; i++) {\n      var restricted = [val_corr_elem[i], 100 - val_corr_elem[i]];\n\n      if (i < nr_trial / 2) {\n        check_al1[i] = getRand(restricted);\n        check_al2[i] = 100 - val_corr_elem[i];\n      } else {\n        check_al1[i] = 100 - val_corr_elem[i];\n        check_al2[i] = getRand(restricted);\n      }\n    }\n\n    var all_element_values = Array(nr_trial).fill().map(() => Array(3).fill(0));\n\n    for (var i = 0; i <= nr_trial - 1; i++) {\n      all_element_values[i][corPos_sq[i] - 1] = val_corr_elem[i];\n\n      if (corPos_sq[i] === 1) {\n        all_element_values[i][1] = check_al1[i];\n        all_element_values[i][2] = check_al2[i];\n      } else if (corPos_sq[i] === 2) {\n        all_element_values[i][0] = check_al1[i];\n        all_element_values[i][2] = check_al2[i];\n      } else if (corPos_sq[i] === 3) {\n        all_element_values[i][0] = check_al1[i];\n        all_element_values[i][1] = check_al2[i];\n      }\n    }\n\n    let trialSgmMu = Array(nr_trial).fill().map(() => Array(3).fill(0));\n    let trialRT = Array(nr_trial).fill().map(() => Array(3).fill(0));\n    let array_tmp = Array(nr_trial).fill(0);\n    var element_colours = [1, 2, 3]; // from left to right\n\n    shuffle(element_colours);\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"MainTaskC\",\n      trialTotal: nr_trial,\n      trialPerBlock: 50,\n      trialNum: 1,\n      trialBlockNum: 1,\n      blockTotal: 5,\n      blockNum: 1,\n      trialRT: trialRT,\n      choiceTime0: 0,\n      element1Col: element_colours[0],\n      element2Col: element_colours[1],\n      element3Col: element_colours[2],\n      indicTrials: [10, 87, 163, 240],\n      //generate by Matlab function linspace(min(10),max(240),4)\n      trialSliderRT: null,\n      trialSgmMu: trialSgmMu,\n      timerCountDur: 10,\n      feedback: false,\n      mounted: 0,\n      choiceTime0: 0,\n      timePassed: false,\n      timePassed2: false,\n      all_true_pop_size: true_pop_size,\n      trainAcc: array_tmp,\n      corr_elem_pos: corPos_sq,\n      all_element_values: all_element_values\n    }; // this.displayFeedback = this.displayFeedback.bind(this)\n\n    /* prevents page from going to the right/left when arrows are pressed .*/\n\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      } else if (e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  } /////////////////////////////////////////////////////////////////////////////////\n\n\n  nextTrial() {\n    if (this.state.trialNum === 1 // this.state.trialNum === this.state.trialTotal &&\n    // this.state.blockNum < this.state.blockTotal\n    ) {\n      setInterval(this.disp_break, 1000);\n      this.setState({\n        trialNum: 1 // trialRT: trialRT,\n        // choiceTime0: 0,\n        // // trialSliderRT: null,\n        // // trialSgmMu: trialSgmMu,\n        // timerCountDur: 10,\n        // feedback: false,\n        // mounted: 0,\n        // // trialTotal: nr_trial,\n        // blockTotal: 10,\n        // blockNum: 1,\n        // choiceTime0: 0,\n        // timePassed: false,\n        // timePassed2: false,\n\n      });\n    } else if (this.state.trialNum === this.state.trialTotal && this.state.blockNum === this.state.blockTotal) {\n      this.redirectToNextStage();\n    } else {\n      var trialNum_tmp = this.state.trialNum + 1;\n      var block_tmp = this.state.blockNum + 1;\n      this.setState({\n        trialNum: trialNum_tmp,\n        blockNum: block_tmp,\n        feedback: false,\n        timePassed: false,\n        timePassed2: false\n      });\n    }\n  }\n\n  componentDidMount() {\n    setTimeout(function () {\n      this.setState({\n        mounted: 1\n      });\n    }.bind(this), 5000);\n  }\n\n  componentWillUnmount() {\n    this.setState = (state, callback) => {\n      return;\n    };\n  } //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n  /////////////////////////////////////////////////////////////////////////////////\n\n\n  render() {\n    if (this.state.indicTrials.includes(this.state.trialNum)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.cockpit,\n        children: this.disp_elementIndicator()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 14\n      }, this);\n    } else {\n      if (!this.state.timePassed && this.state.feedback === false) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cockpit,\n          children: this.disp_elements()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 16\n        }, this);\n      } else if (this.state.feedback === true && !this.state.timePassed2) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cockpit,\n          children: [this.disp_feedback(), \" \", this.handleIncrement, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this);\n      } else if (!this.state.feedback && this.state.timePassed2 === false) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cockpit,\n          children: this.disp_slider()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 16\n        }, this);\n      } else if (this.state.timePassed2 === true && this.state.feedback === true) {\n        {\n          this.nextTrial();\n        }\n        return null;\n      }\n    }\n  } /////////////////////////////////////////////////////////////////////////////////\n\n\n  disp_elementIndicator() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cockpit,\n      children: /*#__PURE__*/_jsxDEV(ElementsIndicator, {\n        value1: this.state.all_element_values[this.state.trialNum - 1][0],\n        value2: this.state.all_element_values[this.state.trialNum - 1][1],\n        value3: this.state.all_element_values[this.state.trialNum - 1][2],\n        corAns: this.state.corr_elem_pos //adapt later\n        ,\n        element_col: [1, 2, 3] //adapt later\n        ,\n        userID: 100 //props.userID,\n        ,\n        trialNum: this.state.trialNum,\n        blockNum: this.state.blockNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this);\n  }\n\n  disp_slider() {\n    let choiceTime0 = Math.round(performance.now());\n\n    let text = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.questions,\n      children: [\"How large is the alien population?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cockpit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        onSpacebarHit: result => {\n          this.saveSgmMu(result, choiceTime0);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this);\n  }\n\n  disp_elements() {\n    setTimeout(() => {\n      this.setState({\n        timePassed: true,\n        timePassed2: false\n      });\n    }, 5000);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.overlaybar,\n      children: /*#__PURE__*/_jsxDEV(ElementsFullDisplay, {\n        value1: this.state.all_element_values[this.state.trialNum - 1][0],\n        value2: this.state.all_element_values[this.state.trialNum - 1][1],\n        value3: this.state.all_element_values[this.state.trialNum - 1][2],\n        img1: this.state.element1Col,\n        img2: this.state.element2Col,\n        img3: this.state.element3Col,\n        elem_indic: 1 //adapt later\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this);\n  }\n\n  disp_feedback() {\n    let text2 = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.questions,\n      children: [\"The true population on the planet was\", \" \", this.state.all_true_pop_size[this.state.trialNum - 1], \" million.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this);\n\n    setTimeout(() => {\n      this.setState({\n        timePassed2: true,\n        timePassed: false\n      });\n    }, 700);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cockpit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: text2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        style: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.overlaybar,\n          children: /*#__PURE__*/_jsxDEV(OutcomeSlider, {\n            mu: this.state.trialSgmMu[this.state.trialNum - 1][2],\n            sgm: this.state.trialSgmMu[this.state.trialNum - 1][1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.overlaybar,\n          children: /*#__PURE__*/_jsxDEV(OutcomeSliderBar, {\n            mu: this.state.trialSgmMu[this.state.trialNum - 1][2],\n            sgm: this.state.trialSgmMu[this.state.trialNum - 1][1],\n            value: this.state.all_true_pop_size[this.state.trialNum - 1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this);\n  }\n\n  saveSgmMu(result, time) {\n    let trialSgmMu = this.state.trialSgmMu;\n    let trialRT = this.state.trialRT;\n    let trialNum = this.state.trialNum;\n    trialSgmMu[trialNum - 1][1] = result.sgm;\n    trialSgmMu[trialNum - 1][2] = result.mu;\n    trialRT[trialNum - 1][0] = trialNum;\n    trialRT[trialNum - 1][1] = time;\n    trialRT[trialNum - 1][2] = Math.round(performance.now());\n    trialRT[trialNum - 1][3] = trialRT[trialNum - 1][2] - time;\n    this.setState({\n      trialSgmMu: trialSgmMu,\n      trialRT: trialRT,\n      feedback: true //trialNum : trialNum+1,\n      // outcome: show\n\n    });\n  }\n\n  disp_break() {\n    let text = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.center,\n          children: \"BREAK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this), \"You have completed \", this.state.blockNum, \" out of\\xA0\", this.state.blockTotal, \" blocks!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), \"You may take a short break.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), \"You should take the opportunity to refresh your memory of the room and outcome images.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.centerTwo,\n          children: [\"If you are ready to continue, please press the [\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"SPACEBAR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this), \"].\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cockpit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.textblock,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, this);\n  }\n\n  redirectToNextStage() {\n    this.props.history.push({\n      pathname: `/MainTaskIntro`,\n      state: {// userID: this.state.userID,\n        // date: this.state.date,\n        // startTime: this.state.startTime,\n      }\n    }); // console.log(\"UserID is: \" + this.state.userID);\n  }\n\n}\n\nexport default _c = withRouter(MainTask);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/MainTask.js"],"names":["React","withRouter","DATABASE_URL","styles","Slider","View","OutcomeSlider","OutcomeSliderBar","ElementsFullDisplay","ElementsIndicator","range","shuffle","array","currentIndex","length","randomIndex","Math","floor","random","getRandomInt","min","max","minimum","ceil","maximum","getRand","val_options","rand","indexOf","MainTask","Component","constructor","props","randNum","StructToRender","require","precededShift","w0","relevant_w","corPos_sq","val_corr_elem","epsilon","true_pop_size_tmp","true_pop_size","map","each_element","Number","toFixed","nr_trial","check_al2","check_al1","i","restricted","all_element_values","Array","fill","trialSgmMu","trialRT","array_tmp","element_colours","state","trialTotal","trialPerBlock","trialNum","trialBlockNum","blockTotal","blockNum","choiceTime0","element1Col","element2Col","element3Col","indicTrials","trialSliderRT","timerCountDur","feedback","mounted","timePassed","timePassed2","all_true_pop_size","trainAcc","corr_elem_pos","window","addEventListener","e","keyCode","target","document","body","preventDefault","nextTrial","setInterval","disp_break","setState","redirectToNextStage","trialNum_tmp","block_tmp","componentDidMount","setTimeout","bind","componentWillUnmount","callback","render","includes","cockpit","disp_elementIndicator","disp_elements","disp_feedback","handleIncrement","disp_slider","round","performance","now","text","questions","result","saveSgmMu","overlaybar","text2","container","time","sgm","mu","main","center","centerTwo","textblock","history","push","pathname"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\";\nimport { View } from \"react-native\";\nimport OutcomeSlider from \"./sliderOutcome\";\nimport OutcomeSliderBar from \"./sliderOutcomeBar\";\nimport ElementsFullDisplay from \"./elementsFulldisplay\";\n\nimport ElementsIndicator from \"./elementsIndicator\";\nimport { range } from \"lodash\";\n////////////////////////////////////////////////////////////////////////////////\nfunction shuffle(array) {\n  let currentIndex = array.length,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex !== 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex],\n    ];\n  }\n  return array;\n}\n//\nfunction getRandomInt(min, max) {\n  const minimum = Math.ceil(min);\n  const maximum = Math.floor(max);\n\n  return Math.floor(Math.random() * (maximum - minimum + 1)) + minimum;\n}\n\nfunction getRand(array) {\n  var val_options = range(0, 110, 10);\n  var rand = val_options[~~(Math.random() * val_options.length)];\n  // var rand = Math.floor(Math.random() * 10);\n  if (array.indexOf(rand) === -1) {\n    return rand;\n  } else {\n    return getRand(array);\n  }\n}\n/////////////////////////////////////////////////////////////////////////////////\nclass MainTask extends React.Component {\n  constructor(props) {\n    super(props);\n\n    var randNum = \"struct_\" + getRandomInt(1, 10);\n    var StructToRender = require(\"./taskStructs/\" + randNum + \".json\");\n    var precededShift = StructToRender[0]; //1=intra-dimensional; 2=extra-dimensional\n    var w0 = StructToRender[1];\n    var relevant_w = StructToRender[2];\n    var corPos_sq = StructToRender[3];\n    var val_corr_elem = StructToRender[4];\n    var epsilon = StructToRender[5];\n    var true_pop_size_tmp = StructToRender[6];\n    var true_pop_size = true_pop_size_tmp.map(function (\n      each_element\n    ) {\n      return Number(each_element.toFixed(0));\n    });\n\n    var nr_trial = w0.length;\n  //pregenerate the values of the remaining elements\n    var check_al2 = [];\n    var check_al1 = [];\n\n    for (var i = 0; i <= nr_trial - 1; i++) {\n      var restricted = [val_corr_elem[i], 100 - val_corr_elem[i]];\n      if (i < nr_trial / 2) {\n        check_al1[i] = getRand(restricted);\n        check_al2[i] = 100 - val_corr_elem[i];\n      } else {\n        check_al1[i] = 100 - val_corr_elem[i];\n        check_al2[i] = getRand(restricted);\n      }\n    }\n\n    var all_element_values = Array(nr_trial)\n      .fill()\n      .map(() => Array(3).fill(0));\n\n    for (var i = 0; i <= nr_trial - 1; i++) {\n      all_element_values[i][corPos_sq[i] - 1] = val_corr_elem[i];\n      if (corPos_sq[i] === 1) {\n        all_element_values[i][1] = check_al1[i];\n        all_element_values[i][2] = check_al2[i];\n      } else if (corPos_sq[i] === 2) {\n        all_element_values[i][0] = check_al1[i];\n        all_element_values[i][2] = check_al2[i];\n      } else if (corPos_sq[i] === 3) {\n        all_element_values[i][0] = check_al1[i];\n        all_element_values[i][1] = check_al2[i];\n      }\n    }\n\n    let trialSgmMu = Array(nr_trial)\n      .fill()\n      .map(() => Array(3).fill(0));\n    let trialRT = Array(nr_trial)\n      .fill()\n      .map(() => Array(3).fill(0));\n\n      let array_tmp = Array(nr_trial).fill(0);\n\n      var element_colours = [1, 2, 3]; // from left to right\n      shuffle(element_colours);\n\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"MainTaskC\",\n      trialTotal: nr_trial,\n      trialPerBlock: 50,\n      trialNum: 1,\n      trialBlockNum: 1,\n      blockTotal: 5,\n      blockNum: 1,\n      trialRT: trialRT,\n      choiceTime0: 0,\n      element1Col: element_colours[0],\n      element2Col: element_colours[1],\n      element3Col: element_colours[2],\n      indicTrials: [10,87,163,240],//generate by Matlab function linspace(min(10),max(240),4)\n      trialSliderRT: null,\n      trialSgmMu: trialSgmMu,\n      timerCountDur: 10,\n      feedback: false,\n      mounted: 0,\n      choiceTime0: 0,\n      timePassed: false,\n      timePassed2: false,\n      all_true_pop_size: true_pop_size,\n      trainAcc: array_tmp,\n      corr_elem_pos: corPos_sq,\n      all_element_values: all_element_values,\n    };\n    // this.displayFeedback = this.displayFeedback.bind(this)\n    /* prevents page from going to the right/left when arrows are pressed .*/\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      } else if (e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  }\n  /////////////////////////////////////////////////////////////////////////////////\n\n  nextTrial() {\n\n    if (this.state.trialNum ===1\n      // this.state.trialNum === this.state.trialTotal &&\n      // this.state.blockNum < this.state.blockTotal\n    ) {\n      setInterval(this.disp_break, 1000)\n\n\n      this.setState({\n        trialNum: 1,\n        // trialRT: trialRT,\n        // choiceTime0: 0,\n        // // trialSliderRT: null,\n        // // trialSgmMu: trialSgmMu,\n        // timerCountDur: 10,\n        // feedback: false,\n        // mounted: 0,\n        // // trialTotal: nr_trial,\n        // blockTotal: 10,\n        // blockNum: 1,\n        // choiceTime0: 0,\n        // timePassed: false,\n        // timePassed2: false,\n      });\n    } else if (\n      this.state.trialNum === this.state.trialTotal &&\n      this.state.blockNum === this.state.blockTotal\n    ) {\n      this.redirectToNextStage();\n    } else {\n      var trialNum_tmp = this.state.trialNum + 1;\n      var block_tmp = this.state.blockNum + 1;\n\n      this.setState({\n        trialNum: trialNum_tmp,\n        blockNum: block_tmp,\n        feedback: false,\n        timePassed: false,\n        timePassed2: false,\n      });\n    }\n  }\n  componentDidMount() {\n    setTimeout(\n      function () {\n        this.setState({\n          mounted: 1,\n        });\n      }.bind(this),\n      5000\n    );\n  }\n\n  componentWillUnmount() {\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n\n  /////////////////////////////////////////////////////////////////////////////////\n  render() {\n    if (this.state.indicTrials.includes(this.state.trialNum)) {\n      return <div className={styles.cockpit}>{this.disp_elementIndicator()}</div>;\n    } else {\n      if (!this.state.timePassed && this.state.feedback === false) {\n        return <div className={styles.cockpit}>{this.disp_elements()}</div>;\n      } else if (this.state.feedback === true && !this.state.timePassed2) {\n        return (\n          <div className={styles.cockpit}>\n            {this.disp_feedback()} {this.handleIncrement}{\" \"}\n          </div>\n        );\n      } else if (!this.state.feedback && this.state.timePassed2 === false) {\n        return <div className={styles.cockpit}>{this.disp_slider()}</div>;\n      } else if (\n        this.state.timePassed2 === true &&\n        this.state.feedback === true\n      ) {\n        {\n          this.nextTrial();\n        }\n        return null;\n      }\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////\n  disp_elementIndicator() {\n    return (\n      <div className={styles.cockpit}>\n        <ElementsIndicator\n          value1={this.state.all_element_values[this.state.trialNum - 1][0]}\n          value2={this.state.all_element_values[this.state.trialNum - 1][1]}\n          value3={this.state.all_element_values[this.state.trialNum - 1][2]}\n          corAns={this.state.corr_elem_pos} //adapt later\n          element_col={[1, 2, 3]} //adapt later\n          userID={100} //props.userID,\n          trialNum={this.state.trialNum}\n          blockNum={this.state.blockNum}\n        />\n      </div>\n    );\n  }\n\n  disp_slider() {\n    let choiceTime0 = Math.round(performance.now());\n\n    let text = (\n      <div className={styles.questions}>\n        How large is the alien population?\n        <br />\n        <br />\n        <br />\n      </div>\n    );\n\n    return (\n      <div className={styles.cockpit}>\n        <div>{text}</div>\n        <Slider\n          onSpacebarHit={(result) => {\n            this.saveSgmMu(result, choiceTime0);\n          }}\n        />\n      </div>\n    );\n  }\n\n  disp_elements() {\n    setTimeout(() => {\n      this.setState({ timePassed: true, timePassed2: false });\n    }, 5000);\n\n    return (\n      <div className={styles.overlaybar}>\n        <ElementsFullDisplay\n          value1={this.state.all_element_values[this.state.trialNum - 1][0]}\n          value2={this.state.all_element_values[this.state.trialNum - 1][1]}\n          value3={this.state.all_element_values[this.state.trialNum - 1][2]}\n          img1={this.state.element1Col}\n          img2={this.state.element2Col}\n          img3={this.state.element3Col}\n          elem_indic={1} //adapt later\n        />\n      </div>\n    );\n  }\n\n  disp_feedback() {\n    let text2 = (\n      <div className={styles.questions}>\n        The true population on the planet was{\" \"}\n        {this.state.all_true_pop_size[this.state.trialNum - 1]} million.\n        <br />\n        <br />\n        <br />\n      </div>\n    );\n\n    setTimeout(() => {\n      this.setState({ timePassed2: true, timePassed: false });\n    }, 700);\n\n    return (\n      <div className={styles.cockpit}>\n        <div>{text2}</div>\n        <View style={styles.container}>\n          <div className={styles.overlaybar}>\n            <OutcomeSlider\n              mu={this.state.trialSgmMu[this.state.trialNum - 1][2]}\n              sgm={this.state.trialSgmMu[this.state.trialNum - 1][1]}\n            />\n          </div>\n          <div className={styles.overlaybar}>\n            <OutcomeSliderBar\n              mu={this.state.trialSgmMu[this.state.trialNum - 1][2]}\n              sgm={this.state.trialSgmMu[this.state.trialNum - 1][1]}\n              value={this.state.all_true_pop_size[this.state.trialNum - 1]}\n            />\n          </div>\n        </View>\n      </div>\n    );\n  }\n\n  saveSgmMu(result, time) {\n    let trialSgmMu = this.state.trialSgmMu;\n    let trialRT = this.state.trialRT;\n    let trialNum = this.state.trialNum;\n    trialSgmMu[trialNum - 1][1] = result.sgm;\n    trialSgmMu[trialNum - 1][2] = result.mu;\n    trialRT[trialNum - 1][0] = trialNum;\n    trialRT[trialNum - 1][1] = time;\n    trialRT[trialNum - 1][2] = Math.round(performance.now());\n    trialRT[trialNum - 1][3] = trialRT[trialNum - 1][2] - time;\n\n    this.setState({\n      trialSgmMu: trialSgmMu,\n      trialRT: trialRT,\n      feedback: true,\n      //trialNum : trialNum+1,\n      // outcome: show\n    });\n  }\n\n  disp_break() {\n    let text = (\n      <div className={styles.main}>\n        <p>\n          <span className={styles.center}>BREAK</span>\n          You have completed {this.state.blockNum} out of&nbsp;\n          {this.state.blockTotal} blocks!\n          <br />\n          <br />\n          You may take a short break.\n          <br />\n          <br />\n          You should take the opportunity to refresh your memory of the room and\n          outcome images.\n          <br />\n          <span className={styles.centerTwo}>\n            If you are ready to continue, please press the [\n            <strong>SPACEBAR</strong>].\n          </span>\n        </p>\n      </div>\n    );\n\n    return (\n      <div className={styles.cockpit}>\n        <div className={styles.textblock}>{text}</div>\n      </div>\n    );\n  }\n\n\n\n  redirectToNextStage() {\n    this.props.history.push({\n      pathname: `/MainTaskIntro`,\n      state: {\n        // userID: this.state.userID,\n        // date: this.state.date,\n        // startTime: this.state.startTime,\n      },\n    });\n\n    // console.log(\"UserID is: \" + this.state.userID);\n  }\n}\n\nexport default withRouter(MainTask);\n"]},"metadata":{},"sourceType":"module"}