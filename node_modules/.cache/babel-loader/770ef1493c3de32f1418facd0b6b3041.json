{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/slider.js\",\n    _s = $RefreshSig$();\n\nimport { range } from \"lodash\";\nimport normalPdf from \"normal-pdf\";\nimport { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Slider = ({\n  onSpacebarHit = () => {}\n}) => {\n  _s();\n\n  const [mu, setMu] = useState(50);\n  const [sgm, setSgm] = useState(30);\n  const xValues = range(0, 100, 0.5);\n  const yValues = xValues.map(x => normalPdf(x, mu, sgm));\n  const data = {\n    series: [{\n      data: yValues\n    }],\n    options: {\n      chart: {\n        toolbar: {\n          show: false\n        },\n        height: 350,\n        type: 'line',\n        toolbar: {\n          show: false\n        },\n        zoom: {\n          enabled: false\n        }\n      },\n      colors: ['#d2eaf2'],\n      fill: {\n        colors: ['#d2eaf2']\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: 'smooth'\n      },\n      markers: {\n        size: 0\n      },\n      yaxis: {\n        min: 0,\n        labels: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        lines: {\n          show: false\n        }\n      },\n      xaxis: {\n        color: '#d2eaf2',\n        // min: 0,\n        // max: 100,\n        tickAmount: 5,\n        overwriteCategories: ['0', '25', '50', '75', '100'],\n        lines: {\n          show: false\n        },\n        axisTicks: {\n          color: '#e7e6e2',\n          width: 3,\n          height: 10\n        },\n        axisBorder: {\n          show: true,\n          color: '#e7e6e2',\n          height: 4,\n          width: '100%'\n        },\n        labels: {\n          rotate: 0,\n          style: {\n            fontSize: '20px',\n            colors: ['#e7e6e2', '#e7e6e2', '#e7e6e2', '#e7e6e2', '#e7e6e2'],\n            offsetX: 0,\n            offsetY: 0\n          }\n        }\n      },\n      grid: {\n        show: false\n      },\n      tooltip: {\n        enabled: false\n      }\n    }\n  }; //\n  //\n\n  function muPlus(event) {\n    if (mu == 10) {\n      setMu(mu);\n    } else {\n      setMu(mu + 1);\n    }\n  }\n\n  function muMinus(event) {\n    if (mu == -10) {\n      setMu(mu);\n    } else {\n      setMu(mu - 1);\n    }\n  }\n\n  function sgmPlus(event) {\n    if (sgm >= 20000) {\n      setSgm(sgm);\n    } else setSgm(sgm + 10);\n  }\n\n  function sgmMinus(event) {\n    if (sgm <= 3) {\n      setSgm(sgm);\n    } else setSgm(sgm - 1);\n  }\n\n  useEffect(() => {\n    const handler = event => {\n      // do something with data\n      if (event.keyCode === 32) {\n        onSpacebarHit({\n          mu,\n          sgm\n        });\n      } else if (event.keyCode === 39) {\n        muPlus();\n      } else if (event.keyCode === 37) {\n        muMinus();\n      } else if (event.keyCode === 38) {\n        sgmPlus();\n      } else if (event.keyCode === 40) {\n        sgmMinus();\n      }\n    };\n\n    document.addEventListener('keydown', handler);\n    return () => {\n      document.removeEventListener('keydown', handler);\n    };\n  }, [onSpacebarHit, mu, sgm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      options: data.options,\n      series: data.series,\n      type: \"line\",\n      height: 350,\n      width: 700,\n      align: \"center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Slider, \"4lcydI0MsIA/zLZ7K+iyvZncXnk=\");\n\n_c = Slider;\nexport default Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/slider.js"],"names":["range","normalPdf","useEffect","useState","ReactApexChart","Slider","onSpacebarHit","mu","setMu","sgm","setSgm","xValues","yValues","map","x","data","series","options","chart","toolbar","show","height","type","zoom","enabled","colors","fill","dataLabels","stroke","curve","markers","size","yaxis","min","labels","axisTicks","lines","xaxis","color","tickAmount","overwriteCategories","width","axisBorder","rotate","style","fontSize","offsetX","offsetY","grid","tooltip","muPlus","event","muMinus","sgmPlus","sgmMinus","handler","keyCode","document","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import { range } from \"lodash\";\nimport normalPdf from \"normal-pdf\";\nimport { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nconst Slider = ({ onSpacebarHit = () => {} }) => {\n  const [mu, setMu] = useState(50)\n  const [sgm, setSgm] = useState(30)\n\n\n  const xValues = range(0, 100,0.5)\n  const yValues = xValues.map((x) => normalPdf(x, mu, sgm))\n\n  const data = {\n    series: [\n      { data: yValues}\n    ],\n    options: {\n      chart: {\n      toolbar: {\n        show: false},\n        height: 350,\n        type: 'line',\n        toolbar: {\n          show: false\n        },\n        zoom: {\n            enabled: false}\n      },\n      colors: ['#d2eaf2'],\n      fill: {colors: ['#d2eaf2']},\n      dataLabels: {\n        enabled: false,\n      },\n      stroke: {\n        curve: 'smooth',\n      },\n      markers: {\n        size: 0\n      },\n      yaxis: {\n        min:0,\n        labels:{show: false },\n        axisTicks:{\n          show: false\n        },\n        lines: {\n          show: false\n        }\n      },\n      xaxis: {\n        color:'#d2eaf2',\n        // min: 0,\n        // max: 100,\n        tickAmount: 5,\n        overwriteCategories: ['0', '25', '50', '75', '100'],\n        lines: {\n          show: false\n        },\n        axisTicks: {\n          color: '#e7e6e2',\n          width: 3,\n          height: 10\n        },\n        axisBorder: {\n          show: true,\n          color: '#e7e6e2',\n          height: 4,\n        width: '100%'},\n        labels: {\n          rotate: 0,\n          style: {\n            fontSize: '20px',\n            colors: ['#e7e6e2','#e7e6e2','#e7e6e2','#e7e6e2','#e7e6e2'],\n            offsetX: 0,\n         offsetY: 0}\n        }\n      },\n      grid: {show: false},\n      tooltip: {enabled: false},\n    },\n  };\n//\n\n//\n  function muPlus(event) {\n    if (mu==10){setMu(mu)}\n    else\n      {setMu(mu + 1)}\n    }\n\n  function muMinus(event) {\n    if (mu==-10){setMu(mu)}\n    else\n    {setMu(mu - 1)}\n  }\n  function sgmPlus(event) {\n    if (sgm>=20000){setSgm(sgm)}\n    else\n    setSgm(sgm + 10)\n  }\n  function sgmMinus(event) {\n    if (sgm<=3){setSgm(sgm)}\n    else\n    setSgm(sgm - 1)\n  }\n\n  useEffect(() => {\n    const handler = (event) => {\n      // do something with data\n      if (event.keyCode === 32) {\n        onSpacebarHit({ mu, sgm })\n      } else if (event.keyCode === 39) {muPlus()\n\n      } else if (event.keyCode === 37) {muMinus()\n\n      } else if (event.keyCode === 38) {sgmPlus()\n\n      } else if (event.keyCode === 40) {sgmMinus()\n\n      }\n    }\n    document.addEventListener('keydown', handler)\n    return () => {\n      document.removeEventListener('keydown', handler)\n    }\n  }, [onSpacebarHit, mu, sgm])\n\n  return (\n    <div>\n    <ReactApexChart options={data.options} series={data.series} type=\"line\" height={350} width={700} align=\"center\"/>\n    </div>\n  )\n};\n\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}