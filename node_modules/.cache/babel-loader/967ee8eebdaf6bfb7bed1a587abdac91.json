{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTaskC_check.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\";\nimport { SafeAreaView, View, StyleSheet } from 'react-native';\nimport OutcomeSlider from \"./sliderOutcome\";\nimport OutcomeSliderBar from \"./sliderOutcomeBar\";\nimport ElementsFullDisplay from \"./elementsFulldisplay\";\nimport { range } from \"lodash\"; ////////////////////////////////////////////////////////////////////////////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction shuffle(array) {\n  let currentIndex = array.length,\n      randomIndex; // While there remain elements to shuffle...\n\n  while (currentIndex != 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--; // And swap it with the current element.\n\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n\nfunction getRand(array) {\n  var val_options = range(0, 110, 10);\n  var rand = val_options[~~(Math.random() * val_options.length)]; // var rand = Math.floor(Math.random() * 10);\n\n  if (array.indexOf(rand) === -1) {\n    return rand;\n  } else {\n    return getRand(array);\n  }\n} /////////////////////////////////////////////////////////////////////////////////\n\n\nclass TrainingTask extends React.Component {\n  constructor(props) {\n    super(props);\n    let nr_train_a_trial = 10; //update later\n\n    var val_options = range(0, 110, 10);\n    val_options.splice(val_options.indexOf(50), 1); //remove the 50 to make it clearer which element is correct\n\n    var random_val = [];\n\n    for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n      var val_tmp = val_options[~~(Math.random() * val_options.length)];\n\n      do {\n        var val_tmp = val_options[~~(Math.random() * val_options.length)];\n      } while (random_val[i - 1] === val_tmp); // make sure it changes every time\n\n\n      random_val[i] = val_tmp;\n    }\n\n    var corr_values = random_val.slice(0, 6);\n    var inverse_tmp = random_val.slice(6, 12);\n    var inverse = inverse_tmp.map(function (value) {\n      return 100 - value;\n    });\n    corr_values.push(inverse[0], inverse[1], inverse[2], inverse[3], inverse[4], inverse[5]);\n    let array_tmp = Array(nr_train_a_trial).fill(0); // var rightCodeAns = [4, 4, 4, 4, 4, 5, 5, 5, 5];\n\n    var corr_pos = [4, 4, 4, 4, 4, 5, 5, 5, 5]; //1 is left and 2 is right; determine where the correct value is displayed\n\n    shuffle(corr_pos);\n    var corr_elem_tmp = [1, 2, 3]; //1 is left and 2 is right; determine where the correct value is displayed\n\n    shuffle(corr_elem_tmp);\n    var corr_elem = Array(nr_train_a_trial).fill(0);\n\n    for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n      if (i < nr_train_a_trial / 3) {\n        corr_elem[i] = corr_elem_tmp[0];\n      } else if (i >= nr_train_a_trial / 3 && i < nr_train_a_trial / 3 * 2) {\n        corr_elem[i] = corr_elem_tmp[1];\n      } else {\n        corr_elem[i] = corr_elem_tmp[2];\n      }\n    } //pregenerate the values for all elements\n\n\n    var check_al2 = [];\n    var check_al1 = [];\n\n    for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n      var restricted = [corr_values[i], 100 - corr_values[i]];\n\n      if (i < nr_train_a_trial / 2) {\n        check_al1[i] = getRand(restricted);\n        check_al2[i] = 100 - corr_values[i];\n      } else {\n        check_al1[i] = 100 - corr_values[i];\n        check_al2[i] = getRand(restricted);\n      }\n    }\n\n    var all_element_values = Array(nr_train_a_trial).fill().map(() => Array(3).fill(0));\n\n    for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n      all_element_values[i][corr_elem[i] - 1] = corr_values[i];\n\n      if (corr_elem[i] == 1) {\n        all_element_values[i][1] = check_al1[i];\n        all_element_values[i][2] = check_al2[i];\n      } else if (corr_elem[i] == 2) {\n        all_element_values[i][0] = check_al1[i];\n        all_element_values[i][2] = check_al2[i];\n      } else if (corr_elem[i] == 3) {\n        all_element_values[i][0] = check_al1[i];\n        all_element_values[i][1] = check_al2[i];\n      }\n    }\n\n    let trialSgmMu = Array(nr_train_a_trial).fill().map(() => Array(3).fill(0));\n    let trialRT = Array(nr_train_a_trial).fill().map(() => Array(3).fill(0));\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"TrainingTask\",\n      traintrialNum: 1,\n      trialRT: trialRT,\n      choiceTime0: 0,\n      // //\n      // trialSliderRT: null,\n      trialSgmMu: trialSgmMu,\n      timerCountDur: 10,\n      feedback: false,\n      mounted: 0,\n      trueValue: 50,\n      trialRT: trialRT,\n      traintrialTotal: nr_train_a_trial,\n      feedback: 0,\n      choiceTime0: 0,\n      timePassed: false,\n      timePassed2: false,\n      mounted: 0,\n      all_corr_values: corr_values,\n      valTrainElem: corr_values[0],\n      corr_value: corr_values[0],\n      trainAcc: array_tmp,\n      corr_elem: corr_elem,\n      all_element_values: all_element_values,\n      trialSgmMu: trialSgmMu\n    }; // this.displayFeedback = this.displayFeedback.bind(this)\n\n    /* prevents page from going to the right/left when arrows are pressed .*/\n\n    window.addEventListener('keydown', function (e) {\n      if (e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      } else if (e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  } /////////////////////////////////////////////////////////////////////////////////\n  // componentDidMount() {\n  //     setTimeout(\n  //       function() {\n  //         this.setState({\n  //           mounted: 1,\n  //         });\n  //       }\n  //       .bind(this),\n  //       5000\n  //     );\n  //   }\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n  // displayFeedback() {\n  //   this.setState({feedback: true});\n  // }\n  /////////////////////////////////////////////////////////////////////////////////\n\n\n  render() {\n    if (!this.state.timePassed) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.cockpit,\n        children: this.disp_elements()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }, this);\n    } else {\n      // if (this.state.timePassed===true && this.state.feedback===false){\n      let choiceTime0 = Math.round(performance.now());\n\n      let text = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [\"How large is the alien population?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 8\n      }, this);\n\n      if (this.state.feedback === true) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cockpit,\n          children: this.disp_feedback()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 10\n        }, this);\n      } else if (this.state.feedback === false) {\n        /*#__PURE__*/\n        _jsxDEV(\"div\", {\n          className: styles.cockpit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(Slider, {\n            onSpacebarHit: result => {\n              this.saveSgmMu(result, choiceTime0);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 3\n        }, this);\n      } //      return (\n      //        <div> {this.state.feedback ? (\n      //\n      //        <div className={styles.cockpit}>\n      //        <div>{text2}</div>\n      //        <View style={styles.container}>\n      //        <div className={styles.overlaybar}><OutcomeSliderBar mu={this.state.trialSgmMu[this.state.traintrialNum-1][2]} sgm={this.state.trialSgmMu[this.state.traintrialNum-1][1]} value = {this.state.trueValue}/>\n      //        </div>\n      //        <div className={styles.overlaybar}><OutcomeSlider mu={this.state.trialSgmMu[this.state.traintrialNum-1][2]} sgm={this.state.trialSgmMu[this.state.traintrialNum-1][1]} />\n      //        </div>\n      //        </View>\n      //        </div>\n      //     ) : (\n      //       <div className={styles.cockpit}>\n      //       <div>{text}</div>\n      //       <Slider onSpacebarHit={(result) => {this.saveSgmMu(result,choiceTime0);}}/>\n      //       </div>\n      //         )}\n      //      </div>\n      // );\n\n    }\n  } /////////////////////////////////////////////////////////////////////////////////\n\n\n  disp_elements() {\n    setTimeout(() => {\n      this.setState({\n        timePassed: true\n      });\n    }, 100); //show elements\n\n    return /*#__PURE__*/_jsxDEV(ElementsFullDisplay, {\n      value1: 30,\n      value2: 40,\n      value3: 80,\n      trialTotal: this.state.traintrialTotal,\n      trialNum: this.state.traintrialNum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this);\n  }\n\n  disp_feedback() {\n    let text2 = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.questions,\n      children: [\"The true population on the planet was \", 50, \" mio.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 3\n    }, this); // setTimeout(() => {this.setState({timePassed2: true})}, 1000);//show elements\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cockpit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: text2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        style: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.overlaybar,\n          children: /*#__PURE__*/_jsxDEV(OutcomeSliderBar, {\n            mu: this.state.trialSgmMu[this.state.traintrialNum - 1][2],\n            sgm: this.state.trialSgmMu[this.state.traintrialNum - 1][1],\n            value: this.state.trueValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.overlaybar,\n          children: /*#__PURE__*/_jsxDEV(OutcomeSlider, {\n            mu: this.state.trialSgmMu[this.state.traintrialNum - 1][2],\n            sgm: this.state.trialSgmMu[this.state.traintrialNum - 1][1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 3\n    }, this);\n  }\n\n  saveSgmMu(result, time) {\n    let trialSgmMu = this.state.trialSgmMu;\n    let trialRT = this.state.trialRT;\n    let traintrialNum = this.state.traintrialNum;\n    trialSgmMu[traintrialNum - 1][1] = result.sgm;\n    trialSgmMu[traintrialNum - 1][2] = result.mu;\n    trialRT[traintrialNum - 1][0] = traintrialNum;\n    trialRT[traintrialNum - 1][1] = time;\n    trialRT[traintrialNum - 1][2] = Math.round(performance.now());\n    trialRT[traintrialNum - 1][3] = trialRT[traintrialNum - 1][2] - time;\n    this.setState({\n      trialSgmMu: trialSgmMu,\n      trialRT: trialRT,\n      feedback: true //traintrialNum : traintrialNum+1,\n      // outcome: show\n\n    });\n  }\n\n}\n\nexport default _c = withRouter(TrainingTask);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTaskC_check.js"],"names":["React","withRouter","DATABASE_URL","styles","Slider","SafeAreaView","View","StyleSheet","OutcomeSlider","OutcomeSliderBar","ElementsFullDisplay","range","shuffle","array","currentIndex","length","randomIndex","Math","floor","random","getRand","val_options","rand","indexOf","TrainingTask","Component","constructor","props","nr_train_a_trial","splice","random_val","i","val_tmp","corr_values","slice","inverse_tmp","inverse","map","value","push","array_tmp","Array","fill","corr_pos","corr_elem_tmp","corr_elem","check_al2","check_al1","restricted","all_element_values","trialSgmMu","trialRT","state","traintrialNum","choiceTime0","timerCountDur","feedback","mounted","trueValue","traintrialTotal","timePassed","timePassed2","all_corr_values","valTrainElem","corr_value","trainAcc","window","addEventListener","e","keyCode","target","document","body","preventDefault","render","cockpit","disp_elements","round","performance","now","text","questions","disp_feedback","result","saveSgmMu","setTimeout","setState","text2","container","overlaybar","time","sgm","mu"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\";\nimport {\n  SafeAreaView,\n  View,\n  StyleSheet,\n} from 'react-native';\nimport OutcomeSlider from \"./sliderOutcome\";\nimport OutcomeSliderBar from \"./sliderOutcomeBar\";\nimport ElementsFullDisplay from \"./elementsFulldisplay\";\nimport { range } from \"lodash\";\n////////////////////////////////////////////////////////////////////////////////\nfunction shuffle(array) {\n  let currentIndex = array.length,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex != 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex],\n    ];\n  }\n  return array;\n}\n\nfunction getRand(array) {\n  var val_options = range(0, 110, 10);\n  var rand = val_options[~~(Math.random() * val_options.length)];\n  // var rand = Math.floor(Math.random() * 10);\n  if (array.indexOf(rand) === -1) {\n    return rand;\n  } else {\n    return getRand(array);\n  }\n}\n/////////////////////////////////////////////////////////////////////////////////\nclass TrainingTask extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let nr_train_a_trial = 10;//update later\n    var val_options = range(0, 110, 10);\n    val_options.splice(val_options.indexOf(50), 1); //remove the 50 to make it clearer which element is correct\n    var random_val = [];\n    for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n      var val_tmp = val_options[~~(Math.random() * val_options.length)];\n      do {\n        var val_tmp = val_options[~~(Math.random() * val_options.length)];\n      } while (random_val[i - 1] === val_tmp); // make sure it changes every time\n      random_val[i] = val_tmp;\n    }\n\n    var corr_values = random_val.slice(0, 6);\n    var inverse_tmp = random_val.slice(6, 12);\n    var inverse = inverse_tmp.map(function (value) {\n      return 100 - value;\n    });\n    corr_values.push(\n      inverse[0],\n      inverse[1],\n      inverse[2],\n      inverse[3],\n      inverse[4],\n      inverse[5]\n    );\n    let array_tmp = Array(nr_train_a_trial).fill(0);\n\n    // var rightCodeAns = [4, 4, 4, 4, 4, 5, 5, 5, 5];\n    var corr_pos = [4, 4, 4, 4, 4, 5, 5, 5, 5]; //1 is left and 2 is right; determine where the correct value is displayed\n    shuffle(corr_pos);\n\n    var corr_elem_tmp = [1, 2, 3]; //1 is left and 2 is right; determine where the correct value is displayed\n    shuffle(corr_elem_tmp);\n    var corr_elem = Array(nr_train_a_trial).fill(0);\n\n    for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n      if (i < nr_train_a_trial / 3) {\n        corr_elem[i] = corr_elem_tmp[0];\n      } else if (i >= nr_train_a_trial / 3 && i < (nr_train_a_trial / 3) * 2) {\n        corr_elem[i] = corr_elem_tmp[1];\n      } else {\n        corr_elem[i] = corr_elem_tmp[2];\n      }\n    }\n    //pregenerate the values for all elements\n    var check_al2 = [];\n    var check_al1 = [];\n\n    for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n      var restricted = [corr_values[i], 100 - corr_values[i]];\n      if (i < nr_train_a_trial / 2) {\n        check_al1[i] = getRand(restricted);\n        check_al2[i] = 100 - corr_values[i];\n      } else {\n        check_al1[i] = 100 - corr_values[i];\n        check_al2[i] = getRand(restricted);\n      }\n    }\n\n    var all_element_values = Array(nr_train_a_trial)\n      .fill()\n      .map(() => Array(3).fill(0));\n\n    for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n      all_element_values[i][corr_elem[i] - 1] = corr_values[i];\n      if (corr_elem[i] == 1) {\n        all_element_values[i][1] = check_al1[i];\n        all_element_values[i][2] = check_al2[i];\n      } else if (corr_elem[i] == 2) {\n        all_element_values[i][0] = check_al1[i];\n        all_element_values[i][2] = check_al2[i];\n      } else if (corr_elem[i] == 3) {\n        all_element_values[i][0] = check_al1[i];\n        all_element_values[i][1] = check_al2[i];\n      }\n    }\n\n    let trialSgmMu = Array(nr_train_a_trial).fill().map(() => Array(3).fill(0));\n    let trialRT = Array(nr_train_a_trial).fill().map(() => Array(3).fill(0));\n\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"TrainingTask\",\n      traintrialNum: 1,\n      trialRT: trialRT,\n      choiceTime0: 0,\n      // //\n      // trialSliderRT: null,\n      trialSgmMu: trialSgmMu,\n      timerCountDur: 10,\n      feedback: false,\n      mounted: 0,\n      trueValue: 50,\n\n      trialRT: trialRT,\n      traintrialTotal: nr_train_a_trial,\n      feedback: 0,\n      choiceTime0: 0,\n      timePassed: false,\n      timePassed2: false,\n      mounted: 0,\n      all_corr_values: corr_values,\n      valTrainElem: corr_values[0],\n      corr_value: corr_values[0],\n      trainAcc: array_tmp,\n      corr_elem: corr_elem,\n      all_element_values: all_element_values,\n      trialSgmMu: trialSgmMu,\n    };\n    // this.displayFeedback = this.displayFeedback.bind(this)\n    /* prevents page from going to the right/left when arrows are pressed .*/\n    window.addEventListener('keydown', function(e) {\n    if(e.keyCode === 37 && e.target === document.body) {\n      e.preventDefault();\n    }\n    else if(e.keyCode === 39 && e.target === document.body) {\n      e.preventDefault();\n    }\n    });\n  }\n/////////////////////////////////////////////////////////////////////////////////\n  // componentDidMount() {\n  //     setTimeout(\n  //       function() {\n  //         this.setState({\n  //           mounted: 1,\n  //         });\n  //       }\n  //       .bind(this),\n  //       5000\n  //     );\n  //   }\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n\n  // displayFeedback() {\n  //   this.setState({feedback: true});\n  // }\n\n  /////////////////////////////////////////////////////////////////////////////////\n  render() {\n   if (!this.state.timePassed){\n     return <div className={styles.cockpit}>{this.disp_elements()}</div>;\n   } else {\n      // if (this.state.timePassed===true && this.state.feedback===false){\n      let choiceTime0 = Math.round(performance.now());\n\n      let text = (\n       <div className={styles.questions}>\n       How large is the alien population?\n       <br />\n       <br />\n       <br />\n       </div>);\n\n\nif (this.state.feedback===true){\n  return <div className={styles.cockpit}>{this.disp_feedback()}</div>;\n}  else if (this.state.feedback===false) {\n  <div className={styles.cockpit}>\n  <div>{text}</div>\n  <Slider onSpacebarHit={(result) => {this.saveSgmMu(result,choiceTime0);}}/>\n  </div>\n\n}\n\n\n\n  //      return (\n  //        <div> {this.state.feedback ? (\n  //\n  //        <div className={styles.cockpit}>\n  //        <div>{text2}</div>\n  //        <View style={styles.container}>\n  //        <div className={styles.overlaybar}><OutcomeSliderBar mu={this.state.trialSgmMu[this.state.traintrialNum-1][2]} sgm={this.state.trialSgmMu[this.state.traintrialNum-1][1]} value = {this.state.trueValue}/>\n  //        </div>\n  //        <div className={styles.overlaybar}><OutcomeSlider mu={this.state.trialSgmMu[this.state.traintrialNum-1][2]} sgm={this.state.trialSgmMu[this.state.traintrialNum-1][1]} />\n  //        </div>\n  //        </View>\n  //        </div>\n  //     ) : (\n  //       <div className={styles.cockpit}>\n  //       <div>{text}</div>\n  //       <Slider onSpacebarHit={(result) => {this.saveSgmMu(result,choiceTime0);}}/>\n  //       </div>\n  //         )}\n  //      </div>\n  // );\n\n    }\n  }\n\n\n/////////////////////////////////////////////////////////////////////////////////\ndisp_elements(){\n  setTimeout(() => {this.setState({timePassed: true})}, 100);//show elements\n\n    return (\n      <ElementsFullDisplay  value1={30} value2={40} value3={80} trialTotal={this.state.traintrialTotal} trialNum={this.state.traintrialNum}/>\n    );\n}\n\ndisp_feedback(){\n  let text2 = (\n  <div className={styles.questions}>\n   The true population on the planet was {50} mio.\n   <br />\n   <br />\n   <br />\n  </div>);\n\n  // setTimeout(() => {this.setState({timePassed2: true})}, 1000);//show elements\n  return(\n  <div className={styles.cockpit}>\n  <div>{text2}</div>\n  <View style={styles.container}>\n  <div className={styles.overlaybar}><OutcomeSliderBar mu={this.state.trialSgmMu[this.state.traintrialNum-1][2]} sgm={this.state.trialSgmMu[this.state.traintrialNum-1][1]} value = {this.state.trueValue}/>\n  </div>\n  <div className={styles.overlaybar}><OutcomeSlider mu={this.state.trialSgmMu[this.state.traintrialNum-1][2]} sgm={this.state.trialSgmMu[this.state.traintrialNum-1][1]} />\n  </div>\n  </View>\n  </div>\n  );\n\n\n}\n  saveSgmMu(result,time) {\n      let trialSgmMu = this.state.trialSgmMu;\n      let trialRT = this.state.trialRT;\n      let traintrialNum = this.state.traintrialNum;\n      trialSgmMu[traintrialNum-1][1] = result.sgm;\n      trialSgmMu[traintrialNum-1][2] = result.mu;\n      trialRT[traintrialNum-1][0] = traintrialNum;\n      trialRT[traintrialNum-1][1] = time;\n      trialRT[traintrialNum-1][2] = Math.round(performance.now());\n      trialRT[traintrialNum-1][3] = trialRT[traintrialNum-1][2] - time;\n      this.setState({\n          trialSgmMu: trialSgmMu,\n          trialRT: trialRT,\n          feedback: true\n          //traintrialNum : traintrialNum+1,\n          // outcome: show\n        });\n    }\n}\n\nexport default withRouter(TrainingTask);\n"]},"metadata":{},"sourceType":"module"}