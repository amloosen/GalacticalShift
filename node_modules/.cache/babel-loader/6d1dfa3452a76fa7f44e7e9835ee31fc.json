{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTaskB.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\"; // import { DATABASE_URL } from \"./config\";\n\nimport styles from \"./style/taskStyle.module.css\";\nimport { range } from \"lodash\";\nimport ElementsFullDisplay from \"./elementsFulldisplay\"; ////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TrainingTaskB extends React.Component {\n  constructor(props) {\n    super(props);\n    let trialSgmMu = Array(9).fill().map(() => Array(3).fill(0));\n    let trialRT = Array(9).fill().map(() => Array(3).fill(0));\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"TrainingTaskB\",\n      trialNum: 1,\n      //adapt\n      trialRT: trialRT,\n      choiceTime0: 0,\n      trialTotal: 9,\n      //adapt\n      trialSgmMu: trialSgmMu,\n      timerCountDur: 10,\n      timePassed: false,\n      feedback: false,\n      mounted: 0,\n      trueValue: 50 // trialTime: null,\n      // trialScore: null,\n      // valElem1: null,\n      // valElem2: null,\n      // valElem3: null,\n      // colElem1: null,\n      // colElem2: null,\n      // colElem3: null\n\n    }; // this.displayFeedback = this.displayFeedback.bind(this)\n\n    /* prevents page from going to the right/left when arrows are pressed .*/\n\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      } else if (e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  } /////////////////////////////////////////////////////////////////////////////////\n  // componentDidMount() {\n  //     setTimeout(\n  //       function() {\n  //         this.setState({\n  //           mounted: 1,\n  //         });\n  //       }\n  //       .bind(this),\n  //       5000\n  //     );\n  //   }\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n  /////////////////////////////////////////////////////////////////////////////////\n\n\n  render() {\n    setTimeout(() => {\n      this.setState({\n        timePassed: true\n      });\n    }, 10000); //show elements\n\n    if (!this.state.timePassed) {\n      return /*#__PURE__*/_jsxDEV(ElementsFullDisplay, {\n        value1: 30,\n        value2: 40,\n        value3: 80,\n        trialTotal: this.state.trialTotal,\n        trialNum: this.state.trialNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this);\n    } else {\n      // if (this.state.timePassed===true && this.state.feedback===false){\n      let choiceTime0 = Math.round(performance.now());\n\n      let text = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [\"How large is the alien population?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this);\n\n      let text2 = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [\"The true population on the planet was \", 50, \" mio.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this);\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", this.state.feedback ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cockpit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: text2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.overlaybar,\n            children: /*#__PURE__*/_jsxDEV(OutcomeSliderBar, {\n              mu: this.state.trialSgmMu[this.state.trialNum - 1][2],\n              sgm: this.state.trialSgmMu[this.state.trialNum - 1][1],\n              value: this.state.trueValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.overlaybar,\n            children: /*#__PURE__*/_jsxDEV(OutcomeSlider, {\n              mu: this.state.trialSgmMu[this.state.trialNum - 1][2],\n              sgm: this.state.trialSgmMu[this.state.trialNum - 1][1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cockpit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Slider, {\n            onSpacebarHit: result => {\n              this.saveSgmMu(result, choiceTime0);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this);\n    }\n  } /////////////////////////////////////////////////////////////////////////////////\n\n\n  saveSgmMu(result, time) {\n    let trialSgmMu = this.state.trialSgmMu;\n    let trialRT = this.state.trialRT;\n    let trialNum = this.state.trialNum;\n    trialSgmMu[trialNum - 1][1] = result.sgm;\n    trialSgmMu[trialNum - 1][2] = result.mu;\n    trialRT[trialNum - 1][0] = trialNum;\n    trialRT[trialNum - 1][1] = time;\n    trialRT[trialNum - 1][2] = Math.round(performance.now());\n    trialRT[trialNum - 1][3] = trialRT[trialNum - 1][2] - time;\n    this.setState({\n      trialSgmMu: trialSgmMu,\n      trialRT: trialRT,\n      feedback: true // trialNum : trialNum+1,\n      // outcome: show\n\n    });\n  }\n\n}\n\nexport default _c = withRouter(TrainingTaskB);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTaskB.js"],"names":["React","withRouter","styles","range","ElementsFullDisplay","TrainingTaskB","Component","constructor","props","trialSgmMu","Array","fill","map","trialRT","state","trialNum","choiceTime0","trialTotal","timerCountDur","timePassed","feedback","mounted","trueValue","window","addEventListener","e","keyCode","target","document","body","preventDefault","render","setTimeout","setState","Math","round","performance","now","text","questions","text2","cockpit","overlaybar","result","saveSgmMu","time","sgm","mu"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n// import { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport { range } from \"lodash\";\nimport ElementsFullDisplay from \"./elementsFulldisplay\";\n////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\nclass TrainingTaskB extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let trialSgmMu = Array(9)\n      .fill()\n      .map(() => Array(3).fill(0));\n    let trialRT = Array(9)\n      .fill()\n      .map(() => Array(3).fill(0));\n\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"TrainingTaskB\",\n      trialNum: 1, //adapt\n      trialRT: trialRT,\n      choiceTime0: 0,\n      trialTotal: 9, //adapt\n      trialSgmMu: trialSgmMu,\n      timerCountDur: 10,\n      timePassed: false,\n      feedback: false,\n      mounted: 0,\n      trueValue: 50,\n      // trialTime: null,\n      // trialScore: null,\n      // valElem1: null,\n      // valElem2: null,\n      // valElem3: null,\n      // colElem1: null,\n      // colElem2: null,\n      // colElem3: null\n    };\n    // this.displayFeedback = this.displayFeedback.bind(this)\n    /* prevents page from going to the right/left when arrows are pressed .*/\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      } else if (e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  }\n  /////////////////////////////////////////////////////////////////////////////////\n  // componentDidMount() {\n  //     setTimeout(\n  //       function() {\n  //         this.setState({\n  //           mounted: 1,\n  //         });\n  //       }\n  //       .bind(this),\n  //       5000\n  //     );\n  //   }\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n\n  /////////////////////////////////////////////////////////////////////////////////\n  render() {\n    setTimeout(() => {\n      this.setState({ timePassed: true });\n    }, 10000); //show elements\n    if (!this.state.timePassed) {\n      return (\n        <ElementsFullDisplay\n          value1={30}\n          value2={40}\n          value3={80}\n          trialTotal={this.state.trialTotal}\n          trialNum={this.state.trialNum}\n        />\n      );\n    } else {\n      // if (this.state.timePassed===true && this.state.feedback===false){\n      let choiceTime0 = Math.round(performance.now());\n\n      let text = (\n        <div className={styles.questions}>\n          How large is the alien population?\n          <br />\n          <br />\n          <br />\n        </div>\n      );\n\n      let text2 = (\n        <div className={styles.questions}>\n          The true population on the planet was {50} mio.\n          <br />\n          <br />\n          <br />\n        </div>\n      );\n\n      return (\n        <div>\n          {\" \"}\n          {this.state.feedback ? (\n            <div className={styles.cockpit}>\n              <div>{text2}</div>\n              <div className={styles.overlaybar}>\n                <OutcomeSliderBar\n                  mu={this.state.trialSgmMu[this.state.trialNum - 1][2]}\n                  sgm={this.state.trialSgmMu[this.state.trialNum - 1][1]}\n                  value={this.state.trueValue}\n                />\n              </div>\n              <div className={styles.overlaybar}>\n                <OutcomeSlider\n                  mu={this.state.trialSgmMu[this.state.trialNum - 1][2]}\n                  sgm={this.state.trialSgmMu[this.state.trialNum - 1][1]}\n                />\n              </div>\n            </div>\n          ) : (\n            <div className={styles.cockpit}>\n              <div>{text}</div>\n              <Slider\n                onSpacebarHit={(result) => {\n                  this.saveSgmMu(result, choiceTime0);\n                }}\n              />\n            </div>\n          )}\n        </div>\n      );\n    }\n  }\n  /////////////////////////////////////////////////////////////////////////////////\n\n  saveSgmMu(result, time) {\n    let trialSgmMu = this.state.trialSgmMu;\n    let trialRT = this.state.trialRT;\n    let trialNum = this.state.trialNum;\n    trialSgmMu[trialNum - 1][1] = result.sgm;\n    trialSgmMu[trialNum - 1][2] = result.mu;\n    trialRT[trialNum - 1][0] = trialNum;\n    trialRT[trialNum - 1][1] = time;\n    trialRT[trialNum - 1][2] = Math.round(performance.now());\n    trialRT[trialNum - 1][3] = trialRT[trialNum - 1][2] - time;\n    this.setState({\n      trialSgmMu: trialSgmMu,\n      trialRT: trialRT,\n      feedback: true,\n      // trialNum : trialNum+1,\n      // outcome: show\n    });\n  }\n}\n\nexport default withRouter(TrainingTaskB);\n"]},"metadata":{},"sourceType":"module"}