{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTask.js\";\nimport React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\";\nimport Cockpit from \"./img/CockpitBlank.jpg\"; /////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n// GLOBAL FUNCTIONS\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction shuffle(array) {\n  var currentIndex = array.length,\n      temporaryValue,\n      randomIndex; // While there remain elements to shuffle...\n\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1; // And swap it with the current element.\n\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n} //shuffling 2 or more arrays in the same order\n\n\nvar isArray = Array.isArray || function (value) {\n  return {}.toString.call(value) !== \"[object Array]\";\n};\n\nfunction shuffleSame() {\n  var arrLength = 0;\n  var argsLength = arguments.length;\n  var rnd, tmp, argsIndex;\n\n  for (var index = 0; index < argsLength; index += 1) {\n    if (!isArray(arguments[index])) {\n      throw new TypeError(\"Argument is not an array.\");\n    }\n\n    if (index === 0) {\n      arrLength = arguments[0].length;\n    }\n\n    if (arrLength !== arguments[index].length) {\n      throw new RangeError(\"Array lengths do not match.\");\n    }\n  }\n\n  while (arrLength) {\n    rnd = Math.round(Math.random() * arrLength);\n    arrLength -= 1;\n\n    for (argsIndex = 0; argsIndex < argsLength; argsIndex += 1) {\n      tmp = arguments[argsIndex][arrLength];\n      arguments[argsIndex][arrLength] = arguments[argsIndex][rnd];\n      arguments[argsIndex][rnd] = tmp;\n    }\n  }\n} //element-wise multiplication for vector\n\n\nfunction multVec(a, b) {\n  return a.map((e, i) => e * b[i]);\n} // vector of random numbers within a range\n\n\nfunction randVec(num, min, max) {\n  var arr = [];\n\n  while (arr.length < num) {\n    var minT = Math.ceil(min);\n    var maxT = Math.floor(max);\n    var r = Math.floor(Math.random() * (maxT - minT + 1)) + minT;\n    arr.push(r);\n  }\n\n  return arr;\n} // the index for NOT answers\n\n\nfunction otherVec(vect) {\n  var arr1 = [];\n  var arr2 = [];\n\n  for (var index = 0; index < vect.length; index += 1) {\n    var chosenValue;\n    var altValue;\n    var num = vect[index];\n\n    if (num === 1) {\n      chosenValue = Math.random() <= 0.5 ? 2 : 3;\n\n      if (chosenValue === 2) {\n        altValue = 3;\n      } else {\n        altValue = 2;\n      }\n    } else if (num === 2) {\n      chosenValue = Math.random() <= 0.5 ? 1 : 3;\n\n      if (chosenValue === 1) {\n        altValue = 3;\n      } else {\n        altValue = 1;\n      }\n    } else if (num === 3) {\n      chosenValue = Math.random() <= 0.5 ? 2 : 1;\n\n      if (chosenValue === 2) {\n        altValue = 1;\n      } else {\n        altValue = 2;\n      }\n    }\n\n    arr1[index] = chosenValue;\n    arr2[index] = altValue;\n  }\n\n  return [arr1, arr2];\n} // flip sign of elements in vector, and * the multiplier if the real ans is 0\n\n\nfunction flipSign(vect, vect2) {\n  var arr = [];\n\n  for (var index = 0; index < vect.length; index += 1) {\n    var posNum;\n\n    if (vect[index] === 0) {\n      posNum = 1 * vect2[index];\n    } else {\n      posNum = vect[index] * -1;\n    }\n\n    arr[index] = posNum;\n  }\n\n  return arr;\n} // if it is zero, and * the multiplier if the real ans is 0\n\n\nfunction flipZero(vect, vect2) {\n  var arr = [];\n\n  for (var index = 0; index < vect.length; index += 1) {\n    var posNum;\n\n    if (vect[index] === 0) {\n      posNum = -1 * vect2[index];\n    } else {\n      posNum = 0;\n    }\n\n    arr[index] = posNum;\n  }\n\n  return arr;\n} /////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n\n\nvar trialTotal = 9;\nvar outcomeVal = [1, -1, 0];\nvar outcomeIndx = [0, 1, 2]; /////////////////////////////////////////////////////////////////////////////////\n// Plan the outcome memory test here\n// There will be 9 trials, they have to pass 65%?\n\nvar outcomeMultLog = [1, 1, 2, 2, 3, 3, 4, 4, 5];\nvar outcomeIndxLog = outcomeIndx.concat(outcomeIndx.concat(outcomeIndx)); // [0,2,1,2,1,0...]\n\nvar outcomeValPreLog = outcomeVal.concat(outcomeVal.concat(outcomeVal)); // [0,-1,1,-1,1,0...]\n\nshuffle(outcomeMultLog);\nshuffleSame(outcomeIndxLog, outcomeValPreLog);\noutcomeIndxLog = outcomeIndxLog.filter(function (val) {\n  return val !== undefined;\n});\noutcomeValPreLog = outcomeValPreLog.filter(function (val) {\n  return val !== undefined;\n}); // the actual values for the answers\n\nvar outcomeValLog = multVec(outcomeValPreLog, outcomeMultLog); //[0,-1,1,-1,1,0...] * [1,2,3,1,4...] = [0,-2,3,-1,4...]\n\nvar outcomeNotValLog1 = flipSign(outcomeValLog, outcomeMultLog); //wrong answer 1\n\nvar outcomeNotValLog2 = flipZero(outcomeValLog, outcomeMultLog); //wrong answer 2\n\nvar outcomeAnsLog = randVec(trialTotal, 1, 3); // [1,3,2,1,2,3...] gives position of answer\n\nvar outcomeNotAnsLog = otherVec(outcomeAnsLog); // gives two arrays of wrong answer position for other two options\n\nvar outcomeNotAnsLog1 = outcomeNotAnsLog[0]; // var outcomeNotAnsLog2 = outcomeNotAnsLog[1];\n/////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n// REACT COMPONENT START\n\nclass TrainingTask extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._handleInstructKey = event => {\n      var key_pressed;\n\n      switch (event.keyCode) {\n        case 37:\n          //    this is left arrow\n          key_pressed = 4;\n          this.handleInstructLocal(key_pressed);\n          break;\n\n        case 39:\n          //    this is right arrow\n          key_pressed = 5;\n          this.handleInstructLocal(key_pressed);\n          break;\n\n        case 32:\n          //    this is SPACEBAR\n          key_pressed = 10;\n          this.handleInstructLocal(key_pressed);\n          break;\n\n        default:\n      }\n    };\n\n    this._handleTestKey = event => {\n      var pressed;\n      var time_pressed;\n\n      switch (event.keyCode) {\n        case 49:\n          pressed = 1;\n          time_pressed = Math.round(performance.now());\n          this.testCheck(pressed, time_pressed);\n          break;\n\n        case 50:\n          pressed = 2;\n          time_pressed = Math.round(performance.now());\n          this.testCheck(pressed, time_pressed);\n          break;\n\n        case 51:\n          pressed = 3;\n          time_pressed = Math.round(performance.now());\n          this.testCheck(pressed, time_pressed);\n          break;\n        //this is keycode for numpad\n\n        case 97:\n          pressed = 1;\n          time_pressed = Math.round(performance.now());\n          this.testCheck(pressed, time_pressed);\n          break;\n\n        case 98:\n          pressed = 2;\n          time_pressed = Math.round(performance.now());\n          this.testCheck(pressed, time_pressed);\n          break;\n\n        case 99:\n          pressed = 3;\n          time_pressed = Math.round(performance.now());\n          this.testCheck(pressed, time_pressed);\n          break;\n\n        default:\n      }\n    };\n\n    const userID = this.props.location.state.userID;\n    const date = this.props.location.state.date;\n    const startTime = this.props.location.state.startTime;\n    var currentDate = new Date(); // maybe change to local\n\n    var timeString = currentDate.toTimeString(); /////////////////////////////////////////////////////////////////////////////////\n    // SET COMPONENT STATES\n\n    this.state = {\n      userID: userID,\n      date: date,\n      startTime: startTime,\n      sectionTime: timeString,\n      taskSessionTry: 1,\n      taskSession: \"TrainingTask\",\n      instructScreenText: 1,\n      trialNum: 1,\n      trialTotal: trialTotal,\n      trialRT: 0,\n      trialTime: 0,\n      trialKeypress: 0,\n      trialCorLog: [],\n      trialScore: 0,\n      trialCor: null,\n      instructScreen: true,\n      testScreen: false,\n      debug: false,\n      //if true, skip this section\n      mu: 0,\n      std: 1\n    };\n    this.handleInstructLocal = this.handleInstructLocal.bind(this);\n    this.testStart = this.testStart.bind(this);\n    /* prevents page from going down when space bar is hit .*/\n\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 32 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  } /////////////////////////////////////////////////////////////////////////////////\n  // END COMPONENT STATE\n  // This handles instruction screen within the component USING KEYBOARD\n\n\n  handleInstructLocal(key_pressed) {\n    var curText = this.state.instructScreenText;\n    var whichButton = key_pressed;\n\n    if (whichButton === 4 && curText > 1) {\n      this.setState({\n        instructScreenText: curText - 1\n      });\n    } else if (whichButton === 5 && curText < 6) {\n      this.setState({\n        instructScreenText: curText + 1\n      });\n    } else if (curText === 6 && whichButton === 10) {\n      //startmissionOne\n      setTimeout(function () {\n        this.missionOne();\n      }.bind(this), 0);\n    } else if (curText === 7 && whichButton === 10) {\n      //restart\n      this.setState({\n        instructScreenText: 1\n      });\n    } else if (curText === 8 && whichButton === 10) {\n      //go to pathtask\n      setTimeout(function () {\n        this.nextMission();\n      }.bind(this), 0);\n    }\n  } // handle key key_pressed\n\n\n  /////////////////////////////////////////////////////////////////////////////////\n  // END COMPONENT PROPS\n  missionOne() {\n    var trialTime = Math.round(performance.now());\n    this.setState({\n      instructScreen: false,\n      testScreen: true,\n      trialNum: 1,\n      trialTime: trialTime,\n      trialRT: 0,\n      trialKeypress: 0,\n      trialCorLog: [],\n      trialScore: 0\n    });\n  }\n\n  testStart(trialNum) {\n    // which picture\n    //\n    // var whichOutcomePic = this.state.outcomeIndxLog[trialNum - 1];\n    //\n    // //how many pics\n    // var numOutcomePic = this.state.outcomeMultLog[trialNum - 1];\n    //\n    // //value of the answer\n    // var outcomeVal1 = this.state.outcomeValLog[trialNum - 1];\n    // var outcomeVal2 = this.state.outcomeNotValLog1[trialNum - 1];\n    // var outcomeVal3 = this.state.outcomeNotValLog2[trialNum - 1];\n    //\n    // // position of the answer\n    // var outcomePos1 = this.state.outcomeAnsLog[trialNum - 1];\n    // var outcomePos2 = this.state.outcomeNotAnsLog1[trialNum - 1];\n    // // var outcomePos3 = this.state.outcomeNotAnsLog2[trialNum - 1];\n    //\n    // var ansOne;\n    // var ansTwo;\n    // var ansThree;\n    //\n    // // console.log(this.state.outcomeValLog);\n    // // console.log(this.state.outcomeNotValLog1);\n    // // console.log(this.state.outcomeNotValLog1);\n    // // console.log(this.state.outcomeAnsLog);\n    // // console.log(this.state.outcomeNotAnsLog1);\n    // // console.log(this.state.outcomeNotAnsLog2);\n    //\n    // if (outcomePos1 === 1) {\n    //   ansOne = outcomeVal1;\n    // } else {\n    //   if (outcomePos2 === 1) {\n    //     ansOne = outcomeVal2;\n    //   } else {\n    //     ansOne = outcomeVal3;\n    //   }\n    // }\n    //\n    // if (outcomePos1 === 2) {\n    //   ansTwo = outcomeVal1;\n    // } else {\n    //   if (outcomePos2 === 2) {\n    //     ansTwo = outcomeVal2;\n    //   } else {\n    //     ansTwo = outcomeVal3;\n    //   }\n    // }\n    //\n    // if (outcomePos1 === 3) {\n    //   ansThree = outcomeVal1;\n    // } else {\n    //   if (outcomePos2 === 3) {\n    //     ansThree = outcomeVal2;\n    //   } else {\n    //     ansThree = outcomeVal3;\n    //   }\n    // }\n    //\n    // // console.log(ansOne);\n    // // console.log(ansTwo);\n    // // console.log(ansThree);\n    let text = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.questions,\n      children: [\"How large is the alien population?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this); // return <div>{text}</div>;\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        onSpacebarHit: result => window.alert(JSON.stringify(result))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 13\n    }, this);\n  }\n\n  condSave() {\n    var userID = this.state.userID;\n    var currentDate = new Date(); // maybe change to local\n\n    var sectionTime = currentDate.toTimeString();\n    var trialTime = Math.round(performance.now());\n    let saveString = {\n      userID: this.state.userID,\n      date: this.state.date,\n      startTime: this.state.startTime,\n      // this is when they start the expt\n      sectionTime: sectionTime,\n      //this is if they somehow refresh the page...\n      trialTime: trialTime,\n      taskSession: this.state.taskSession,\n      taskSessionTry: this.state.taskSessionTry,\n      structNum: null // outcomeVal: this.state.outcomeVal,\n      // outcomeIndx: this.state.outcomeIndx,\n      // stateWord: null,\n      // stateIndx: null,\n\n    };\n    console.log(saveString);\n\n    try {\n      fetch(`${DATABASE_URL}/cond_data/` + userID, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(saveString)\n      });\n    } catch (e) {\n      console.log(\"Cant post?\");\n    }\n  } // trialSave() {\n  //   var userID = this.state.userID;\n  //   var trialPicIndx = this.state.outcomeIndxLog[this.state.trialNum - 1];\n  //   var trialPicWord = this.state.outcomeWord[trialPicIndx];\n  //\n  //   let saveString = {\n  //     userID: this.state.userID,\n  //     date: this.state.date,\n  //     startTime: this.state.startTime, // this is when they start the expt\n  //     sectionTime: this.state.sectionTime, //this is if they somehow refresh the page...\n  //     taskSession: this.state.taskSession,\n  //     taskSessionTry: this.state.taskSessionTry,\n  //     trialTime: this.state.trialTime,\n  //     trialNum: this.state.trialNum,\n  //     trialPicIndx: trialPicIndx,\n  //     trialPicWord: trialPicWord,\n  //     trialPicNum: this.state.outcomeMultLog[this.state.trialNum - 1],\n  //     trialPicValue: this.state.outcomeValLog[this.state.trialNum - 1],\n  //     trialPicAns: this.state.outcomeAnsLog[this.state.trialNum - 1],\n  //     trialRT: this.state.trialRT,\n  //     trialKeypress: this.state.trialKeypress,\n  //     trialCor: this.state.trialCor,\n  //     trialScore: this.state.trialScore,\n  //   };\n  // try {\n  //   fetch(`${DATABASE_URL}/outcome_test/` + userID, {\n  //     method: \"POST\",\n  //     headers: {\n  //       Accept: \"application/json\",\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(saveString),\n  //   });\n  // } catch (e) {\n  //   console.log(\"Cant post?\");\n  // }\n  //lag a bit to make sure statestate is saved\n  //   setTimeout(\n  //     function () {\n  //       this.trialNext();\n  //     }.bind(this),\n  //     10\n  //   );\n  // }\n\n\n  trialNext() {\n    var trialNum = this.state.trialNum + 1;\n    var trialTime = Math.round(performance.now());\n    this.setState({\n      trialTime: trialTime,\n      trialNum: trialNum,\n      trialKeypress: 0,\n      // trialPicIndx: null,\n      // trialPicNum: null,\n      // trialPicValue: null,\n      // trialPicAns: null,\n      trialCor: null\n    });\n  } // passMission() {\n  //   this.setState({\n  //     instructScreen: true,\n  //     testScreen: false,\n  //     instructScreenText: 8,\n  //   });\n  // }\n\n\n  nextMission() {\n    document.removeEventListener(\"keyup\", this._handleInstructKey);\n    document.removeEventListener(\"keyup\", this._handleDebugKey);\n    this.props.history.push({\n      pathname: `/PathTask`,\n      state: {\n        userID: this.state.userID,\n        date: this.state.date,\n        startTime: this.state.startTime\n      }\n    });\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0); //send the TrainingTask conditions?\n\n    setTimeout(function () {\n      this.condSave();\n    }.bind(this), 0);\n    setTimeout(function () {\n      this.setState({\n        mounted: 1\n      });\n    }.bind(this), 5000);\n  }\n\n  componentWillUnmount() {\n    // fix Warning: Can't perform a React state update on an unmounted component\n    this.setState = (state, callback) => {\n      return;\n    };\n  } //////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // render time\n\n\n  render() {\n    let text;\n\n    if (this.state.debug === false) {\n      if (this.state.instructScreen === true) {\n        if (this.state.instructScreenText === 1) {\n          document.addEventListener(\"keyup\", this._handleInstructKey);\n          text = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.main,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.center,\n                children: \"Hello and welcome on onboard!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 13\n              }, this), \"For today's mission, you will be a space explorer on an intergalactic mission.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 13\n              }, this), \"Your mission is to tell your station on earth of how many aliens live on the planets you visit.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 20\n              }, this), \"It is critical that you give your best estimate of the alien population size for the mission to be successful.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 20\n              }, this), \"We will now tell you how you can infer the population size once you reached a planet.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.centerTwo,\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  children: \"(Use the \\u2190 \\u2192 keys to navigate the pages.)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 625,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 624,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.centerTwo,\n                children: [\"[\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"NEXT \\u2192\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 628,\n                  columnNumber: 14\n                }, this), \"]\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 627,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 13\n          }, this);\n        } else if (this.state.instructScreenText === 2) {\n          text = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.main,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.center,\n                children: \"TRAINING I\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 13\n              }, this), \"So how can you find out how many aliens live on a planet?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 642,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 13\n              }, this), \"Your spaceship is equipped with several measuring instruments\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 13\n              }, this), \"that will help you determine how many aliens live on the planet.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 647,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 647,\n                columnNumber: 19\n              }, this), \"A measuring instrument may look like this:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.centerTwo,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: styles.state,\n                  src: this.state.introPic[0],\n                  alt: \"example1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 650,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 649,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 656,\n                columnNumber: 13\n              }, this), \"This instrument indicates 40% of the resource is available.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 658,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.centerTwo,\n                children: [\"[\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\u2190 BACK\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 662,\n                  columnNumber: 14\n                }, this), \"] [\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"NEXT \\u2192\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 662,\n                  columnNumber: 40\n                }, this), \"]\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 13\n          }, this);\n        } else if (this.state.instructScreenText === 3) {\n          text = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.main,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.center,\n                children: \"TRAINING I\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 671,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 672,\n                columnNumber: 13\n              }, this), \"The aliens living on these planets rely on natural resources,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 13\n              }, this), \" and thus the population size is related to the measurement of your instrument.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 675,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 676,\n                columnNumber: 13\n              }, this), \"For example, the reading of the measurement could be reflecting the population size (in million) one-to-one.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 13\n              }, this), \"This would mean that if the instrument shows you \\u201840%\\u2019 40 million aliens live on that planet. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 679,\n                columnNumber: 107\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 680,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.centerTwo,\n                children: [\"[\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\u2190 BACK\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 682,\n                  columnNumber: 14\n                }, this), \"] [\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"NEXT \\u2192\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 682,\n                  columnNumber: 40\n                }, this), \"]\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 13\n          }, this);\n        } else if (this.state.instructScreenText === 4) {\n          text = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.main,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.center,\n                children: \"TRAINING I\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 13\n              }, this), \"However, a challenge makes your mission more difficult:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 13\n              }, this), \"No one knows how the instrument readings map onto the population size of the planet.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 697,\n                columnNumber: 13\n              }, this), \"The association between the instrument reading and the population size will be\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"more complex\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 20\n              }, this), \" and also \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"change at certain time points.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 59\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 106\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 700,\n                columnNumber: 13\n              }, this), \"It is your task to learn this and keep track of changes.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 702,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 702,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.centerTwo,\n                children: [\"[\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\u2190 BACK\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 704,\n                  columnNumber: 14\n                }, this), \"] [\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"NEXT \\u2192\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 704,\n                  columnNumber: 40\n                }, this), \"]\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 703,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 13\n          }, this);\n        } else if (this.state.instructScreenText === 5) {\n          text = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.main,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.center,\n                children: \"TRAINING I\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 713,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 714,\n                columnNumber: 13\n              }, this), \"For simplicity, we will now introduce you to the structure by using simple mappings \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 715,\n                columnNumber: 97\n              }, this), \"that will change at some point.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 717,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 717,\n                columnNumber: 20\n              }, this), \"We want to see whether you can detect the change. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 63\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 69\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 719,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 719,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.centerTwo,\n                children: [\"[\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\u2190 BACK\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 721,\n                  columnNumber: 14\n                }, this), \"] [\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"NEXT \\u2192\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 721,\n                  columnNumber: 40\n                }, this), \"]\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 720,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 712,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 13\n          }, this);\n        } else if (this.state.instructScreenText === 6) {\n          text = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.main,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.center,\n                children: \"TRAINING I\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 730,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 13\n              }, this), \"For your first training, after you indicated your answer \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 70\n              }, this), \"we will show you how many aliens actually lived on the planet.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 19\n              }, this), \"This will make it possible for you to find out how the instrument relates to the alien population size.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 736,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 736,\n                columnNumber: 20\n              }, this), \"Let's practice this!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 738,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 738,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.centerTwo,\n                children: [\"Press the [\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"SPACEBAR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 740,\n                  columnNumber: 24\n                }, this), \"] to start the training.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 739,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.centerTwo,\n                children: [\"[\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\u2190 BACK\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 743,\n                  columnNumber: 14\n                }, this), \"]\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 742,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 13\n          }, this);\n        } else if (this.state.instructScreenText === 7) {\n          // IF YOU FAIL THE TEST, YOU RESTART\n          document.addEventListener(\"keyup\", this._handleInstructKey);\n          text = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.main,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.center,\n                children: \"TRAINING I\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 754,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 755,\n                columnNumber: 13\n              }, this), \"Unforuntately, you only had \", this.state.trialScore, \"/\", this.state.trialTotal, \" correct!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 758,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 758,\n                columnNumber: 20\n              }, this), \"Let us go through the instructions and try again.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 760,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 760,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.centerTwo,\n                children: [\"Press the [\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"SPACEBAR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 762,\n                  columnNumber: 24\n                }, this), \"] to try again.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 761,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 753,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 13\n          }, this);\n        } else if (this.state.instructScreenText === 8) {\n          // IF YOU PASS THE TEST\n          document.addEventListener(\"keyup\", this._handleInstructKey);\n          text = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.main,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.center,\n                children: \"TRAINING I\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 774,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 775,\n                columnNumber: 13\n              }, this), \"Great, you had \", this.state.trialScore, \"/\", this.state.trialTotal, \"\\xA0correct!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 778,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 778,\n                columnNumber: 20\n              }, this), \"In summary, these outcome rooms lead to:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.centerTwo,\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: styles.stateSmall,\n                  src: this.state.outcomePic[0],\n                  alt: \"outcome1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 781,\n                  columnNumber: 13\n                }, this), \"\\xA0\\xA0 = \\xA0+\", \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: styles.coin,\n                  src: this.state.img_coinSmall,\n                  alt: \"coin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 787,\n                  columnNumber: 13\n                }, this), \"\\xA0\\xA0 (gain)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 793,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: styles.stateSmall,\n                  src: this.state.outcomePic[1],\n                  alt: \"outcome2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 794,\n                  columnNumber: 13\n                }, this), \"\\xA0\\xA0 = \\xA0-\", \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: styles.coin,\n                  src: this.state.img_coinSmall,\n                  alt: \"coin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 800,\n                  columnNumber: 13\n                }, this), \"\\xA0\\xA0 (lose)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 806,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: styles.stateSmall,\n                  src: this.state.outcomePic[2],\n                  alt: \"outcome3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 807,\n                  columnNumber: 13\n                }, this), \"\\xA0\\xA0 = \\xA0none\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 780,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 814,\n                columnNumber: 13\n              }, this), \"You are ready to move on to the next training session.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 816,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 816,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.centerTwo,\n                children: [\"Press the [\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"SPACEBAR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 818,\n                  columnNumber: 24\n                }, this), \"] to continue.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 817,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 773,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 772,\n            columnNumber: 13\n          }, this);\n        }\n      } else if (this.state.instructScreen === false) {\n        // out of the instructions, this is the quiz\n        if (this.state.testScreen === true) {\n          document.removeEventListener(\"keyup\", this._handleInstructKey);\n\n          if (this.state.trialNum <= this.state.trialTotal) {\n            document.addEventListener(\"keyup\", this._handleTestKey);\n            text = /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\" \", this.testStart(this.state.trialNum)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 831,\n              columnNumber: 20\n            }, this);\n          } else {\n            // finish the quiz\n            document.removeEventListener(\"keyup\", this._handleTestKey);\n\n            if (this.state.trialScore / this.state.trialTotal > 0.65) {\n              //if score more than 65%, move on to the next section\n              setTimeout(function () {\n                this.passMission();\n              }.bind(this), 0);\n            } else {\n              //if you fail, then you do the quiz again...\n              setTimeout(function () {\n                this.missionOneRestart();\n              }.bind(this), 0);\n            }\n          }\n        } else {\n          //Error..........\n          console.log(\"ERROR - LOOP BROKEN OR LEAKY\");\n        }\n      }\n    } else if (this.state.debug === true) {\n      document.addEventListener(\"keyup\", this._handleDebugKey);\n      text = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.main,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.center,\n            children: \"DEBUG MODE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 863,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.centerTwo,\n            children: [\"Press the [\", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"SPACEBAR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 867,\n              columnNumber: 20\n            }, this), \"] to skip to next section.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 866,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cockpit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.textblock,\n        children: this.testStart()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 875,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(TrainingTask);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTask.js"],"names":["React","useState","withRouter","DATABASE_URL","styles","Slider","Cockpit","shuffle","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","isArray","Array","value","toString","call","shuffleSame","arrLength","argsLength","arguments","rnd","tmp","argsIndex","index","TypeError","RangeError","round","multVec","a","b","map","e","i","randVec","num","min","max","arr","minT","ceil","maxT","r","push","otherVec","vect","arr1","arr2","chosenValue","altValue","flipSign","vect2","posNum","flipZero","trialTotal","outcomeVal","outcomeIndx","outcomeMultLog","outcomeIndxLog","concat","outcomeValPreLog","filter","val","undefined","outcomeValLog","outcomeNotValLog1","outcomeNotValLog2","outcomeAnsLog","outcomeNotAnsLog","outcomeNotAnsLog1","TrainingTask","Component","constructor","props","_handleInstructKey","event","key_pressed","keyCode","handleInstructLocal","_handleTestKey","pressed","time_pressed","performance","now","testCheck","userID","location","state","date","startTime","currentDate","Date","timeString","toTimeString","sectionTime","taskSessionTry","taskSession","instructScreenText","trialNum","trialRT","trialTime","trialKeypress","trialCorLog","trialScore","trialCor","instructScreen","testScreen","debug","mu","std","bind","testStart","window","addEventListener","target","document","body","preventDefault","curText","whichButton","setState","setTimeout","missionOne","nextMission","text","questions","result","alert","JSON","stringify","condSave","saveString","structNum","console","log","fetch","method","headers","Accept","trialNext","removeEventListener","_handleDebugKey","history","pathname","componentDidMount","scrollTo","mounted","componentWillUnmount","callback","render","main","center","centerTwo","introPic","stateSmall","outcomePic","coin","img_coinSmall","passMission","missionOneRestart","cockpit","textblock"],"mappings":"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","sourcesContent":["import React, { useState }  from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\";\n\nimport Cockpit from \"./img/CockpitBlank.jpg\";\n/////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n// GLOBAL FUNCTIONS\nfunction shuffle(array) {\n  var currentIndex = array.length,\n  temporaryValue,\n  randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\n//shuffling 2 or more arrays in the same order\nvar isArray =\nArray.isArray ||\nfunction (value) {\n  return {}.toString.call(value) !== \"[object Array]\";\n};\n\nfunction shuffleSame() {\n  var arrLength = 0;\n  var argsLength = arguments.length;\n  var rnd, tmp, argsIndex;\n\n  for (var index = 0; index < argsLength; index += 1) {\n    if (!isArray(arguments[index])) {\n      throw new TypeError(\"Argument is not an array.\");\n    }\n\n    if (index === 0) {\n      arrLength = arguments[0].length;\n    }\n\n    if (arrLength !== arguments[index].length) {\n      throw new RangeError(\"Array lengths do not match.\");\n    }\n  }\n\n  while (arrLength) {\n    rnd = Math.round(Math.random() * arrLength);\n    arrLength -= 1;\n    for (argsIndex = 0; argsIndex < argsLength; argsIndex += 1) {\n      tmp = arguments[argsIndex][arrLength];\n      arguments[argsIndex][arrLength] = arguments[argsIndex][rnd];\n      arguments[argsIndex][rnd] = tmp;\n    }\n  }\n}\n\n//element-wise multiplication for vector\nfunction multVec(a, b) {\n  return a.map((e, i) => e * b[i]);\n}\n\n// vector of random numbers within a range\nfunction randVec(num, min, max) {\n  var arr = [];\n\n  while (arr.length < num) {\n    var minT = Math.ceil(min);\n    var maxT = Math.floor(max);\n    var r = Math.floor(Math.random() * (maxT - minT + 1)) + minT;\n    arr.push(r);\n  }\n  return arr;\n}\n\n// the index for NOT answers\n\nfunction otherVec(vect) {\n  var arr1 = [];\n  var arr2 = [];\n\n  for (var index = 0; index < vect.length; index += 1) {\n    var chosenValue;\n    var altValue;\n\n    var num = vect[index];\n\n    if (num === 1) {\n      chosenValue = Math.random() <= 0.5 ? 2 : 3;\n      if (chosenValue === 2) {\n        altValue = 3;\n      } else {\n        altValue = 2;\n      }\n    } else if (num === 2) {\n      chosenValue = Math.random() <= 0.5 ? 1 : 3;\n      if (chosenValue === 1) {\n        altValue = 3;\n      } else {\n        altValue = 1;\n      }\n    } else if (num === 3) {\n      chosenValue = Math.random() <= 0.5 ? 2 : 1;\n      if (chosenValue === 2) {\n        altValue = 1;\n      } else {\n        altValue = 2;\n      }\n    }\n    arr1[index] = chosenValue;\n    arr2[index] = altValue;\n  }\n\n  return [arr1, arr2];\n}\n\n// flip sign of elements in vector, and * the multiplier if the real ans is 0\nfunction flipSign(vect, vect2) {\n  var arr = [];\n  for (var index = 0; index < vect.length; index += 1) {\n    var posNum;\n\n    if (vect[index] === 0) {\n      posNum = 1 * vect2[index];\n    } else {\n      posNum = vect[index] * -1;\n    }\n\n    arr[index] = posNum;\n  }\n  return arr;\n}\n\n// if it is zero, and * the multiplier if the real ans is 0\nfunction flipZero(vect, vect2) {\n  var arr = [];\n  for (var index = 0; index < vect.length; index += 1) {\n    var posNum;\n\n    if (vect[index] === 0) {\n      posNum = -1 * vect2[index];\n    } else {\n      posNum = 0;\n    }\n\n    arr[index] = posNum;\n  }\n  return arr;\n}\n\n/////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n\nvar trialTotal = 9;\n\nvar outcomeVal = [1, -1, 0];\nvar outcomeIndx = [0, 1, 2];\n\n/////////////////////////////////////////////////////////////////////////////////\n// Plan the outcome memory test here\n\n// There will be 9 trials, they have to pass 65%?\nvar outcomeMultLog = [1, 1, 2, 2, 3, 3, 4, 4, 5];\nvar outcomeIndxLog = outcomeIndx.concat(outcomeIndx.concat(outcomeIndx)); // [0,2,1,2,1,0...]\nvar outcomeValPreLog = outcomeVal.concat(outcomeVal.concat(outcomeVal)); // [0,-1,1,-1,1,0...]\n\nshuffle(outcomeMultLog);\nshuffleSame(outcomeIndxLog, outcomeValPreLog);\n\noutcomeIndxLog = outcomeIndxLog.filter(function (val) {\n  return val !== undefined;\n});\noutcomeValPreLog = outcomeValPreLog.filter(function (val) {\n  return val !== undefined;\n});\n\n// the actual values for the answers\nvar outcomeValLog = multVec(outcomeValPreLog, outcomeMultLog); //[0,-1,1,-1,1,0...] * [1,2,3,1,4...] = [0,-2,3,-1,4...]\nvar outcomeNotValLog1 = flipSign(outcomeValLog, outcomeMultLog); //wrong answer 1\nvar outcomeNotValLog2 = flipZero(outcomeValLog, outcomeMultLog); //wrong answer 2\n\nvar outcomeAnsLog = randVec(trialTotal, 1, 3); // [1,3,2,1,2,3...] gives position of answer\nvar outcomeNotAnsLog = otherVec(outcomeAnsLog); // gives two arrays of wrong answer position for other two options\nvar outcomeNotAnsLog1 = outcomeNotAnsLog[0];\n// var outcomeNotAnsLog2 = outcomeNotAnsLog[1];\n\n/////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n// REACT COMPONENT START\nclass TrainingTask extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const userID = this.props.location.state.userID;\n    const date = this.props.location.state.date;\n    const startTime = this.props.location.state.startTime;\n    var currentDate = new Date(); // maybe change to local\n    var timeString = currentDate.toTimeString();\n\n    /////////////////////////////////////////////////////////////////////////////////\n    // SET COMPONENT STATES\n    this.state = {\n      userID: userID,\n      date: date,\n      startTime: startTime,\n      sectionTime: timeString,\n      taskSessionTry: 1,\n      taskSession: \"TrainingTask\",\n      instructScreenText: 1,\n\n      trialNum: 1,\n      trialTotal: trialTotal,\n      trialRT: 0,\n      trialTime: 0,\n      trialKeypress: 0,\n      trialCorLog: [],\n      trialScore: 0,\n      trialCor: null,\n\n      instructScreen: true,\n      testScreen: false,\n\n      debug: false, //if true, skip this section\n\n      mu: 0,\n      std: 1\n    };\n\n    this.handleInstructLocal = this.handleInstructLocal.bind(this);\n    this.testStart = this.testStart.bind(this);\n\n    /* prevents page from going down when space bar is hit .*/\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 32 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  }\n  /////////////////////////////////////////////////////////////////////////////////\n  // END COMPONENT STATE\n\n  // This handles instruction screen within the component USING KEYBOARD\n  handleInstructLocal(key_pressed) {\n    var curText = this.state.instructScreenText;\n    var whichButton = key_pressed;\n\n    if (whichButton === 4 && curText > 1) {\n      this.setState({ instructScreenText: curText - 1 });\n    } else if (whichButton === 5 && curText < 6) {\n      this.setState({ instructScreenText: curText + 1 });\n    } else if (curText === 6 && whichButton === 10) {\n      //startmissionOne\n      setTimeout(\n        function () {\n          this.missionOne();\n        }.bind(this),\n        0\n      );\n    } else if (curText === 7 && whichButton === 10) {\n      //restart\n      this.setState({\n        instructScreenText: 1,\n      });\n    } else if (curText === 8 && whichButton === 10) {\n      //go to pathtask\n      setTimeout(\n        function () {\n          this.nextMission();\n        }.bind(this),\n        0\n      );\n    }\n  }\n\n  // handle key key_pressed\n  _handleInstructKey = (event) => {\n    var key_pressed;\n\n    switch (event.keyCode) {\n      case 37:\n      //    this is left arrow\n      key_pressed = 4;\n      this.handleInstructLocal(key_pressed);\n      break;\n      case 39:\n      //    this is right arrow\n      key_pressed = 5;\n      this.handleInstructLocal(key_pressed);\n      break;\n      case 32:\n      //    this is SPACEBAR\n      key_pressed = 10;\n      this.handleInstructLocal(key_pressed);\n      break;\n      default:\n    }\n  };\n\n  _handleTestKey = (event) => {\n    var pressed;\n    var time_pressed;\n\n    switch (event.keyCode) {\n      case 49:\n      pressed = 1;\n      time_pressed = Math.round(performance.now());\n      this.testCheck(pressed, time_pressed);\n      break;\n      case 50:\n      pressed = 2;\n      time_pressed = Math.round(performance.now());\n      this.testCheck(pressed, time_pressed);\n      break;\n      case 51:\n      pressed = 3;\n      time_pressed = Math.round(performance.now());\n      this.testCheck(pressed, time_pressed);\n      break;\n      //this is keycode for numpad\n      case 97:\n      pressed = 1;\n      time_pressed = Math.round(performance.now());\n      this.testCheck(pressed, time_pressed);\n      break;\n      case 98:\n      pressed = 2;\n      time_pressed = Math.round(performance.now());\n      this.testCheck(pressed, time_pressed);\n      break;\n      case 99:\n      pressed = 3;\n      time_pressed = Math.round(performance.now());\n      this.testCheck(pressed, time_pressed);\n      break;\n      default:\n    }\n  };\n\n  /////////////////////////////////////////////////////////////////////////////////\n  // END COMPONENT PROPS\n\n  missionOne() {\n    var trialTime = Math.round(performance.now());\n    this.setState({\n      instructScreen: false,\n      testScreen: true,\n      trialNum: 1,\n      trialTime: trialTime,\n      trialRT: 0,\n      trialKeypress: 0,\n      trialCorLog: [],\n      trialScore: 0,\n    });\n  }\n\n  testStart(trialNum) {\n    // which picture\n    //\n    // var whichOutcomePic = this.state.outcomeIndxLog[trialNum - 1];\n    //\n    // //how many pics\n    // var numOutcomePic = this.state.outcomeMultLog[trialNum - 1];\n    //\n    // //value of the answer\n    // var outcomeVal1 = this.state.outcomeValLog[trialNum - 1];\n    // var outcomeVal2 = this.state.outcomeNotValLog1[trialNum - 1];\n    // var outcomeVal3 = this.state.outcomeNotValLog2[trialNum - 1];\n    //\n    // // position of the answer\n    // var outcomePos1 = this.state.outcomeAnsLog[trialNum - 1];\n    // var outcomePos2 = this.state.outcomeNotAnsLog1[trialNum - 1];\n    // // var outcomePos3 = this.state.outcomeNotAnsLog2[trialNum - 1];\n    //\n    // var ansOne;\n    // var ansTwo;\n    // var ansThree;\n    //\n    // // console.log(this.state.outcomeValLog);\n    // // console.log(this.state.outcomeNotValLog1);\n    // // console.log(this.state.outcomeNotValLog1);\n    // // console.log(this.state.outcomeAnsLog);\n    // // console.log(this.state.outcomeNotAnsLog1);\n    // // console.log(this.state.outcomeNotAnsLog2);\n    //\n    // if (outcomePos1 === 1) {\n    //   ansOne = outcomeVal1;\n    // } else {\n    //   if (outcomePos2 === 1) {\n    //     ansOne = outcomeVal2;\n    //   } else {\n    //     ansOne = outcomeVal3;\n    //   }\n    // }\n    //\n    // if (outcomePos1 === 2) {\n    //   ansTwo = outcomeVal1;\n    // } else {\n    //   if (outcomePos2 === 2) {\n    //     ansTwo = outcomeVal2;\n    //   } else {\n    //     ansTwo = outcomeVal3;\n    //   }\n    // }\n    //\n    // if (outcomePos1 === 3) {\n    //   ansThree = outcomeVal1;\n    // } else {\n    //   if (outcomePos2 === 3) {\n    //     ansThree = outcomeVal2;\n    //   } else {\n    //     ansThree = outcomeVal3;\n    //   }\n    // }\n    //\n    // // console.log(ansOne);\n    // // console.log(ansTwo);\n    // // console.log(ansThree);\n\n    let text = (\n      <div className={styles.questions}>\n      How large is the alien population?\n      <br />\n      <br />\n      <br />\n      </div>\n    );\n    // return <div>{text}</div>;\n    return (<div>\n      <div>{text}</div>\n      <Slider onSpacebarHit={(result) => window.alert(JSON.stringify(result))} />\n    </div>)\n  }\n\n\n  condSave() {\n    var userID = this.state.userID;\n    var currentDate = new Date(); // maybe change to local\n    var sectionTime = currentDate.toTimeString();\n    var trialTime = Math.round(performance.now());\n\n    let saveString = {\n      userID: this.state.userID,\n      date: this.state.date,\n      startTime: this.state.startTime, // this is when they start the expt\n      sectionTime: sectionTime, //this is if they somehow refresh the page...\n      trialTime: trialTime,\n      taskSession: this.state.taskSession,\n      taskSessionTry: this.state.taskSessionTry,\n      structNum: null,\n\n      // outcomeVal: this.state.outcomeVal,\n      // outcomeIndx: this.state.outcomeIndx,\n      // stateWord: null,\n      // stateIndx: null,\n\n    };\n\n    console.log(saveString);\n\n    try {\n      fetch(`${DATABASE_URL}/cond_data/` + userID, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(saveString),\n      });\n    } catch (e) {\n      console.log(\"Cant post?\");\n    }\n  }\n\n  // trialSave() {\n  //   var userID = this.state.userID;\n  //   var trialPicIndx = this.state.outcomeIndxLog[this.state.trialNum - 1];\n  //   var trialPicWord = this.state.outcomeWord[trialPicIndx];\n  //\n  //   let saveString = {\n  //     userID: this.state.userID,\n  //     date: this.state.date,\n  //     startTime: this.state.startTime, // this is when they start the expt\n  //     sectionTime: this.state.sectionTime, //this is if they somehow refresh the page...\n  //     taskSession: this.state.taskSession,\n  //     taskSessionTry: this.state.taskSessionTry,\n  //     trialTime: this.state.trialTime,\n  //     trialNum: this.state.trialNum,\n  //     trialPicIndx: trialPicIndx,\n  //     trialPicWord: trialPicWord,\n  //     trialPicNum: this.state.outcomeMultLog[this.state.trialNum - 1],\n  //     trialPicValue: this.state.outcomeValLog[this.state.trialNum - 1],\n  //     trialPicAns: this.state.outcomeAnsLog[this.state.trialNum - 1],\n  //     trialRT: this.state.trialRT,\n  //     trialKeypress: this.state.trialKeypress,\n  //     trialCor: this.state.trialCor,\n  //     trialScore: this.state.trialScore,\n  //   };\n\n    // try {\n    //   fetch(`${DATABASE_URL}/outcome_test/` + userID, {\n    //     method: \"POST\",\n    //     headers: {\n    //       Accept: \"application/json\",\n    //       \"Content-Type\": \"application/json\",\n    //     },\n    //     body: JSON.stringify(saveString),\n    //   });\n    // } catch (e) {\n    //   console.log(\"Cant post?\");\n    // }\n\n    //lag a bit to make sure statestate is saved\n  //   setTimeout(\n  //     function () {\n  //       this.trialNext();\n  //     }.bind(this),\n  //     10\n  //   );\n  // }\n\n  trialNext() {\n    var trialNum = this.state.trialNum + 1;\n    var trialTime = Math.round(performance.now());\n\n    this.setState({\n      trialTime: trialTime,\n      trialNum: trialNum,\n      trialKeypress: 0,\n      // trialPicIndx: null,\n      // trialPicNum: null,\n      // trialPicValue: null,\n      // trialPicAns: null,\n      trialCor: null,\n    });\n  }\n\n\n\n  // passMission() {\n  //   this.setState({\n  //     instructScreen: true,\n  //     testScreen: false,\n  //     instructScreenText: 8,\n  //   });\n  // }\n\n  nextMission() {\n    document.removeEventListener(\"keyup\", this._handleInstructKey);\n    document.removeEventListener(\"keyup\", this._handleDebugKey);\n    this.props.history.push({\n      pathname: `/PathTask`,\n      state: {\n        userID: this.state.userID,\n        date: this.state.date,\n        startTime: this.state.startTime,\n\n      },\n    });\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    //send the TrainingTask conditions?\n\n    setTimeout(\n      function () {\n        this.condSave();\n      }.bind(this),\n      0\n    );\n\n    setTimeout(\n      function () {\n        this.setState({\n          mounted: 1,\n        });\n      }.bind(this),\n      5000\n    );\n  }\n\n  componentWillUnmount() {\n    // fix Warning: Can't perform a React state update on an unmounted component\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // render time\n\n  render() {\n    let text;\n\n    if (this.state.debug === false) {\n      if (this.state.instructScreen === true) {\n        if (this.state.instructScreenText === 1) {\n          document.addEventListener(\"keyup\", this._handleInstructKey);\n          text = (\n            <div className={styles.main}>\n            <p>\n            <span className={styles.center}>\n            Hello and welcome on onboard!\n            </span>\n            <br />\n            For today&apos;s mission, you will be a space explorer on an intergalactic mission.\n            <br />\n            Your mission is to tell your station on earth of how many aliens live on the planets you visit.\n            <br /> <br />It is critical that you give your best estimate of the alien population size for the mission to be successful.\n            <br /> <br />\n            We will now tell you how you can infer the population size once you reached a planet.\n            <br /> <br />\n            <span className={styles.centerTwo}>\n            <i>(Use the ← → keys to navigate the pages.)</i>\n            </span>\n            <span className={styles.centerTwo}>\n            [<strong>NEXT →</strong>]\n            </span>\n            </p>\n            </div>\n          );\n        } else if (this.state.instructScreenText === 2) {\n          text = (\n            <div className={styles.main}>\n            <p>\n            <span className={styles.center}>\n            TRAINING I\n            </span>\n            <br />\n            So how can you find out how many aliens live on a planet?\n            <br />\n            <br />\n            Your spaceship is equipped with several measuring instruments\n            <br />\n            that will help you determine how many aliens live on the planet.\n            <br /><br />A measuring instrument may look like this:\n            <br /> <br />\n            <span className={styles.centerTwo}>\n            <img\n            className={styles.state}\n            src={this.state.introPic[0]}\n            alt=\"example1\"\n            />\n            </span>\n            <br />\n            This instrument indicates 40% of the resource is available.\n            <br />\n\n            <br />\n            <span className={styles.centerTwo}>\n            [<strong>← BACK</strong>] [<strong>NEXT →</strong>]\n            </span>\n            </p>\n            </div>\n          );\n        } else if (this.state.instructScreenText === 3) {\n          text = (\n            <div className={styles.main}>\n            <p>\n            <span className={styles.center}>TRAINING I</span>\n            <br />\n            The aliens living on these planets rely on natural resources,\n            <br /> and thus the population size is related to the measurement of your instrument.\n            <br />\n            <br />\n            For example, the reading of the measurement could be reflecting the population size (in million) one-to-one.\n            <br />\n            This would mean that if the instrument shows you ‘40%’ 40 million aliens live on that planet. <br />\n            <br />\n            <span className={styles.centerTwo}>\n            [<strong>← BACK</strong>] [<strong>NEXT →</strong>]\n            </span>\n            </p>\n            </div>\n          );\n        } else if (this.state.instructScreenText === 4) {\n          text = (\n            <div className={styles.main}>\n            <p>\n            <span className={styles.center}>TRAINING I</span>\n            <br />\n            However, a challenge makes your mission more difficult:\n            <br />\n            <br />\n            No one knows how the instrument readings map onto the population size of the planet.\n            <br />\n            The association between the instrument reading and the population size will be\n            <br /> <strong>more complex</strong> and also <strong>change at certain time points.</strong><br />\n            <br />\n            It is your task to learn this and keep track of changes.\n            <br /> <br />\n            <span className={styles.centerTwo}>\n            [<strong>← BACK</strong>] [<strong>NEXT →</strong>]\n            </span>\n            </p>\n            </div>\n          );\n        } else if (this.state.instructScreenText === 5) {\n          text = (\n            <div className={styles.main}>\n            <p>\n            <span className={styles.center}>TRAINING I</span>\n            <br />\n            For simplicity, we will now introduce you to the structure by using simple mappings <br />\n            that will change at some point.\n            <br /> <br />\n            We want to see whether you can detect the change. <br /><br />\n            <br /> <br />\n            <span className={styles.centerTwo}>\n            [<strong>← BACK</strong>] [<strong>NEXT →</strong>]\n            </span>\n            </p>\n            </div>\n          );\n        } else if (this.state.instructScreenText === 6) {\n          text = (\n            <div className={styles.main}>\n            <p>\n            <span className={styles.center}>TRAINING I</span>\n            <br />\n            For your first training, after you indicated your answer <br />\n            we will show you how many aliens actually lived on the planet.\n            <br /><br />\n            This will make it possible for you to find out how the instrument relates to the alien population size.\n            <br /> <br />\n            Let's practice this!\n            <br /> <br />\n            <span className={styles.centerTwo}>\n            Press the [<strong>SPACEBAR</strong>] to start the training.\n            </span>\n            <span className={styles.centerTwo}>\n            [<strong>← BACK</strong>]\n            </span>\n            </p>\n            </div>\n          );\n        } else if (this.state.instructScreenText === 7) {\n          // IF YOU FAIL THE TEST, YOU RESTART\n          document.addEventListener(\"keyup\", this._handleInstructKey);\n          text = (\n            <div className={styles.main}>\n            <p>\n            <span className={styles.center}>TRAINING I</span>\n            <br />\n            Unforuntately, you only had {this.state.trialScore}/\n            {this.state.trialTotal} correct!\n            <br /> <br />\n            Let us go through the instructions and try again.\n            <br /> <br />\n            <span className={styles.centerTwo}>\n            Press the [<strong>SPACEBAR</strong>] to try again.\n            </span>\n            </p>\n            </div>\n          );\n        } else if (this.state.instructScreenText === 8) {\n          // IF YOU PASS THE TEST\n          document.addEventListener(\"keyup\", this._handleInstructKey);\n\n          text = (\n            <div className={styles.main}>\n            <p>\n            <span className={styles.center}>TRAINING I</span>\n            <br />\n            Great, you had {this.state.trialScore}/{this.state.trialTotal}\n            &nbsp;correct!\n            <br /> <br />\n            In summary, these outcome rooms lead to:\n            <span className={styles.centerTwo}>\n            <img\n            className={styles.stateSmall}\n            src={this.state.outcomePic[0]}\n            alt=\"outcome1\"\n            />\n            &nbsp;&nbsp; = &nbsp;+{\" \"}\n            <img\n            className={styles.coin}\n            src={this.state.img_coinSmall}\n            alt=\"coin\"\n            />\n            &nbsp;&nbsp; (gain)\n            <br />\n            <img\n            className={styles.stateSmall}\n            src={this.state.outcomePic[1]}\n            alt=\"outcome2\"\n            />\n            &nbsp;&nbsp; = &nbsp;-{\" \"}\n            <img\n            className={styles.coin}\n            src={this.state.img_coinSmall}\n            alt=\"coin\"\n            />\n            &nbsp;&nbsp; (lose)\n            <br />\n            <img\n            className={styles.stateSmall}\n            src={this.state.outcomePic[2]}\n            alt=\"outcome3\"\n            />\n            &nbsp;&nbsp; = &nbsp;none\n            </span>\n            <br />\n            You are ready to move on to the next training session.\n            <br /> <br />\n            <span className={styles.centerTwo}>\n            Press the [<strong>SPACEBAR</strong>] to continue.\n            </span>\n            </p>\n            </div>\n          );\n        }\n      } else if (this.state.instructScreen === false) {\n        // out of the instructions, this is the quiz\n        if (this.state.testScreen === true) {\n          document.removeEventListener(\"keyup\", this._handleInstructKey);\n\n          if (this.state.trialNum <= this.state.trialTotal) {\n            document.addEventListener(\"keyup\", this._handleTestKey);\n            text = <div> {this.testStart(this.state.trialNum)}</div>;\n          } else {\n            // finish the quiz\n            document.removeEventListener(\"keyup\", this._handleTestKey);\n            if (this.state.trialScore / this.state.trialTotal > 0.65) {\n              //if score more than 65%, move on to the next section\n              setTimeout(\n                function () {\n                  this.passMission();\n                }.bind(this),\n                0\n              );\n            } else {\n              //if you fail, then you do the quiz again...\n              setTimeout(\n                function () {\n                  this.missionOneRestart();\n                }.bind(this),\n                0\n              );\n            }\n          }\n        } else {\n          //Error..........\n          console.log(\"ERROR - LOOP BROKEN OR LEAKY\");\n        }\n      }\n    } else if (this.state.debug === true) {\n      document.addEventListener(\"keyup\", this._handleDebugKey);\n      text = (\n        <div className={styles.main}>\n        <p>\n        <span className={styles.center}>DEBUG MODE</span>\n        <br />\n\n        <span className={styles.centerTwo}>\n        Press the [<strong>SPACEBAR</strong>] to skip to next section.\n        </span>\n        </p>\n        </div>\n      );\n    }\n\n    return (\n      <div className={styles.cockpit}>\n      {/* <div className={styles.textblock}>{text}</div> */}\n      <div className={styles.textblock}>{this.testStart()}</div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(TrainingTask);\n"]},"metadata":{},"sourceType":"module"}