{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTaskA.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport { ImageBackground, View, Image, StyleSheet, Text } from \"react-native\";\nimport { range } from \"lodash\";\nimport Slider from \"./slider\";\nimport OutcomeSlider from \"./sliderOutcome\";\nimport OutcomeSliderBar from \"./sliderOutcomeBar\";\nimport ElementsOneDisplay from \"./elementsOnedisplay\"; ////////////////////////////////////////////////////////////////////////////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction shuffle(array) {\n  let currentIndex = array.length,\n      randomIndex; // While there remain elements to shuffle...\n\n  while (currentIndex != 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--; // And swap it with the current element.\n\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n} /////////////////////////////////////////////////////////////////////////////////\n\n\nclass TrainingTaskA extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._handleTrainKey = event => {\n      var pressed;\n      var time_pressed;\n\n      switch (event.keyCode) {\n        case 49:\n          pressed = 1;\n          time_pressed = Math.round(performance.now());\n          this.trainCheck(pressed, time_pressed);\n          break;\n\n        case 50:\n          pressed = 2;\n          time_pressed = Math.round(performance.now());\n          this.trainCheck(pressed, time_pressed);\n          break;\n\n        case 51:\n          pressed = 3;\n          time_pressed = Math.round(performance.now());\n          this.trainCheck(pressed, time_pressed);\n          break;\n        //this is keycode for numpad\n\n        case 97:\n          pressed = 1;\n          time_pressed = Math.round(performance.now());\n          this.trainCheck(pressed, time_pressed);\n          break;\n\n        case 98:\n          pressed = 2;\n          time_pressed = Math.round(performance.now());\n          this.trainCheck(pressed, time_pressed);\n          break;\n\n        case 99:\n          pressed = 3;\n          time_pressed = Math.round(performance.now());\n          this.trainCheck(pressed, time_pressed);\n          break;\n\n        default:\n      }\n    };\n\n    var nr_train_a_trial = 10; // var val_options = range(0, 110, 10);\n    // var val_tmp = val_options[~~(Math.random() * val_options.length)];\n\n    debugger;\n    var random_val = [];\n\n    for (var i = 0; i <= nr_train_a_trial; i++) {\n      var val_options = range(0, 110, 10);\n      var val_tmp = val_options[~~(Math.random() * val_options.length)];\n\n      do {\n        var val_options = range(0, 110, 10);\n        var val_tmp = val_options[~~(Math.random() * val_options.length)];\n      } while (random_val[i - 1] === tmp); // make sure it changes color every time\n\n\n      random_val[i] = tmp;\n    }\n\n    ;\n    debugger;\n    var corr_pos = [1, 2]; //1 is left and 2 is right\n\n    shuffle(corr_pos);\n    console.log(corr_pos);\n    let trialSgmMu = Array(9).fill().map(() => Array(3).fill(0));\n    let trialRT = Array(9).fill().map(() => Array(3).fill(0));\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"TrainingTaskA\",\n      traintrialNum: 1,\n      //adapt\n      trialRT: trialRT,\n      choiceTime0: 0,\n      traintrialTotal: 9,\n      //adapt\n      trialSgmMu: trialSgmMu,\n      timerCountDur: 10,\n      timePassed: false,\n      feedback: false,\n      mounted: 0,\n      // trialTime: null,\n      // trialScore: null,\n      valTrainElem: val_tmp,\n      ansOne: 20,\n      ansTwo: 10\n    }; // this.displayFeedback = this.displayFeedback.bind(this)\n\n    /* prevents page from going to the right/left when arrows are pressed .*/\n\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      } else if (e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  } /////////////////////////////////////////////////////////////////////////////////\n\n\n  handleAnswersLocal(key_pressed) {\n    var curText = this.state.instructScreenText;\n    var whichButton = key_pressed;\n\n    if (whichButton === 4) {\n      this.setState({\n        instructScreenText: curText - 1\n      });\n    } else if (whichButton === 5) {\n      this.setState({\n        instructScreenText: curText + 1\n      });\n    }\n  }\n\n  // componentDidMount() {\n  //     setTimeout(\n  //       function() {\n  //         this.setState({\n  //           mounted: 1,\n  //         });\n  //       }\n  //       .bind(this),\n  //       5000\n  //     );\n  //   }\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n  trainCheck(pressed, time_pressed) {\n    var traintrialNum = this.state.traintrialNum; //quiz question number (this needs to be rest to 1)\n\n    var trialRT = time_pressed - this.state.trialTime;\n    var corAns = this.state.outcomeAnsLog[traintrialNum - 1];\n    var trialCorLog = this.state.trialCorLog; //[1,1,1,0...]\n\n    var trialScore = this.state.trialScore; //sum of the correct answers\n\n    var trialCor = this.state.trialCor;\n\n    if (pressed === corAns) {\n      trialCor = 1;\n      trialCorLog[traintrialNum - 1] = 1;\n      trialScore = trialScore + 1;\n    } else {\n      trialCor = 0;\n      trialCorLog[traintrialNum - 1] = 0;\n    }\n\n    this.setState({\n      trialKeypress: pressed,\n      trialRT: trialRT,\n      trialCor: trialCor,\n      trialCorLog: trialCorLog,\n      trialScore: trialScore\n    });\n    setTimeout(function () {\n      this.trialSave();\n    }.bind(this), 5);\n  } /////////////////////////////////////////////////////////////////////////////////\n\n\n  render() {\n    setTimeout(() => {\n      this.setState({\n        timePassed: true\n      });\n    }, 100); //show elements\n\n    if (!this.state.timePassed) {\n      return /*#__PURE__*/_jsxDEV(ElementsOneDisplay, {\n        value: this.state.valTrainElem,\n        traintrialTotal: this.state.traintrialTotal,\n        traintrialNum: this.state.traintrialNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this);\n    } else {\n      // if (this.state.timePassed===true && this.state.feedback===false){\n      document.addEventListener(\"keyup\", this._handleInstructKey);\n      let choiceTime0 = Math.round(performance.now());\n\n      let text = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [\"How large is the alien population?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this);\n\n      let text2 = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [\"The true population on the planet was \", 50, \" mio.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this);\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", this.state.feedback ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cockpit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: text2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cockpit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.main,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.container_1,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.right,\n                children: this.state.ansTwo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.left,\n                children: this.state.ansOne\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this);\n    }\n  } /////////////////////////////////////////////////////////////////////////////////\n\n\n  saveSgmMu(result, time) {\n    let trialSgmMu = this.state.trialSgmMu;\n    let trialRT = this.state.trialRT;\n    let traintrialNum = this.state.traintrialNum;\n    trialSgmMu[traintrialNum - 1][1] = result.sgm;\n    trialSgmMu[traintrialNum - 1][2] = result.mu;\n    trialRT[traintrialNum - 1][0] = traintrialNum;\n    trialRT[traintrialNum - 1][1] = time;\n    trialRT[traintrialNum - 1][2] = Math.round(performance.now());\n    trialRT[traintrialNum - 1][3] = trialRT[traintrialNum - 1][2] - time;\n    this.setState({\n      trialSgmMu: trialSgmMu,\n      trialRT: trialRT,\n      feedback: true,\n      traintrialNum: traintrialNum + 1\n    });\n  }\n\n}\n\nexport default _c = withRouter(TrainingTaskA);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTaskA.js"],"names":["React","withRouter","DATABASE_URL","styles","ImageBackground","View","Image","StyleSheet","Text","range","Slider","OutcomeSlider","OutcomeSliderBar","ElementsOneDisplay","shuffle","array","currentIndex","length","randomIndex","Math","floor","random","TrainingTaskA","Component","constructor","props","_handleTrainKey","event","pressed","time_pressed","keyCode","round","performance","now","trainCheck","nr_train_a_trial","random_val","i","val_options","val_tmp","tmp","corr_pos","console","log","trialSgmMu","Array","fill","map","trialRT","state","traintrialNum","choiceTime0","traintrialTotal","timerCountDur","timePassed","feedback","mounted","valTrainElem","ansOne","ansTwo","window","addEventListener","e","target","document","body","preventDefault","handleAnswersLocal","key_pressed","curText","instructScreenText","whichButton","setState","trialTime","corAns","outcomeAnsLog","trialCorLog","trialScore","trialCor","trialKeypress","setTimeout","trialSave","bind","render","_handleInstructKey","text","questions","text2","cockpit","main","container_1","right","left","saveSgmMu","result","time","sgm","mu"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport { ImageBackground, View, Image, StyleSheet, Text } from \"react-native\";\nimport { range } from \"lodash\";\n\nimport Slider from \"./slider\";\nimport OutcomeSlider from \"./sliderOutcome\";\nimport OutcomeSliderBar from \"./sliderOutcomeBar\";\n\nimport ElementsOneDisplay from \"./elementsOnedisplay\";\n////////////////////////////////////////////////////////////////////////////////\nfunction shuffle(array) {\n  let currentIndex = array.length,  randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex != 0) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n/////////////////////////////////////////////////////////////////////////////////\n\nclass TrainingTaskA extends React.Component {\n  constructor(props) {\n    super(props);\n\n    var nr_train_a_trial = 10;\n    // var val_options = range(0, 110, 10);\n    // var val_tmp = val_options[~~(Math.random() * val_options.length)];\n\ndebugger;\nvar random_val=[];\n    for (var i=0; i<=nr_train_a_trial; i++) {\n      var val_options = range(0, 110, 10);\n      var val_tmp = val_options[~~(Math.random() * val_options.length)];\n      do {\n        var val_options = range(0, 110, 10);\n        var val_tmp = val_options[~~(Math.random() * val_options.length)];\n\n      } while (random_val[i-1]===tmp); // make sure it changes color every time\n      random_val[i] = tmp;\n      };\n\n\n\n\ndebugger;\n    var corr_pos = [1, 2];//1 is left and 2 is right\n    shuffle(corr_pos);\n    console.log(corr_pos );\n\n    let trialSgmMu = Array(9)\n      .fill()\n      .map(() => Array(3).fill(0));\n    let trialRT = Array(9)\n      .fill()\n      .map(() => Array(3).fill(0));\n\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"TrainingTaskA\",\n      traintrialNum: 1, //adapt\n      trialRT: trialRT,\n      choiceTime0: 0,\n      traintrialTotal: 9, //adapt\n      trialSgmMu: trialSgmMu,\n      timerCountDur: 10,\n      timePassed: false,\n      feedback: false,\n      mounted: 0,\n      // trialTime: null,\n      // trialScore: null,\n      valTrainElem: val_tmp,\n      ansOne: 20,\n      ansTwo: 10,\n    };\n    // this.displayFeedback = this.displayFeedback.bind(this)\n    /* prevents page from going to the right/left when arrows are pressed .*/\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      } else if (e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  }\n  /////////////////////////////////////////////////////////////////////////////////\n  handleAnswersLocal(key_pressed) {\n    var curText = this.state.instructScreenText;\n    var whichButton = key_pressed;\n\n    if (whichButton === 4) {\n      this.setState({ instructScreenText: curText - 1 });\n    } else if (whichButton === 5) {\n      this.setState({ instructScreenText: curText + 1 });\n    }\n}\n\n_handleTrainKey = (event) => {\n  var pressed;\n  var time_pressed;\n\n  switch (event.keyCode) {\n    case 49:\n      pressed = 1;\n      time_pressed = Math.round(performance.now());\n      this.trainCheck(pressed, time_pressed);\n      break;\n    case 50:\n      pressed = 2;\n      time_pressed = Math.round(performance.now());\n      this.trainCheck(pressed, time_pressed);\n      break;\n    case 51:\n      pressed = 3;\n      time_pressed = Math.round(performance.now());\n      this.trainCheck(pressed, time_pressed);\n      break;\n    //this is keycode for numpad\n    case 97:\n      pressed = 1;\n      time_pressed = Math.round(performance.now());\n      this.trainCheck(pressed, time_pressed);\n      break;\n    case 98:\n      pressed = 2;\n      time_pressed = Math.round(performance.now());\n      this.trainCheck(pressed, time_pressed);\n      break;\n    case 99:\n      pressed = 3;\n      time_pressed = Math.round(performance.now());\n      this.trainCheck(pressed, time_pressed);\n      break;\n    default:\n  }\n};\n  // componentDidMount() {\n  //     setTimeout(\n  //       function() {\n  //         this.setState({\n  //           mounted: 1,\n  //         });\n  //       }\n  //       .bind(this),\n  //       5000\n  //     );\n  //   }\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n  trainCheck(pressed, time_pressed) {\n    var traintrialNum = this.state.traintrialNum; //quiz question number (this needs to be rest to 1)\n    var trialRT = time_pressed - this.state.trialTime;\n    var corAns = this.state.outcomeAnsLog[traintrialNum - 1];\n    var trialCorLog = this.state.trialCorLog; //[1,1,1,0...]\n    var trialScore = this.state.trialScore; //sum of the correct answers\n    var trialCor = this.state.trialCor;\n\n    if (pressed === corAns) {\n      trialCor = 1;\n      trialCorLog[traintrialNum - 1] = 1;\n      trialScore = trialScore + 1;\n    } else {\n      trialCor = 0;\n      trialCorLog[traintrialNum - 1] = 0;\n    }\n\n    this.setState({\n      trialKeypress: pressed,\n      trialRT: trialRT,\n      trialCor: trialCor,\n      trialCorLog: trialCorLog,\n      trialScore: trialScore,\n    });\n\n    setTimeout(\n      function () {\n        this.trialSave();\n      }.bind(this),\n      5\n    );\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////\n  render() {\n    setTimeout(() => {\n      this.setState({ timePassed: true });\n    }, 100); //show elements\n    if (!this.state.timePassed) {\n      return (\n        <ElementsOneDisplay\n          value={this.state.valTrainElem}\n          traintrialTotal={this.state.traintrialTotal}\n          traintrialNum={this.state.traintrialNum}\n        />\n      );\n    } else {\n    // if (this.state.timePassed===true && this.state.feedback===false){\n      document.addEventListener(\"keyup\", this._handleInstructKey);\n      let choiceTime0 = Math.round(performance.now());\n      let text = (\n        <div className={styles.questions}>\n          How large is the alien population?\n          <br />\n          <br />\n          <br />\n        </div>\n      );\n\n      let text2 = (\n        <div className={styles.questions}>\n          The true population on the planet was {50} mio.\n          <br />\n          <br />\n          <br />\n        </div>\n      );\n\n      return (\n        <div>\n          {\" \"}\n          {this.state.feedback ? (\n            <div className={styles.cockpit}>\n              <div>{text2}</div>\n            </div>\n          ) : (\n            <div className={styles.cockpit}>\n              <div>{text}</div>\n              <br />\n              <div className={styles.main}>\n                  <div className={styles.container_1}>\n                    <span className={styles.right}>{this.state.ansTwo}</span>\n                    <span className={styles.left}>{this.state.ansOne}</span>\n                  </div>\n                <br />\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////\n\n  saveSgmMu(result, time) {\n    let trialSgmMu = this.state.trialSgmMu;\n    let trialRT = this.state.trialRT;\n    let traintrialNum = this.state.traintrialNum;\n    trialSgmMu[traintrialNum - 1][1] = result.sgm;\n    trialSgmMu[traintrialNum - 1][2] = result.mu;\n    trialRT[traintrialNum - 1][0] = traintrialNum;\n    trialRT[traintrialNum - 1][1] = time;\n    trialRT[traintrialNum - 1][2] = Math.round(performance.now());\n    trialRT[traintrialNum - 1][3] = trialRT[traintrialNum - 1][2] - time;\n    this.setState({\n      trialSgmMu: trialSgmMu,\n      trialRT: trialRT,\n      feedback: true,\n      traintrialNum: traintrialNum + 1,\n    });\n  }\n}\n\nexport default withRouter(TrainingTaskA);\n"]},"metadata":{},"sourceType":"module"}