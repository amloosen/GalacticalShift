{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingIntroC.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Cockpit from \"./img/CockpitBlank.jpg\";\nimport img_intro1 from \"./intro/ExamplePicture1.jpg\"; /////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar trialTotal = 9; /////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n// REACT COMPONENT START\n\nclass TrainingIntroB extends React.Component {\n  constructor(props) {\n    super(props); // var user_info = this.props.location.state.user_info;\n\n    this._handleInstructKey = event => {\n      var key_pressed;\n\n      switch (event.keyCode) {\n        case 37:\n          //    this is left arrow\n          key_pressed = 4;\n          this.handleInstructLocal(key_pressed);\n          break;\n\n        case 39:\n          //    this is right arrow\n          key_pressed = 5;\n          this.handleInstructLocal(key_pressed);\n          break;\n\n        case 32:\n          //    this is SPACEBAR\n          key_pressed = 10;\n          this.handleInstructLocal(key_pressed);\n          break;\n\n        default:\n      }\n    };\n\n    var currentDate = new Date();\n    var introTrainingStartTime = currentDate.toTimeString(); /////////////////////////////////////////////////////////////////////////////////\n    // SET COMPONENT STATES\n\n    this.state = {\n      // userID: userID,\n      sectionStartTime: introTrainingStartTime,\n      taskSessionTry: 1,\n      taskSession: \"TrainingIntroB\",\n      instructScreenText: 1,\n      // outcomeNotAnsLog2: outcomeNotAnsLog2,\n      // trialNum: 1,\n      // trialTotal: trialTotal,\n      // trialRT: 0,\n      // trialTime: 0,\n      instructScreen: true // testScreen: false,\n      //\n      // debug: false //if true, skip this section\n\n    };\n    this.handleInstructLocal = this.handleInstructLocal.bind(this);\n    /* prevents page from going down when space bar is hit .*/\n\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 32 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  } /////////////////////////////////////////////////////////////////////////////////\n  // END COMPONENT STATE\n  // This handles instruction screen within the component USING KEYBOARD\n\n\n  handleInstructLocal(key_pressed) {\n    var curText = this.state.instructScreenText;\n    var whichButton = key_pressed;\n\n    if (whichButton === 4 && curText > 1) {\n      this.setState({\n        instructScreenText: curText - 1\n      });\n    } else if (whichButton === 5 && curText < 3) {\n      this.setState({\n        instructScreenText: curText + 1\n      });\n    } else if (curText === 3 && whichButton === 10) {\n      setTimeout(function () {\n        this.redirectToNextStage();\n      }.bind(this), 0);\n    }\n  } // handle key key_pressed\n\n\n  /////////////////////////////////////////////////////////////////////////////////\n  redirectToNextStage() {\n    document.removeEventListener(\"keyup\", this._handleInstructKey);\n    document.removeEventListener(\"keyup\", this._handleDebugKey);\n    this.props.history.push({\n      pathname: `/TrainingTaskC`,\n      state: {\n        userID: this.state.userID,\n        date: this.state.date,\n        startTime: this.state.startTime\n      }\n    });\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    setTimeout(function () {\n      this.setState({\n        mounted: 1\n      });\n    }.bind(this), 5000);\n  }\n\n  componentWillUnmount() {\n    // fix Warning: Can't perform a React state update on an unmounted component\n    this.setState = (state, callback) => {\n      return;\n    };\n  } //////////////////////////////////////////////////////////////////////////////////////////////\n\n\n  render() {\n    let text;\n\n    if (this.state.instructScreen === true) {\n      if (this.state.instructScreenText === 1) {\n        document.addEventListener(\"keyup\", this._handleInstructKey);\n        text = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.main,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.center,\n              children: \"TRAINING IV\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), \"Great job!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), \"You will now train the task of the main experiment.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), \"From now on, you will be asked to use the slider you practiced with before to indicate the population size.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), \"This way, you can indicate your estimate as well as your certainty in your estimate by changing the shape of the slider.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.center,\n              children: [\"[\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"NEXT \\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 18\n              }, this), \"]\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this);\n      } else if (this.state.instructScreenText === 2) {\n        text = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.main,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.center,\n              children: \"TRAINING IV\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), \"The task will be conceptually similar to the previous training trials. The introduced challenges will now be combined.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), \"Additionally, the association between the instrument and the population size will be more complex.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), \"Again, you have to find out \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"(1)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 43\n            }, this), \" which instrument is important and \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"(2)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 32\n            }, this), \" how it is associated with the population size. This mapping as well as the instrument of importance will \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"(3)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 31\n            }, this), \" change over time. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 70\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), \"Try to detect these changes and adapt your estimate accordingly.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.center,\n              children: [\"[\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"NEXT \\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 18\n              }, this), \"]\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this);\n      } else if (this.state.instructScreenText === 3) {\n        text = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.main,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.center,\n              children: \"TRAINING IV\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), \"For now, we will give you some help. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 52\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), \"For this training stage, we will show you which instrument is of importance by highlighting it.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.center,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: styles.relevInd,\n                src: img_intro1,\n                alt: \"example1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.center,\n              children: [\"Press the [\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"SPACEBAR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 28\n              }, this), \"] to start the training.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.center,\n              children: [\"[\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u2190 BACK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 18\n              }, this), \"]\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cockpit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.textblock,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(TrainingIntroB);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingIntroC.js"],"names":["React","withRouter","DATABASE_URL","styles","Cockpit","img_intro1","trialTotal","TrainingIntroB","Component","constructor","props","_handleInstructKey","event","key_pressed","keyCode","handleInstructLocal","currentDate","Date","introTrainingStartTime","toTimeString","state","sectionStartTime","taskSessionTry","taskSession","instructScreenText","instructScreen","bind","window","addEventListener","e","target","document","body","preventDefault","curText","whichButton","setState","setTimeout","redirectToNextStage","removeEventListener","_handleDebugKey","history","push","pathname","userID","date","startTime","componentDidMount","scrollTo","mounted","componentWillUnmount","callback","render","text","main","center","relevInd","cockpit","textblock"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\n\nimport styles from \"./style/taskStyle.module.css\";\nimport Cockpit from \"./img/CockpitBlank.jpg\";\n\nimport img_intro1 from \"./intro/ExamplePicture1.jpg\";\n/////////\nvar trialTotal = 9;\n\n/////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n// REACT COMPONENT START\nclass TrainingIntroB extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // var user_info = this.props.location.state.user_info;\n    var currentDate = new Date();\n    var introTrainingStartTime = currentDate.toTimeString();\n\n    /////////////////////////////////////////////////////////////////////////////////\n    // SET COMPONENT STATES\n    this.state = {\n      // userID: userID,\n      sectionStartTime: introTrainingStartTime,\n      taskSessionTry: 1,\n      taskSession: \"TrainingIntroB\",\n      instructScreenText: 1,\n\n      // outcomeNotAnsLog2: outcomeNotAnsLog2,\n\n      // trialNum: 1,\n      // trialTotal: trialTotal,\n      // trialRT: 0,\n      // trialTime: 0,\n      instructScreen: true,\n      // testScreen: false,\n      //\n      // debug: false //if true, skip this section\n    };\n\n    this.handleInstructLocal = this.handleInstructLocal.bind(this);\n\n    /* prevents page from going down when space bar is hit .*/\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 32 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  }\n  /////////////////////////////////////////////////////////////////////////////////\n  // END COMPONENT STATE\n\n  // This handles instruction screen within the component USING KEYBOARD\n  handleInstructLocal(key_pressed) {\n    var curText = this.state.instructScreenText;\n    var whichButton = key_pressed;\n\n    if (whichButton === 4 && curText > 1) {\n      this.setState({ instructScreenText: curText - 1 });\n    } else if (whichButton === 5 && curText < 3) {\n      this.setState({ instructScreenText: curText + 1 });\n    } else if (curText === 3 && whichButton === 10) {\n      setTimeout(\n        function () {\n          this.redirectToNextStage();\n        }.bind(this),\n        0\n      );\n    }\n  }\n\n  // handle key key_pressed\n  _handleInstructKey = (event) => {\n    var key_pressed;\n\n    switch (event.keyCode) {\n      case 37:\n        //    this is left arrow\n        key_pressed = 4;\n        this.handleInstructLocal(key_pressed);\n        break;\n      case 39:\n        //    this is right arrow\n        key_pressed = 5;\n        this.handleInstructLocal(key_pressed);\n        break;\n      case 32:\n        //    this is SPACEBAR\n        key_pressed = 10;\n        this.handleInstructLocal(key_pressed);\n        break;\n      default:\n    }\n  };\n  /////////////////////////////////////////////////////////////////////////////////\n  redirectToNextStage() {\n    document.removeEventListener(\"keyup\", this._handleInstructKey);\n    document.removeEventListener(\"keyup\", this._handleDebugKey);\n    this.props.history.push({\n      pathname: `/TrainingTaskC`,\n      state: {\n        userID: this.state.userID,\n        date: this.state.date,\n        startTime: this.state.startTime,\n      },\n    });\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n\n    setTimeout(\n      function () {\n        this.setState({\n          mounted: 1,\n        });\n      }.bind(this),\n      5000\n    );\n  }\n\n  componentWillUnmount() {\n    // fix Warning: Can't perform a React state update on an unmounted component\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  render() {\n    let text;\n    if (this.state.instructScreen === true) {\n      if (this.state.instructScreenText === 1) {\n        document.addEventListener(\"keyup\", this._handleInstructKey);\n        text = (\n          <div className={styles.main}>\n            <p>\n              <span className={styles.center}>TRAINING IV</span>\n              <br />\n              Great job!\n              <br />\n              <br />\n              You will now train the task of the main experiment.\n              <br />\n              <br />\n              From now on, you will be asked to use the slider you practiced\n              with before to indicate the population size.\n              <br />\n              <br />\n              This way, you can indicate your estimate as well as your certainty\n              in your estimate by changing the shape of the slider.\n              <br />\n              <br />\n              <span className={styles.center}>\n                [<strong>NEXT →</strong>]\n              </span>\n            </p>\n          </div>\n        );\n      } else if (this.state.instructScreenText === 2) {\n        text = (\n          <div className={styles.main}>\n            <p>\n              <span className={styles.center}>TRAINING IV</span>\n              <br />\n              The task will be conceptually similar to the previous training\n              trials. The introduced challenges will now be combined.\n              <br />\n              <br />\n              Additionally, the association between the instrument and the\n              population size will be more complex.\n              <br />\n              <br />\n              Again, you have to find out <strong>(1)</strong> which instrument\n              is important and <strong>(2)</strong> how it is associated with\n              the population size. This mapping as well as the instrument of\n              importance will <strong>(3)</strong> change over time. <br />\n              <br />\n              Try to detect these changes and adapt your estimate accordingly.\n              <br />\n              <br />\n              <span className={styles.center}>\n                [<strong>NEXT →</strong>]\n              </span>\n            </p>\n          </div>\n        );\n      } else if (this.state.instructScreenText === 3) {\n        text = (\n          <div className={styles.main}>\n            <p>\n              <span className={styles.center}>TRAINING IV</span>\n              <br />\n              For now, we will give you some help. <br />\n              <br />\n              For this training stage, we will show you which instrument is of\n              importance by highlighting it.\n              <br />\n              <br />\n              <span className={styles.center}>\n                <img\n                  className={styles.relevInd}\n                  src={img_intro1}\n                  alt=\"example1\"\n                />\n              </span>\n              <br /> <br />\n              <br /> <br />\n              <span className={styles.center}>\n                Press the [<strong>SPACEBAR</strong>] to start the training.\n              </span>\n              <span className={styles.center}>\n                [<strong>← BACK</strong>]\n              </span>\n            </p>\n          </div>\n        );\n      }\n    }\n\n    return (\n      <div className={styles.cockpit}>\n        <div className={styles.textblock}>{text}</div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(TrainingIntroB);\n"]},"metadata":{},"sourceType":"module"}