{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/sliderOutcomeBar.js\";\nimport { range } from \"lodash\";\nimport normalPdf from \"normal-pdf\";\nimport { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OutcomeSliderBar = props => {\n  const trueValue = props.value;\n  const xValues = range(0, 100, 0.5);\n  const yValues = xValues.map(x => normalPdf(x, props.mu, props.sgm));\n  const yValuesAdaptNew = yValues.map(function (element) {\n    return element * 1000;\n  });\n  const xValuesOutcome = new Array(200).fill(null);\n  xValuesOutcome[trueValue * 2] = yValuesAdaptNew[trueValue * 2];\n  const data = {\n    series: [{\n      data: yValuesAdaptNew,\n      type: \"line\"\n    }, {\n      data: xValuesOutcome,\n      type: \"column\"\n    }],\n    options: {\n      chart: {\n        toolbar: {\n          show: false\n        },\n        type: \"line\",\n        zoom: {\n          enabled: false\n        }\n      },\n      colors: [\"#1C00ff00\", \"#DAA520\"],\n      fill: {\n        colors: [\"#1C00ff00\", \"#DAA520\"]\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: \"smooth\"\n      },\n      markers: {\n        size: 0\n      },\n      yaxis: {\n        min: 0,\n        labels: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        lines: {\n          show: false\n        }\n      },\n      xaxis: {\n        color: \"#d2eaf2\",\n        // min: 0,\n        // max: 100,\n        tickAmount: 5,\n        overwriteCategories: [\"0\", \"25\", \"50\", \"75\", \"100\"],\n        lines: {\n          show: false\n        },\n        axisTicks: {\n          color: \"#e7e6e2\",\n          width: 3,\n          height: 10\n        },\n        axisBorder: {\n          show: true,\n          color: \"#e7e6e2\",\n          height: 4,\n          width: \"100%\"\n        },\n        labels: {\n          rotate: 0,\n          style: {\n            fontSize: \"20px\",\n            colors: [\"#e7e6e2\", \"#e7e6e2\", \"#e7e6e2\", \"#e7e6e2\", \"#e7e6e2\"],\n            offsetX: 0,\n            offsetY: 0\n          }\n        }\n      },\n      grid: {\n        show: false\n      },\n      tooltip: {\n        enabled: false\n      },\n      legend: {\n        show: false\n      }\n    }\n  }; //\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      options: data.options,\n      series: data.series,\n      type: \"line\",\n      height: 350,\n      width: 700,\n      align: \"center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_c = OutcomeSliderBar;\nexport default OutcomeSliderBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"OutcomeSliderBar\");","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/sliderOutcomeBar.js"],"names":["range","normalPdf","useEffect","useState","ReactApexChart","OutcomeSliderBar","props","trueValue","value","xValues","yValues","map","x","mu","sgm","yValuesAdaptNew","element","xValuesOutcome","Array","fill","data","series","type","options","chart","toolbar","show","zoom","enabled","colors","dataLabels","stroke","curve","markers","size","yaxis","min","labels","axisTicks","lines","xaxis","color","tickAmount","overwriteCategories","width","height","axisBorder","rotate","style","fontSize","offsetX","offsetY","grid","tooltip","legend"],"mappings":"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","sourcesContent":["import { range } from \"lodash\";\nimport normalPdf from \"normal-pdf\";\nimport { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nconst OutcomeSliderBar = (props) => {\n  const trueValue = props.value;\n  const xValues = range(0, 100, 0.5);\n  const yValues = xValues.map((x) => normalPdf(x, props.mu, props.sgm));\n  const yValuesAdaptNew = yValues.map(function (element) {\n    return element * 1000;\n  });\n  const xValuesOutcome = new Array(200).fill(null);\n  xValuesOutcome[trueValue * 2] = yValuesAdaptNew[trueValue * 2];\n\n  const data = {\n    series: [\n      { data: yValuesAdaptNew, type: \"line\" },\n      { data: xValuesOutcome, type: \"column\" },\n    ],\n    options: {\n      chart: {\n        toolbar: {\n          show: false,\n        },\n        type: \"line\",\n        zoom: {\n          enabled: false,\n        },\n      },\n      colors: [\"#1C00ff00\", \"#DAA520\"],\n      fill: { colors: [\"#1C00ff00\", \"#DAA520\"] },\n      dataLabels: {\n        enabled: false,\n      },\n      stroke: {\n        curve: \"smooth\",\n      },\n      markers: {\n        size: 0,\n      },\n      yaxis: {\n        min: 0,\n        labels: { show: false },\n        axisTicks: {\n          show: false,\n        },\n        lines: {\n          show: false,\n        },\n      },\n      xaxis: {\n        color: \"#d2eaf2\",\n        // min: 0,\n        // max: 100,\n        tickAmount: 5,\n        overwriteCategories: [\"0\", \"25\", \"50\", \"75\", \"100\"],\n        lines: {\n          show: false,\n        },\n        axisTicks: {\n          color: \"#e7e6e2\",\n          width: 3,\n          height: 10,\n        },\n        axisBorder: {\n          show: true,\n          color: \"#e7e6e2\",\n          height: 4,\n          width: \"100%\",\n        },\n        labels: {\n          rotate: 0,\n          style: {\n            fontSize: \"20px\",\n            colors: [\"#e7e6e2\", \"#e7e6e2\", \"#e7e6e2\", \"#e7e6e2\", \"#e7e6e2\"],\n            offsetX: 0,\n            offsetY: 0,\n          },\n        },\n      },\n      grid: { show: false },\n      tooltip: { enabled: false },\n      legend: { show: false },\n    },\n  };\n  //\n\n  return (\n    <div>\n      <ReactApexChart\n        options={data.options}\n        series={data.series}\n        type=\"line\"\n        height={350}\n        width={700}\n        align=\"center\"\n      />\n    </div>\n  );\n};\nexport default OutcomeSliderBar;\n"]},"metadata":{},"sourceType":"module"}