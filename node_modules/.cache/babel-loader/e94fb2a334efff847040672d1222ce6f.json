{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTaskA.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport { ImageBackground, View, Image, StyleSheet, Text } from \"react-native\";\nimport { range } from \"lodash\";\nimport Slider from \"./slider\";\nimport OutcomeSlider from \"./sliderOutcome\";\nimport OutcomeSliderBar from \"./sliderOutcomeBar\";\nimport ElementsOneDisplay from \"./elementsOnedisplay\"; ////////////////////////////////////////////////////////////////////////////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction shuffle(array) {\n  let currentIndex = array.length,\n      randomIndex; // While there remain elements to shuffle...\n\n  while (currentIndex != 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--; // And swap it with the current element.\n\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n} /////////////////////////////////////////////////////////////////////////////////\n\n\nclass TrainingTaskA extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._handleTrainKey = event => {\n      var pressed;\n      debugger;\n\n      switch (event.keyCode) {\n        case 37:\n          //    this is left arrow\n          pressed = 4;\n          this.trainCheck(pressed);\n          break;\n\n        case 39:\n          //    this is right arrow\n          pressed = 5;\n          this.trainCheck(pressed);\n          break;\n\n        default:\n      }\n    };\n\n    var nr_train_a_trial = 10; // var val_options = range(0, 110, 10);\n    // var val_tmp = val_options[~~(Math.random() * val_options.length)];\n\n    var val_options = range(0, 110, 10);\n    var random_val = [];\n\n    for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n      var val_tmp = val_options[~~(Math.random() * val_options.length)];\n\n      do {\n        var val_tmp = val_options[~~(Math.random() * val_options.length)];\n      } while (random_val[i - 1] === val_tmp); // make sure it changes color every time\n\n\n      random_val[i] = val_tmp;\n    }\n\n    var corr_pos = [1, 2]; //1 is left and 2 is right\n\n    shuffle(corr_pos);\n    console.log(corr_pos);\n    let array_tmp = Array(nr_train_a_trial).fill(0);\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"TrainingTaskA\",\n      trialKeypress: array_tmp,\n      traintrialNum: 1,\n      traintrialTotal: nr_train_a_trial,\n      feedback: false,\n      timePassed: false,\n      timePassed2: false,\n      mounted: 0,\n      rightCodeAns: [4, 4, 4, 4, 4, 5, 5, 5, 5],\n      valTrainElem: random_val,\n      trainAcc: array_tmp,\n      ansOne: 20,\n      ansTwo: random_val[0]\n    };\n    this.trainCheck = this.trainCheck.bind(this); // this.displayFeedback = this.displayFeedback.bind(this)\n\n    /* prevents page from going to the right/left when arrows are pressed .*/\n\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      } else if (e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  } /////////////////////////////////////////////////////////////////////////////////\n\n\n  trainCheck(pressed) {\n    var corAns = this.state.rightCodeAns[this.state.traintrialNum - 1];\n    var trainAcc = this.state.trainAcc;\n\n    if (pressed === corAns) {\n      trainAcc[this.state.traintrialNum - 1] = 1;\n    } else {\n      trainAcc[this.state.traintrialNum - 1] = 0;\n    }\n\n    this.setState({\n      trialKeypress: pressed,\n      trainAcc: trainAcc,\n      feedback: true\n    });\n  }\n\n  nextTrial() {\n    document.removeEventListener(\"keyup\", this._handleTrainKey);\n    debugger;\n    var traintrialNum_tmp = this.state.traintrialNum + 1;\n    this.setState({\n      traintrialNum: traintrialNum_tmp,\n      feedback: false,\n      timePassed: false,\n      timePassed2: false\n    });\n  } // componentDidMount() {\n  //     setTimeout(\n  //       function() {\n  //         this.setState({\n  //           mounted: 1,\n  //         });\n  //       }\n  //       .bind(this),\n  //       5000\n  //     );\n  //   }\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n  // setTimeout(\n  //   function () {\n  //     this.trainTrialSave();\n  //   }.bind(this),\n  //   5\n  // );\n  /////////////////////////////////////////////////////////////////////////////////\n\n\n  render() {\n    setTimeout(() => {\n      this.setState({\n        timePassed: true\n      });\n    }, 100); //show elements\n\n    if (!this.state.timePassed) {\n      return /*#__PURE__*/_jsxDEV(ElementsOneDisplay, {\n        value: this.state.valTrainElem,\n        traintrialTotal: this.state.traintrialTotal,\n        traintrialNum: this.state.traintrialNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this);\n    } else if (this.state.timePassed === true) {\n      let text = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [\"How large is the alien population?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this);\n\n      let text2 = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [\"The true population on the planet was \", 50, \" mio.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this);\n\n      document.addEventListener(\"keyup\", this._handleTrainKey);\n\n      if (this.state.feedback == true) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cockpit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: text2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 16\n        }, this);\n      } else if (this.state.feedback == false) {\n        setTimeout(() => {\n          this.setState({\n            timePassed2: true\n          });\n        }, 1000); //show elements\n\n        if (!this.state.timePassed) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.cockpit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.main,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.container_1,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.right,\n                  children: this.state.ansTwo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.left,\n                  children: this.state.ansOne\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this);\n        } else {\n          this.nextTrial();\n        }\n      }\n    }\n  }\n\n} /////////////////////////////////////////////////////////////////////////////////\n\n\nexport default _c = withRouter(TrainingTaskA);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTaskA.js"],"names":["React","withRouter","DATABASE_URL","styles","ImageBackground","View","Image","StyleSheet","Text","range","Slider","OutcomeSlider","OutcomeSliderBar","ElementsOneDisplay","shuffle","array","currentIndex","length","randomIndex","Math","floor","random","TrainingTaskA","Component","constructor","props","_handleTrainKey","event","pressed","keyCode","trainCheck","nr_train_a_trial","val_options","random_val","i","val_tmp","corr_pos","console","log","array_tmp","Array","fill","state","trialKeypress","traintrialNum","traintrialTotal","feedback","timePassed","timePassed2","mounted","rightCodeAns","valTrainElem","trainAcc","ansOne","ansTwo","bind","window","addEventListener","e","target","document","body","preventDefault","corAns","setState","nextTrial","removeEventListener","traintrialNum_tmp","render","setTimeout","text","questions","text2","cockpit","main","container_1","right","left"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport { ImageBackground, View, Image, StyleSheet, Text } from \"react-native\";\nimport { range } from \"lodash\";\n\nimport Slider from \"./slider\";\nimport OutcomeSlider from \"./sliderOutcome\";\nimport OutcomeSliderBar from \"./sliderOutcomeBar\";\n\nimport ElementsOneDisplay from \"./elementsOnedisplay\";\n////////////////////////////////////////////////////////////////////////////////\nfunction shuffle(array) {\n  let currentIndex = array.length,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex != 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex],\n    ];\n  }\n\n  return array;\n}\n/////////////////////////////////////////////////////////////////////////////////\n\nclass TrainingTaskA extends React.Component {\n  constructor(props) {\n    super(props);\n\n    var nr_train_a_trial = 10;\n    // var val_options = range(0, 110, 10);\n    // var val_tmp = val_options[~~(Math.random() * val_options.length)];\n    var val_options = range(0, 110, 10);\n    var random_val = [];\n    for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n      var val_tmp = val_options[~~(Math.random() * val_options.length)];\n      do {\n        var val_tmp = val_options[~~(Math.random() * val_options.length)];\n      } while (random_val[i - 1] === val_tmp); // make sure it changes color every time\n      random_val[i] = val_tmp;\n    }\n\n    var corr_pos = [1, 2]; //1 is left and 2 is right\n    shuffle(corr_pos);\n    console.log(corr_pos);\n\n\n    let array_tmp = Array(nr_train_a_trial).fill(0)\n\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"TrainingTaskA\",\n      trialKeypress: array_tmp,\n      traintrialNum: 1,\n      traintrialTotal: nr_train_a_trial,\n      feedback: false,\n      timePassed: false,\n      timePassed2: false,\n      mounted: 0,\n      rightCodeAns:[4,4,4,4,4,5,5,5,5],\n      valTrainElem: random_val,\n      trainAcc: array_tmp,\n      ansOne: 20,\n      ansTwo: random_val[0]\n    };\n\n    this.trainCheck = this.trainCheck.bind(this);\n\n    // this.displayFeedback = this.displayFeedback.bind(this)\n    /* prevents page from going to the right/left when arrows are pressed .*/\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      } else if (e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  }\n  /////////////////////////////////////////////////////////////////////////////////\n  trainCheck(pressed) {\n    var corAns = this.state.rightCodeAns[this.state.traintrialNum - 1];\n    var trainAcc = this.state.trainAcc;\n\n    if (pressed === corAns) {\n      trainAcc[this.state.traintrialNum - 1] = 1;\n    } else {\n      trainAcc[this.state.traintrialNum - 1] = 0;\n    }\n\n    this.setState({\n      trialKeypress: pressed,\n      trainAcc: trainAcc,\n      feedback: true\n    });\n  }\n\n  _handleTrainKey = (event) => {\n    var pressed;\ndebugger;\n    switch (event.keyCode) {\n      case 37:\n        //    this is left arrow\n        pressed = 4;\n        this.trainCheck(pressed);\n        break;\n      case 39:\n        //    this is right arrow\n        pressed = 5;\n        this.trainCheck(pressed);\n        break;\n      default:\n    }\n  };\n\n  nextTrial(){\n    document.removeEventListener(\"keyup\", this._handleTrainKey);\n\ndebugger;\n    var traintrialNum_tmp = this.state.traintrialNum+1;\n    this.setState({\n      traintrialNum: traintrialNum_tmp,\n      feedback: false,\n      timePassed: false,\n      timePassed2: false,\n    });\n  }\n  // componentDidMount() {\n  //     setTimeout(\n  //       function() {\n  //         this.setState({\n  //           mounted: 1,\n  //         });\n  //       }\n  //       .bind(this),\n  //       5000\n  //     );\n  //   }\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n\n    // setTimeout(\n    //   function () {\n    //     this.trainTrialSave();\n    //   }.bind(this),\n    //   5\n    // );\n\n  /////////////////////////////////////////////////////////////////////////////////\nrender() {\n    setTimeout(() => {\n      this.setState({ timePassed: true });\n    }, 100); //show elements\n    if (!this.state.timePassed) {\n      return (\n        <ElementsOneDisplay\n          value={this.state.valTrainElem}\n          traintrialTotal={this.state.traintrialTotal}\n          traintrialNum={this.state.traintrialNum}\n        />\n      );\n    } else if (this.state.timePassed===true){\n\n      let text = (\n        <div className={styles.questions}>\n          How large is the alien population?\n          <br />\n          <br />\n          <br />\n        </div>\n      );\n\n      let text2 = (\n        <div className={styles.questions}>\n          The true population on the planet was {50} mio.\n          <br />\n          <br />\n          <br />\n        </div>\n      );\n\n      document.addEventListener(\"keyup\", this._handleTrainKey);\n\n      if (this.state.feedback==true) {\n      return ( <div className={styles.cockpit}>\n              <div>{text2}</div>\n            </div>\n          )\n        }  else if (this.state.feedback==false){\n          setTimeout(() => {\n            this.setState({ timePassed2: true });\n          }, 1000); //show elements\n\n          if (!this.state.timePassed) {return(\n            <div className={styles.cockpit}>\n              <div>{text}</div>\n              <br />\n              <div className={styles.main}>\n                <div className={styles.container_1}>\n                  <span className={styles.right}>{this.state.ansTwo}</span>\n                  <span className={styles.left}>{this.state.ansOne}</span>\n                </div>\n                <br />\n              </div>\n            </div>\n          )} else {this.nextTrial()}\n    }\n  }\n }\n}\n  /////////////////////////////////////////////////////////////////////////////////\n\nexport default withRouter(TrainingTaskA);\n"]},"metadata":{},"sourceType":"module"}