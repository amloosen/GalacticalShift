{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/MainTask.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\"; // import { DATABASE_URL } from \"./config\";\n\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\";\nimport { View } from \"react-native\";\nimport OutcomeSlider from \"./sliderOutcome\";\nimport OutcomeSliderBar from \"./sliderOutcomeBar\";\nimport ElementsFullDisplay from \"./elementsFulldisplay\";\nimport ElementsIndicator from \"./elementsIndicator\";\nimport { range } from \"lodash\"; ////////////////////////////////////////////////////////////////////////////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction shuffle(array) {\n  let currentIndex = array.length,\n      randomIndex; // While there remain elements to shuffle...\n\n  while (currentIndex !== 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--; // And swap it with the current element.\n\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n} //\n\n\nfunction getRandomInt(min, max) {\n  const minimum = Math.ceil(min);\n  const maximum = Math.floor(max);\n  return Math.floor(Math.random() * (maximum - minimum + 1)) + minimum;\n}\n\nfunction getRand(array) {\n  var val_options = range(0, 110, 10);\n  var rand = val_options[~~(Math.random() * val_options.length)]; // var rand = Math.floor(Math.random() * 10);\n\n  if (array.indexOf(rand) === -1) {\n    return rand;\n  } else {\n    return getRand(array);\n  }\n} /////////////////////////////////////////////////////////////////////////////////\n\n\nclass MainTask extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._handleBreakKey = event => {\n      if (event.keyCode === 32) {\n        this.nextTrial(2);\n      }\n    };\n\n    this._handleIndicKey = event => {\n      var pressed;\n\n      switch (event.keyCode) {\n        case 49:\n          pressed = 1;\n          this.nextTrial(1, pressed);\n          break;\n\n        case 50:\n          pressed = 2;\n          this.nextTrial(1, pressed);\n          break;\n\n        case 51:\n          pressed = 3;\n          this.nextTrial(1, pressed);\n          break;\n\n        default:\n      }\n    };\n\n    var randNum = \"struct_\" + getRandomInt(1, 10);\n\n    var StructToRender = require(\"./taskStructs/\" + randNum + \".json\");\n\n    var precededShift = StructToRender[0]; //1=intra-dimensional; 2=extra-dimensional\n\n    var w0 = StructToRender[1];\n    var relevant_w = StructToRender[2];\n    var corPos_sq = StructToRender[3];\n    var val_corr_elem = StructToRender[4];\n    var epsilon = StructToRender[5];\n    var true_pop_size_tmp = StructToRender[6];\n    var true_pop_size = true_pop_size_tmp.map(function (each_element) {\n      return Number(each_element.toFixed(0));\n    });\n    var nr_trial = w0.length; //pregenerate the values of the remaining elements\n\n    var check_al2 = [];\n    var check_al1 = [];\n\n    for (var i = 0; i <= nr_trial - 1; i++) {\n      var restricted = [val_corr_elem[i], 100 - val_corr_elem[i]];\n\n      if (i < nr_trial / 2) {\n        check_al1[i] = getRand(restricted);\n        check_al2[i] = 100 - val_corr_elem[i];\n      } else {\n        check_al1[i] = 100 - val_corr_elem[i];\n        check_al2[i] = getRand(restricted);\n      }\n    }\n\n    var all_element_values = Array(nr_trial).fill().map(() => Array(3).fill(0));\n\n    for (var j = 0; j <= nr_trial - 1; j++) {\n      all_element_values[j][corPos_sq[j] - 1] = val_corr_elem[j];\n\n      if (corPos_sq[j] === 1) {\n        all_element_values[j][1] = check_al1[j];\n        all_element_values[j][2] = check_al2[j];\n      } else if (corPos_sq[j] === 2) {\n        all_element_values[j][0] = check_al1[j];\n        all_element_values[j][2] = check_al2[j];\n      } else if (corPos_sq[j] === 3) {\n        all_element_values[j][0] = check_al1[j];\n        all_element_values[j][1] = check_al2[j];\n      }\n    }\n\n    let trialSgmMu = Array(nr_trial).fill().map(() => Array(3).fill(0));\n    let trialRT = Array(nr_trial).fill().map(() => Array(3).fill(0));\n    let indicKey_tmp = Array(nr_trial).fill().map(() => Array(2).fill(0));\n    let array_tmp = Array(nr_trial).fill(0);\n    let indicReq_tmp = Array(nr_trial).fill(0);\n\n    for (var k = 5; k <= nr_trial - 1; k += 20) {\n      indicReq_tmp[k] = 1;\n    }\n\n    var element_colours = [1, 2, 3]; // from left to right\n\n    shuffle(element_colours);\n    var currentDate = new Date();\n    var MainStartTime = currentDate.toTimeString();\n    this.state = {\n      // userID: this.props.userID,\n      date: currentDate,\n      // startTime: this.props.startTime,\n      sectionStartTime: MainStartTime,\n      taskSession: \"MainTask\",\n      trialTotal: nr_trial,\n      trialPerBlock: 50,\n      trialNum: 1,\n      trialBlockNum: 1,\n      blockTotal: 5,\n      blockNum: 1,\n      indicReq: indicReq_tmp,\n      indicKey: indicKey_tmp,\n      trialRT: trialRT,\n      choiceTime0: 0,\n      element1Col: element_colours[0],\n      element2Col: element_colours[1],\n      element3Col: element_colours[2],\n      indicTrials: [10, 87, 163, 240],\n      //generate by Matlab function linspace(min(10),max(240),4)\n      trialSliderRT: null,\n      trialSgmMu: trialSgmMu,\n      timerCountDur: 10,\n      feedback: false,\n      mounted: 0,\n      timePassed: false,\n      timePassed2: false,\n      all_true_pop_size: true_pop_size,\n      trainAcc: array_tmp,\n      corr_elem_pos: corPos_sq,\n      all_element_values: all_element_values\n    }; // this.displayFeedback = this.displayFeedback.bind(this)\n\n    /* prevents page from going to the right/left when arrows are pressed .*/\n\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      } else if (e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  } /////////////////////////////////////////////////////////////////////////////////\n\n\n  nextTrial(event, pressed) {\n    if (event === 1) {\n      document.removeEventListener(\"keyup\", this._handleBreakKey);\n      var indicReq = this.state.indicReq;\n      indicReq[this.state.trialNum - 1] = 0;\n      var indicKey_tmp = this.state.indicKey;\n      indicKey_tmp[this.state.trialNum - 1][1] = this.state.trialNum;\n      indicKey_tmp[this.state.trialNum - 1][2] = pressed;\n      debugger;\n      this.setState({\n        indicReq: indicReq,\n        indicKey: indicKey_tmp\n      });\n    } else if (event === 2) {\n      document.removeEventListener(\"keyup\", this._handleIndicKey);\n    } else if (event === 0) {\n      if (this.state.trialNum === this.state.trialTotal) {\n        this.redirectToNextStage();\n      } else {\n        if (this.state.trialBlockNum === this.state.trialPerBlock) {\n          var block_tmp = this.state.blockNum + 1;\n          var trialBlockNum_tmp = 1;\n        } else {\n          var trialBlockNum_tmp = this.state.trialBlockNum + 1;\n        }\n\n        var trialNum_tmp = this.state.trialNum + 1;\n        this.setState({\n          trialNum: trialNum_tmp,\n          blockNum: block_tmp,\n          trialBlockNum: trialBlockNum_tmp,\n          feedback: false,\n          timePassed: false,\n          timePassed2: false\n        });\n      }\n    }\n  }\n\n  componentDidMount() {\n    setTimeout(function () {\n      this.setState({\n        mounted: 1\n      });\n    }.bind(this), 5000);\n  }\n\n  componentWillUnmount() {\n    this.setState = (state, callback) => {\n      return;\n    };\n  } //\n  // sendBlock(user_no_, block_no_) {\n  //   // var currentDate   = new Date();\n  //   // var BlockFinishTime    = currentDate.toTimeString();\n  //   // let trial_per_block = this.state.trial_per_block;\n  //   // let ind_block = block_no_-1;\n  //   //\n  //   // var subset_Horizon = this.state.block_info.Horizon.slice(0,trial_per_block);\n  //\n  //   let behaviour = {\n  //     BlockNo: block_no_,\n  //     //                         'Date'                : this.props.user_info.date,\n  //     //                         'UserStartTime'       : this.props.user_info.startTime,\n  //   };\n  // fetch(`${API_URL}/behaviour/` + user_no_ + `/` + block_no_, {\n  //    method: 'POST',\n  //    headers: {\n  //      'Accept': 'application/json',\n  //      'Content-Type': 'application/json',\n  //    },\n  //    body: JSON.stringify(behaviour)\n  //  })\n  // }\n  /////////////////////////////////////////////////////////////////////////////////\n\n\n  render() {\n    debugger;\n\n    if (!this.state.timePassed && this.state.feedback === false) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.cockpit,\n        children: this.disp_elements()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 14\n      }, this);\n    } else if (this.state.feedback === true && !this.state.timePassed2) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.cockpit,\n        children: [this.disp_feedback(), \" \", this.handleIncrement, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this);\n    } else if (!this.state.feedback && this.state.timePassed2 === false) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.cockpit,\n        children: this.disp_slider()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 14\n      }, this);\n    } else if (this.state.timePassed2 === true && this.state.feedback === true) {\n      if (this.state.trialBlockNum === this.state.trialPerBlock && this.state.blockNum < this.state.blockTotal) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cockpit,\n          children: this.disp_break(this.state.blockNum, this.state.blockTotal)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this);\n      } else if (this.state.trialBlockNum === this.state.trialPerBlock) {\n        this.sendBlock(this.props.UserNo, this.state.blockNum);\n      }\n\n      {\n        this.nextTrial(0);\n      }\n      return null;\n    }\n  } /////////////////////////////////////////////////////////////////////////////////\n\n\n  disp_slider() {\n    let choiceTime0 = Math.round(performance.now());\n\n    let text = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.questions,\n      children: [\"How large is the alien population?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cockpit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        onSpacebarHit: result => {\n          this.saveSgmMu(result, choiceTime0);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this);\n  }\n\n  disp_elements() {\n    if (this.state.indicReq[this.state.trialNum - 1] === 1) {\n      document.addEventListener(\"keyup\", this._handleIndicKey);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.overlaybar,\n        children: /*#__PURE__*/_jsxDEV(ElementsIndicator, {\n          img1: this.state.element1Col,\n          img2: this.state.element2Col,\n          img3: this.state.element3Col,\n          userID: this.state.userID,\n          trialNum: this.state.trialNum,\n          blockNum: this.state.blockNum\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this);\n    } else {\n      setTimeout(() => {\n        this.setState({\n          timePassed: true,\n          timePassed2: false\n        });\n      }, 5000);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.overlaybar,\n        children: /*#__PURE__*/_jsxDEV(ElementsFullDisplay, {\n          value1: this.state.all_element_values[this.state.trialNum - 1][0],\n          value2: this.state.all_element_values[this.state.trialNum - 1][1],\n          value3: this.state.all_element_values[this.state.trialNum - 1][2],\n          img1: this.state.element1Col,\n          img2: this.state.element2Col,\n          img3: this.state.element3Col\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  disp_feedback() {\n    let text2 = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.questions,\n      children: [\"The true population on the planet was\", \" \", this.state.all_true_pop_size[this.state.trialNum - 1], \" million.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this);\n\n    setTimeout(() => {\n      this.setState({\n        timePassed2: true,\n        timePassed: false\n      });\n    }, 700);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cockpit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: text2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        style: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.overlaybar,\n          children: /*#__PURE__*/_jsxDEV(OutcomeSlider, {\n            mu: this.state.trialSgmMu[this.state.trialNum - 1][2],\n            sgm: this.state.trialSgmMu[this.state.trialNum - 1][1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.overlaybar,\n          children: /*#__PURE__*/_jsxDEV(OutcomeSliderBar, {\n            mu: this.state.trialSgmMu[this.state.trialNum - 1][2],\n            sgm: this.state.trialSgmMu[this.state.trialNum - 1][1],\n            value: this.state.all_true_pop_size[this.state.trialNum - 1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this);\n  }\n\n  saveSgmMu(result, time) {\n    let trialSgmMu = this.state.trialSgmMu;\n    let trialRT = this.state.trialRT;\n    let trialNum = this.state.trialNum;\n    trialSgmMu[trialNum - 1][1] = result.sgm;\n    trialSgmMu[trialNum - 1][2] = result.mu;\n    trialRT[trialNum - 1][0] = trialNum;\n    trialRT[trialNum - 1][1] = time;\n    trialRT[trialNum - 1][2] = Math.round(performance.now());\n    trialRT[trialNum - 1][3] = trialRT[trialNum - 1][2] - time;\n    this.setState({\n      trialSgmMu: trialSgmMu,\n      trialRT: trialRT,\n      feedback: true //trialNum : trialNum+1,\n      // outcome: show\n\n    });\n  }\n\n  disp_break(blockNum, blockTotal) {\n    document.addEventListener(\"keyup\", this._handleBreakKey);\n\n    let text = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.center,\n          children: \"BREAK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this), \"You have completed \", blockNum, \" out of\\xA0\", blockTotal, \" blocks!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this), \"You may take a short break.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), \"You should take the opportunity to refresh your memory of the room and outcome images.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.centerTwo,\n          children: [\"If you are ready to continue, please press the [\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"SPACEBAR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this), \"].\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cockpit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.textblock,\n        children: [text, \" \", this.handleBreakKey]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }, this);\n  }\n\n  redirectToNextStage() {\n    this.props.history.push({\n      pathname: `/EndPage`,\n      state: {// userID: this.state.userID,\n        // date: this.state.date,\n        // startTime: this.state.startTime,\n        //rewardTotal:\n      }\n    }); // console.log(\"UserID is: \" + this.state.userID);\n  }\n\n}\n\nexport default _c = withRouter(MainTask);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/MainTask.js"],"names":["React","withRouter","styles","Slider","View","OutcomeSlider","OutcomeSliderBar","ElementsFullDisplay","ElementsIndicator","range","shuffle","array","currentIndex","length","randomIndex","Math","floor","random","getRandomInt","min","max","minimum","ceil","maximum","getRand","val_options","rand","indexOf","MainTask","Component","constructor","props","_handleBreakKey","event","keyCode","nextTrial","_handleIndicKey","pressed","randNum","StructToRender","require","precededShift","w0","relevant_w","corPos_sq","val_corr_elem","epsilon","true_pop_size_tmp","true_pop_size","map","each_element","Number","toFixed","nr_trial","check_al2","check_al1","i","restricted","all_element_values","Array","fill","j","trialSgmMu","trialRT","indicKey_tmp","array_tmp","indicReq_tmp","k","element_colours","currentDate","Date","MainStartTime","toTimeString","state","date","sectionStartTime","taskSession","trialTotal","trialPerBlock","trialNum","trialBlockNum","blockTotal","blockNum","indicReq","indicKey","choiceTime0","element1Col","element2Col","element3Col","indicTrials","trialSliderRT","timerCountDur","feedback","mounted","timePassed","timePassed2","all_true_pop_size","trainAcc","corr_elem_pos","window","addEventListener","e","target","document","body","preventDefault","removeEventListener","setState","redirectToNextStage","block_tmp","trialBlockNum_tmp","trialNum_tmp","componentDidMount","setTimeout","bind","componentWillUnmount","callback","render","cockpit","disp_elements","disp_feedback","handleIncrement","disp_slider","disp_break","sendBlock","UserNo","round","performance","now","text","questions","result","saveSgmMu","overlaybar","userID","text2","container","time","sgm","mu","main","center","centerTwo","textblock","handleBreakKey","history","push","pathname"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AAEA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,KAAT,QAAsB,QAAtB,C,CACA;;;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,MAAIC,YAAY,GAAGD,KAAK,CAACE,MAAzB;AAAA,MACEC,WADF,CADsB,CAItB;;AACA,SAAOF,YAAY,KAAK,CAAxB,EAA2B;AACzB;AACAE,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,YAA3B,CAAd;AACAA,IAAAA,YAAY,GAHa,CAKzB;;AACA,KAACD,KAAK,CAACC,YAAD,CAAN,EAAsBD,KAAK,CAACG,WAAD,CAA3B,IAA4C,CAC1CH,KAAK,CAACG,WAAD,CADqC,EAE1CH,KAAK,CAACC,YAAD,CAFqC,CAA5C;AAID;;AACD,SAAOD,KAAP;AACD,C,CACD;;;AACA,SAASO,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC9B,QAAMC,OAAO,GAAGN,IAAI,CAACO,IAAL,CAAUH,GAAV,CAAhB;AACA,QAAMI,OAAO,GAAGR,IAAI,CAACC,KAAL,CAAWI,GAAX,CAAhB;AAEA,SAAOL,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBM,OAAO,GAAGF,OAAV,GAAoB,CAArC,CAAX,IAAsDA,OAA7D;AACD;;AAED,SAASG,OAAT,CAAiBb,KAAjB,EAAwB;AACtB,MAAIc,WAAW,GAAGhB,KAAK,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,CAAvB;AACA,MAAIiB,IAAI,GAAGD,WAAW,CAAC,CAAC,EAAEV,IAAI,CAACE,MAAL,KAAgBQ,WAAW,CAACZ,MAA9B,CAAF,CAAtB,CAFsB,CAGtB;;AACA,MAAIF,KAAK,CAACgB,OAAN,CAAcD,IAAd,MAAwB,CAAC,CAA7B,EAAgC;AAC9B,WAAOA,IAAP;AACD,GAFD,MAEO;AACL,WAAOF,OAAO,CAACb,KAAD,CAAd;AACD;AACF,C,CACD;;;AACA,MAAMiB,QAAN,SAAuB5B,KAAK,CAAC6B,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAoHnBC,eApHmB,GAoHAC,KAAD,IAAW;AAC3B,UAAIA,KAAK,CAACC,OAAN,KAAkB,EAAtB,EAA0B;AACxB,aAAKC,SAAL,CAAe,CAAf;AACD;AACF,KAxHkB;;AAAA,SA0HnBC,eA1HmB,GA0HAH,KAAD,IAAW;AAC3B,UAAII,OAAJ;;AACA,cAAQJ,KAAK,CAACC,OAAd;AACE,aAAK,EAAL;AACEG,UAAAA,OAAO,GAAG,CAAV;AACA,eAAKF,SAAL,CAAe,CAAf,EAAkBE,OAAlB;AACA;;AACF,aAAK,EAAL;AACEA,UAAAA,OAAO,GAAG,CAAV;AACA,eAAKF,SAAL,CAAe,CAAf,EAAkBE,OAAlB;AACA;;AACF,aAAK,EAAL;AACEA,UAAAA,OAAO,GAAG,CAAV;AACA,eAAKF,SAAL,CAAe,CAAf,EAAkBE,OAAlB;AACA;;AACF;AAbF;AAeD,KA3IkB;;AAGjB,QAAIC,OAAO,GAAG,YAAYpB,YAAY,CAAC,CAAD,EAAI,EAAJ,CAAtC;;AACA,QAAIqB,cAAc,GAAGC,OAAO,CAAC,mBAAmBF,OAAnB,GAA6B,OAA9B,CAA5B;;AACA,QAAIG,aAAa,GAAGF,cAAc,CAAC,CAAD,CAAlC,CALiB,CAKsB;;AACvC,QAAIG,EAAE,GAAGH,cAAc,CAAC,CAAD,CAAvB;AACA,QAAII,UAAU,GAAGJ,cAAc,CAAC,CAAD,CAA/B;AACA,QAAIK,SAAS,GAAGL,cAAc,CAAC,CAAD,CAA9B;AACA,QAAIM,aAAa,GAAGN,cAAc,CAAC,CAAD,CAAlC;AACA,QAAIO,OAAO,GAAGP,cAAc,CAAC,CAAD,CAA5B;AACA,QAAIQ,iBAAiB,GAAGR,cAAc,CAAC,CAAD,CAAtC;AACA,QAAIS,aAAa,GAAGD,iBAAiB,CAACE,GAAlB,CAAsB,UAAUC,YAAV,EAAwB;AAChE,aAAOC,MAAM,CAACD,YAAY,CAACE,OAAb,CAAqB,CAArB,CAAD,CAAb;AACD,KAFmB,CAApB;AAIA,QAAIC,QAAQ,GAAGX,EAAE,CAAC7B,MAAlB,CAhBiB,CAiBjB;;AACA,QAAIyC,SAAS,GAAG,EAAhB;AACA,QAAIC,SAAS,GAAG,EAAhB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIH,QAAQ,GAAG,CAAhC,EAAmCG,CAAC,EAApC,EAAwC;AACtC,UAAIC,UAAU,GAAG,CAACZ,aAAa,CAACW,CAAD,CAAd,EAAmB,MAAMX,aAAa,CAACW,CAAD,CAAtC,CAAjB;;AACA,UAAIA,CAAC,GAAGH,QAAQ,GAAG,CAAnB,EAAsB;AACpBE,QAAAA,SAAS,CAACC,CAAD,CAAT,GAAehC,OAAO,CAACiC,UAAD,CAAtB;AACAH,QAAAA,SAAS,CAACE,CAAD,CAAT,GAAe,MAAMX,aAAa,CAACW,CAAD,CAAlC;AACD,OAHD,MAGO;AACLD,QAAAA,SAAS,CAACC,CAAD,CAAT,GAAe,MAAMX,aAAa,CAACW,CAAD,CAAlC;AACAF,QAAAA,SAAS,CAACE,CAAD,CAAT,GAAehC,OAAO,CAACiC,UAAD,CAAtB;AACD;AACF;;AAED,QAAIC,kBAAkB,GAAGC,KAAK,CAACN,QAAD,CAAL,CACtBO,IADsB,GAEtBX,GAFsB,CAElB,MAAMU,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,CAAd,CAFY,CAAzB;;AAIA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIR,QAAQ,GAAG,CAAhC,EAAmCQ,CAAC,EAApC,EAAwC;AACtCH,MAAAA,kBAAkB,CAACG,CAAD,CAAlB,CAAsBjB,SAAS,CAACiB,CAAD,CAAT,GAAe,CAArC,IAA0ChB,aAAa,CAACgB,CAAD,CAAvD;;AACA,UAAIjB,SAAS,CAACiB,CAAD,CAAT,KAAiB,CAArB,EAAwB;AACtBH,QAAAA,kBAAkB,CAACG,CAAD,CAAlB,CAAsB,CAAtB,IAA2BN,SAAS,CAACM,CAAD,CAApC;AACAH,QAAAA,kBAAkB,CAACG,CAAD,CAAlB,CAAsB,CAAtB,IAA2BP,SAAS,CAACO,CAAD,CAApC;AACD,OAHD,MAGO,IAAIjB,SAAS,CAACiB,CAAD,CAAT,KAAiB,CAArB,EAAwB;AAC7BH,QAAAA,kBAAkB,CAACG,CAAD,CAAlB,CAAsB,CAAtB,IAA2BN,SAAS,CAACM,CAAD,CAApC;AACAH,QAAAA,kBAAkB,CAACG,CAAD,CAAlB,CAAsB,CAAtB,IAA2BP,SAAS,CAACO,CAAD,CAApC;AACD,OAHM,MAGA,IAAIjB,SAAS,CAACiB,CAAD,CAAT,KAAiB,CAArB,EAAwB;AAC7BH,QAAAA,kBAAkB,CAACG,CAAD,CAAlB,CAAsB,CAAtB,IAA2BN,SAAS,CAACM,CAAD,CAApC;AACAH,QAAAA,kBAAkB,CAACG,CAAD,CAAlB,CAAsB,CAAtB,IAA2BP,SAAS,CAACO,CAAD,CAApC;AACD;AACF;;AAED,QAAIC,UAAU,GAAGH,KAAK,CAACN,QAAD,CAAL,CACdO,IADc,GAEdX,GAFc,CAEV,MAAMU,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,CAAd,CAFI,CAAjB;AAGA,QAAIG,OAAO,GAAGJ,KAAK,CAACN,QAAD,CAAL,CACXO,IADW,GAEXX,GAFW,CAEP,MAAMU,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,CAAd,CAFC,CAAd;AAGA,QAAII,YAAY,GAAGL,KAAK,CAACN,QAAD,CAAL,CAChBO,IADgB,GAEhBX,GAFgB,CAEZ,MAAMU,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,CAAd,CAFM,CAAnB;AAIA,QAAIK,SAAS,GAAGN,KAAK,CAACN,QAAD,CAAL,CAAgBO,IAAhB,CAAqB,CAArB,CAAhB;AACA,QAAIM,YAAY,GAAGP,KAAK,CAACN,QAAD,CAAL,CAAgBO,IAAhB,CAAqB,CAArB,CAAnB;;AAEA,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAId,QAAQ,GAAG,CAAhC,EAAmCc,CAAC,IAAI,EAAxC,EAA4C;AAC1CD,MAAAA,YAAY,CAACC,CAAD,CAAZ,GAAkB,CAAlB;AACD;;AAED,QAAIC,eAAe,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAtB,CAnEiB,CAmEgB;;AACjC1D,IAAAA,OAAO,CAAC0D,eAAD,CAAP;AAEA,QAAIC,WAAW,GAAG,IAAIC,IAAJ,EAAlB;AACA,QAAIC,aAAa,GAAGF,WAAW,CAACG,YAAZ,EAApB;AAEA,SAAKC,KAAL,GAAa;AACX;AACAC,MAAAA,IAAI,EAAEL,WAFK;AAGX;AACAM,MAAAA,gBAAgB,EAAEJ,aAJP;AAKXK,MAAAA,WAAW,EAAE,UALF;AAMXC,MAAAA,UAAU,EAAExB,QAND;AAOXyB,MAAAA,aAAa,EAAE,EAPJ;AAQXC,MAAAA,QAAQ,EAAE,CARC;AASXC,MAAAA,aAAa,EAAE,CATJ;AAUXC,MAAAA,UAAU,EAAE,CAVD;AAWXC,MAAAA,QAAQ,EAAE,CAXC;AAYXC,MAAAA,QAAQ,EAAEjB,YAZC;AAaXkB,MAAAA,QAAQ,EAAEpB,YAbC;AAcXD,MAAAA,OAAO,EAAEA,OAdE;AAeXsB,MAAAA,WAAW,EAAE,CAfF;AAgBXC,MAAAA,WAAW,EAAElB,eAAe,CAAC,CAAD,CAhBjB;AAiBXmB,MAAAA,WAAW,EAAEnB,eAAe,CAAC,CAAD,CAjBjB;AAkBXoB,MAAAA,WAAW,EAAEpB,eAAe,CAAC,CAAD,CAlBjB;AAmBXqB,MAAAA,WAAW,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,EAAc,GAAd,CAnBF;AAmBsB;AACjCC,MAAAA,aAAa,EAAE,IApBJ;AAqBX5B,MAAAA,UAAU,EAAEA,UArBD;AAsBX6B,MAAAA,aAAa,EAAE,EAtBJ;AAuBXC,MAAAA,QAAQ,EAAE,KAvBC;AAwBXC,MAAAA,OAAO,EAAE,CAxBE;AAyBXC,MAAAA,UAAU,EAAE,KAzBD;AA0BXC,MAAAA,WAAW,EAAE,KA1BF;AA2BXC,MAAAA,iBAAiB,EAAEhD,aA3BR;AA4BXiD,MAAAA,QAAQ,EAAEhC,SA5BC;AA6BXiC,MAAAA,aAAa,EAAEtD,SA7BJ;AA8BXc,MAAAA,kBAAkB,EAAEA;AA9BT,KAAb,CAzEiB,CAyGjB;;AACA;;AACAyC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,UAAUC,CAAV,EAAa;AAC9C,UAAIA,CAAC,CAACnE,OAAF,KAAc,EAAd,IAAoBmE,CAAC,CAACC,MAAF,KAAaC,QAAQ,CAACC,IAA9C,EAAoD;AAClDH,QAAAA,CAAC,CAACI,cAAF;AACD,OAFD,MAEO,IAAIJ,CAAC,CAACnE,OAAF,KAAc,EAAd,IAAoBmE,CAAC,CAACC,MAAF,KAAaC,QAAQ,CAACC,IAA9C,EAAoD;AACzDH,QAAAA,CAAC,CAACI,cAAF;AACD;AACF,KAND;AAOD,GAnHoC,CAoHrC;;;AA0BAtE,EAAAA,SAAS,CAACF,KAAD,EAAQI,OAAR,EAAiB;AACxB,QAAIJ,KAAK,KAAK,CAAd,EAAiB;AACfsE,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,OAA7B,EAAsC,KAAK1E,eAA3C;AACA,UAAImD,QAAQ,GAAG,KAAKV,KAAL,CAAWU,QAA1B;AACAA,MAAAA,QAAQ,CAAC,KAAKV,KAAL,CAAWM,QAAX,GAAsB,CAAvB,CAAR,GAAoC,CAApC;AACA,UAAIf,YAAY,GAAG,KAAKS,KAAL,CAAWW,QAA9B;AACApB,MAAAA,YAAY,CAAC,KAAKS,KAAL,CAAWM,QAAX,GAAsB,CAAvB,CAAZ,CAAsC,CAAtC,IAA2C,KAAKN,KAAL,CAAWM,QAAtD;AACAf,MAAAA,YAAY,CAAC,KAAKS,KAAL,CAAWM,QAAX,GAAsB,CAAvB,CAAZ,CAAsC,CAAtC,IAA2C1C,OAA3C;AACA;AACA,WAAKsE,QAAL,CAAc;AACZxB,QAAAA,QAAQ,EAAEA,QADE;AAEZC,QAAAA,QAAQ,EAAEpB;AAFE,OAAd;AAID,KAZD,MAYO,IAAI/B,KAAK,KAAK,CAAd,EAAiB;AACtBsE,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,OAA7B,EAAsC,KAAKtE,eAA3C;AACD,KAFM,MAEA,IAAIH,KAAK,KAAK,CAAd,EAAiB;AACtB,UACE,KAAKwC,KAAL,CAAWM,QAAX,KAAwB,KAAKN,KAAL,CAAWI,UADrC,EAEE;AACA,aAAK+B,mBAAL;AACD,OAJD,MAIO;AACL,YAAI,KAAKnC,KAAL,CAAWO,aAAX,KAA6B,KAAKP,KAAL,CAAWK,aAA5C,EAA2D;AACzD,cAAI+B,SAAS,GAAG,KAAKpC,KAAL,CAAWS,QAAX,GAAsB,CAAtC;AACA,cAAI4B,iBAAiB,GAAG,CAAxB;AACD,SAHD,MAGO;AACL,cAAIA,iBAAiB,GAAG,KAAKrC,KAAL,CAAWO,aAAX,GAA2B,CAAnD;AACD;;AAED,YAAI+B,YAAY,GAAG,KAAKtC,KAAL,CAAWM,QAAX,GAAsB,CAAzC;AACA,aAAK4B,QAAL,CAAc;AACZ5B,UAAAA,QAAQ,EAAEgC,YADE;AAEZ7B,UAAAA,QAAQ,EAAE2B,SAFE;AAGZ7B,UAAAA,aAAa,EAAE8B,iBAHH;AAIZlB,UAAAA,QAAQ,EAAE,KAJE;AAKZE,UAAAA,UAAU,EAAE,KALA;AAMZC,UAAAA,WAAW,EAAE;AAND,SAAd;AAQD;AACF;AACF;;AAEDiB,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,UAAU,CACR,YAAY;AACV,WAAKN,QAAL,CAAc;AACZd,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KAJD,CAIEqB,IAJF,CAIO,IAJP,CADQ,EAMR,IANQ,CAAV;AAQD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,SAAKR,QAAL,GAAgB,CAAClC,KAAD,EAAQ2C,QAAR,KAAqB;AACnC;AACD,KAFD;AAGD,GAtMoC,CAuMrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,EAAAA,MAAM,GAAG;AACP;;AACA,QAAI,CAAC,KAAK5C,KAAL,CAAWqB,UAAZ,IAA0B,KAAKrB,KAAL,CAAWmB,QAAX,KAAwB,KAAtD,EAA6D;AAC3D,0BAAO;AAAK,QAAA,SAAS,EAAE1F,MAAM,CAACoH,OAAvB;AAAA,kBAAiC,KAAKC,aAAL;AAAjC;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAI,KAAK9C,KAAL,CAAWmB,QAAX,KAAwB,IAAxB,IAAgC,CAAC,KAAKnB,KAAL,CAAWsB,WAAhD,EAA6D;AAClE,0BACE;AAAK,QAAA,SAAS,EAAE7F,MAAM,CAACoH,OAAvB;AAAA,mBACG,KAAKE,aAAL,EADH,OAC0B,KAAKC,eAD/B,EACgD,GADhD;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KANM,MAMA,IAAI,CAAC,KAAKhD,KAAL,CAAWmB,QAAZ,IAAwB,KAAKnB,KAAL,CAAWsB,WAAX,KAA2B,KAAvD,EAA8D;AACnE,0BAAO;AAAK,QAAA,SAAS,EAAE7F,MAAM,CAACoH,OAAvB;AAAA,kBAAiC,KAAKI,WAAL;AAAjC;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA,IACL,KAAKjD,KAAL,CAAWsB,WAAX,KAA2B,IAA3B,IACA,KAAKtB,KAAL,CAAWmB,QAAX,KAAwB,IAFnB,EAGL;AACA,UACE,KAAKnB,KAAL,CAAWO,aAAX,KAA6B,KAAKP,KAAL,CAAWK,aAAxC,IACA,KAAKL,KAAL,CAAWS,QAAX,GAAsB,KAAKT,KAAL,CAAWQ,UAFnC,EAGE;AACA,4BACE;AAAK,UAAA,SAAS,EAAE/E,MAAM,CAACoH,OAAvB;AAAA,oBACG,KAAKK,UAAL,CAAgB,KAAKlD,KAAL,CAAWS,QAA3B,EAAqC,KAAKT,KAAL,CAAWQ,UAAhD;AADH;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OATD,MASO,IAAI,KAAKR,KAAL,CAAWO,aAAX,KAA6B,KAAKP,KAAL,CAAWK,aAA5C,EAA2D;AAChE,aAAK8C,SAAL,CAAe,KAAK7F,KAAL,CAAW8F,MAA1B,EAAkC,KAAKpD,KAAL,CAAWS,QAA7C;AACD;;AACD;AACE,aAAK/C,SAAL,CAAe,CAAf;AACD;AACD,aAAO,IAAP;AACD;AACF,GAjQoC,CAmQrC;;;AACAuF,EAAAA,WAAW,GAAG;AACZ,QAAIrC,WAAW,GAAGtE,IAAI,CAAC+G,KAAL,CAAWC,WAAW,CAACC,GAAZ,EAAX,CAAlB;;AAEA,QAAIC,IAAI,gBACN;AAAK,MAAA,SAAS,EAAE/H,MAAM,CAACgI,SAAvB;AAAA,oEAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;;AASA,wBACE;AAAK,MAAA,SAAS,EAAEhI,MAAM,CAACoH,OAAvB;AAAA,8BACE;AAAA,kBAAMW;AAAN;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AACE,QAAA,aAAa,EAAGE,MAAD,IAAY;AACzB,eAAKC,SAAL,CAAeD,MAAf,EAAuB9C,WAAvB;AACD;AAHH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAEDkC,EAAAA,aAAa,GAAG;AACd,QAAI,KAAK9C,KAAL,CAAWU,QAAX,CAAoB,KAAKV,KAAL,CAAWM,QAAX,GAAsB,CAA1C,MAAiD,CAArD,EAAwD;AACtDwB,MAAAA,QAAQ,CAACH,gBAAT,CAA0B,OAA1B,EAAmC,KAAKhE,eAAxC;AAEA,0BACE;AAAK,QAAA,SAAS,EAAElC,MAAM,CAACmI,UAAvB;AAAA,+BACE,QAAC,iBAAD;AACE,UAAA,IAAI,EAAE,KAAK5D,KAAL,CAAWa,WADnB;AAEE,UAAA,IAAI,EAAE,KAAKb,KAAL,CAAWc,WAFnB;AAGE,UAAA,IAAI,EAAE,KAAKd,KAAL,CAAWe,WAHnB;AAIE,UAAA,MAAM,EAAE,KAAKf,KAAL,CAAW6D,MAJrB;AAKE,UAAA,QAAQ,EAAE,KAAK7D,KAAL,CAAWM,QALvB;AAME,UAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWS;AANvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAYD,KAfD,MAeO;AACL+B,MAAAA,UAAU,CAAC,MAAM;AACf,aAAKN,QAAL,CAAc;AAAEb,UAAAA,UAAU,EAAE,IAAd;AAAoBC,UAAAA,WAAW,EAAE;AAAjC,SAAd;AACD,OAFS,EAEP,IAFO,CAAV;AAGA,0BACE;AAAK,QAAA,SAAS,EAAE7F,MAAM,CAACmI,UAAvB;AAAA,+BACE,QAAC,mBAAD;AACE,UAAA,MAAM,EAAE,KAAK5D,KAAL,CAAWf,kBAAX,CAA8B,KAAKe,KAAL,CAAWM,QAAX,GAAsB,CAApD,EAAuD,CAAvD,CADV;AAEE,UAAA,MAAM,EAAE,KAAKN,KAAL,CAAWf,kBAAX,CAA8B,KAAKe,KAAL,CAAWM,QAAX,GAAsB,CAApD,EAAuD,CAAvD,CAFV;AAGE,UAAA,MAAM,EAAE,KAAKN,KAAL,CAAWf,kBAAX,CAA8B,KAAKe,KAAL,CAAWM,QAAX,GAAsB,CAApD,EAAuD,CAAvD,CAHV;AAIE,UAAA,IAAI,EAAE,KAAKN,KAAL,CAAWa,WAJnB;AAKE,UAAA,IAAI,EAAE,KAAKb,KAAL,CAAWc,WALnB;AAME,UAAA,IAAI,EAAE,KAAKd,KAAL,CAAWe;AANnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAYD;AACF;;AAEDgC,EAAAA,aAAa,GAAG;AACd,QAAIe,KAAK,gBACP;AAAK,MAAA,SAAS,EAAErI,MAAM,CAACgI,SAAvB;AAAA,0DACwC,GADxC,EAEG,KAAKzD,KAAL,CAAWuB,iBAAX,CAA6B,KAAKvB,KAAL,CAAWM,QAAX,GAAsB,CAAnD,CAFH,4BAGE;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;;AAUAkC,IAAAA,UAAU,CAAC,MAAM;AACf,WAAKN,QAAL,CAAc;AAAEZ,QAAAA,WAAW,EAAE,IAAf;AAAqBD,QAAAA,UAAU,EAAE;AAAjC,OAAd;AACD,KAFS,EAEP,GAFO,CAAV;AAIA,wBACE;AAAK,MAAA,SAAS,EAAE5F,MAAM,CAACoH,OAAvB;AAAA,8BACE;AAAA,kBAAMiB;AAAN;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAErI,MAAM,CAACsI,SAApB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAEtI,MAAM,CAACmI,UAAvB;AAAA,iCACE,QAAC,aAAD;AACE,YAAA,EAAE,EAAE,KAAK5D,KAAL,CAAWX,UAAX,CAAsB,KAAKW,KAAL,CAAWM,QAAX,GAAsB,CAA5C,EAA+C,CAA/C,CADN;AAEE,YAAA,GAAG,EAAE,KAAKN,KAAL,CAAWX,UAAX,CAAsB,KAAKW,KAAL,CAAWM,QAAX,GAAsB,CAA5C,EAA+C,CAA/C;AAFP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAK,UAAA,SAAS,EAAE7E,MAAM,CAACmI,UAAvB;AAAA,iCACE,QAAC,gBAAD;AACE,YAAA,EAAE,EAAE,KAAK5D,KAAL,CAAWX,UAAX,CAAsB,KAAKW,KAAL,CAAWM,QAAX,GAAsB,CAA5C,EAA+C,CAA/C,CADN;AAEE,YAAA,GAAG,EAAE,KAAKN,KAAL,CAAWX,UAAX,CAAsB,KAAKW,KAAL,CAAWM,QAAX,GAAsB,CAA5C,EAA+C,CAA/C,CAFP;AAGE,YAAA,KAAK,EAAE,KAAKN,KAAL,CAAWuB,iBAAX,CAA6B,KAAKvB,KAAL,CAAWM,QAAX,GAAsB,CAAnD;AAHT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;;AAEDqD,EAAAA,SAAS,CAACD,MAAD,EAASM,IAAT,EAAe;AACtB,QAAI3E,UAAU,GAAG,KAAKW,KAAL,CAAWX,UAA5B;AACA,QAAIC,OAAO,GAAG,KAAKU,KAAL,CAAWV,OAAzB;AACA,QAAIgB,QAAQ,GAAG,KAAKN,KAAL,CAAWM,QAA1B;AACAjB,IAAAA,UAAU,CAACiB,QAAQ,GAAG,CAAZ,CAAV,CAAyB,CAAzB,IAA8BoD,MAAM,CAACO,GAArC;AACA5E,IAAAA,UAAU,CAACiB,QAAQ,GAAG,CAAZ,CAAV,CAAyB,CAAzB,IAA8BoD,MAAM,CAACQ,EAArC;AACA5E,IAAAA,OAAO,CAACgB,QAAQ,GAAG,CAAZ,CAAP,CAAsB,CAAtB,IAA2BA,QAA3B;AACAhB,IAAAA,OAAO,CAACgB,QAAQ,GAAG,CAAZ,CAAP,CAAsB,CAAtB,IAA2B0D,IAA3B;AACA1E,IAAAA,OAAO,CAACgB,QAAQ,GAAG,CAAZ,CAAP,CAAsB,CAAtB,IAA2BhE,IAAI,CAAC+G,KAAL,CAAWC,WAAW,CAACC,GAAZ,EAAX,CAA3B;AACAjE,IAAAA,OAAO,CAACgB,QAAQ,GAAG,CAAZ,CAAP,CAAsB,CAAtB,IAA2BhB,OAAO,CAACgB,QAAQ,GAAG,CAAZ,CAAP,CAAsB,CAAtB,IAA2B0D,IAAtD;AAEA,SAAK9B,QAAL,CAAc;AACZ7C,MAAAA,UAAU,EAAEA,UADA;AAEZC,MAAAA,OAAO,EAAEA,OAFG;AAGZ6B,MAAAA,QAAQ,EAAE,IAHE,CAIZ;AACA;;AALY,KAAd;AAOD;;AAED+B,EAAAA,UAAU,CAACzC,QAAD,EAAWD,UAAX,EAAuB;AAC/BsB,IAAAA,QAAQ,CAACH,gBAAT,CAA0B,OAA1B,EAAmC,KAAKpE,eAAxC;;AACA,QAAIiG,IAAI,gBACN;AAAK,MAAA,SAAS,EAAE/H,MAAM,CAAC0I,IAAvB;AAAA,6BACE;AAAA,gCACE;AAAM,UAAA,SAAS,EAAE1I,MAAM,CAAC2I,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,gBAHF,yBAIsB3D,QAJtB,iBAKGD,UALH,2BAME;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAA;AAAA;AAAA;AAAA,gBAPF,8CASE;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE;AAAA;AAAA;AAAA;AAAA,gBAVF,yGAaE;AAAA;AAAA;AAAA;AAAA,gBAbF,eAcE;AAAA;AAAA;AAAA;AAAA,gBAdF,eAeE;AAAM,UAAA,SAAS,EAAE/E,MAAM,CAAC4I,SAAxB;AAAA,sFAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;;AAyBA,wBACE;AAAK,MAAA,SAAS,EAAE5I,MAAM,CAACoH,OAAvB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAEpH,MAAM,CAAC6I,SAAvB;AAAA,mBACGd,IADH,OACU,KAAKe,cADf;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAEDpC,EAAAA,mBAAmB,GAAG;AACpB,SAAK7E,KAAL,CAAWkH,OAAX,CAAmBC,IAAnB,CAAwB;AACtBC,MAAAA,QAAQ,EAAG,UADW;AAEtB1E,MAAAA,KAAK,EAAE,CACL;AACA;AACA;AACA;AAJK;AAFe,KAAxB,EADoB,CAWpB;AACD;;AAxaoC;;AA2avC,oBAAexE,UAAU,CAAC2B,QAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n// import { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\";\nimport { View } from \"react-native\";\nimport OutcomeSlider from \"./sliderOutcome\";\nimport OutcomeSliderBar from \"./sliderOutcomeBar\";\nimport ElementsFullDisplay from \"./elementsFulldisplay\";\n\nimport ElementsIndicator from \"./elementsIndicator\";\nimport { range } from \"lodash\";\n////////////////////////////////////////////////////////////////////////////////\nfunction shuffle(array) {\n  let currentIndex = array.length,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex !== 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex],\n    ];\n  }\n  return array;\n}\n//\nfunction getRandomInt(min, max) {\n  const minimum = Math.ceil(min);\n  const maximum = Math.floor(max);\n\n  return Math.floor(Math.random() * (maximum - minimum + 1)) + minimum;\n}\n\nfunction getRand(array) {\n  var val_options = range(0, 110, 10);\n  var rand = val_options[~~(Math.random() * val_options.length)];\n  // var rand = Math.floor(Math.random() * 10);\n  if (array.indexOf(rand) === -1) {\n    return rand;\n  } else {\n    return getRand(array);\n  }\n}\n/////////////////////////////////////////////////////////////////////////////////\nclass MainTask extends React.Component {\n  constructor(props) {\n    super(props);\n\n    var randNum = \"struct_\" + getRandomInt(1, 10);\n    var StructToRender = require(\"./taskStructs/\" + randNum + \".json\");\n    var precededShift = StructToRender[0]; //1=intra-dimensional; 2=extra-dimensional\n    var w0 = StructToRender[1];\n    var relevant_w = StructToRender[2];\n    var corPos_sq = StructToRender[3];\n    var val_corr_elem = StructToRender[4];\n    var epsilon = StructToRender[5];\n    var true_pop_size_tmp = StructToRender[6];\n    var true_pop_size = true_pop_size_tmp.map(function (each_element) {\n      return Number(each_element.toFixed(0));\n    });\n\n    var nr_trial = w0.length;\n    //pregenerate the values of the remaining elements\n    var check_al2 = [];\n    var check_al1 = [];\n\n    for (var i = 0; i <= nr_trial - 1; i++) {\n      var restricted = [val_corr_elem[i], 100 - val_corr_elem[i]];\n      if (i < nr_trial / 2) {\n        check_al1[i] = getRand(restricted);\n        check_al2[i] = 100 - val_corr_elem[i];\n      } else {\n        check_al1[i] = 100 - val_corr_elem[i];\n        check_al2[i] = getRand(restricted);\n      }\n    }\n\n    var all_element_values = Array(nr_trial)\n      .fill()\n      .map(() => Array(3).fill(0));\n\n    for (var j = 0; j <= nr_trial - 1; j++) {\n      all_element_values[j][corPos_sq[j] - 1] = val_corr_elem[j];\n      if (corPos_sq[j] === 1) {\n        all_element_values[j][1] = check_al1[j];\n        all_element_values[j][2] = check_al2[j];\n      } else if (corPos_sq[j] === 2) {\n        all_element_values[j][0] = check_al1[j];\n        all_element_values[j][2] = check_al2[j];\n      } else if (corPos_sq[j] === 3) {\n        all_element_values[j][0] = check_al1[j];\n        all_element_values[j][1] = check_al2[j];\n      }\n    }\n\n    let trialSgmMu = Array(nr_trial)\n      .fill()\n      .map(() => Array(3).fill(0));\n    let trialRT = Array(nr_trial)\n      .fill()\n      .map(() => Array(3).fill(0));\n    let indicKey_tmp = Array(nr_trial)\n      .fill()\n      .map(() => Array(2).fill(0));\n\n    let array_tmp = Array(nr_trial).fill(0);\n    let indicReq_tmp = Array(nr_trial).fill(0);\n\n    for (var k = 5; k <= nr_trial - 1; k += 20) {\n      indicReq_tmp[k] = 1;\n    }\n\n    var element_colours = [1, 2, 3]; // from left to right\n    shuffle(element_colours);\n\n    var currentDate = new Date();\n    var MainStartTime = currentDate.toTimeString();\n\n    this.state = {\n      // userID: this.props.userID,\n      date: currentDate,\n      // startTime: this.props.startTime,\n      sectionStartTime: MainStartTime,\n      taskSession: \"MainTask\",\n      trialTotal: nr_trial,\n      trialPerBlock: 50,\n      trialNum: 1,\n      trialBlockNum: 1,\n      blockTotal: 5,\n      blockNum: 1,\n      indicReq: indicReq_tmp,\n      indicKey: indicKey_tmp,\n      trialRT: trialRT,\n      choiceTime0: 0,\n      element1Col: element_colours[0],\n      element2Col: element_colours[1],\n      element3Col: element_colours[2],\n      indicTrials: [10, 87, 163, 240], //generate by Matlab function linspace(min(10),max(240),4)\n      trialSliderRT: null,\n      trialSgmMu: trialSgmMu,\n      timerCountDur: 10,\n      feedback: false,\n      mounted: 0,\n      timePassed: false,\n      timePassed2: false,\n      all_true_pop_size: true_pop_size,\n      trainAcc: array_tmp,\n      corr_elem_pos: corPos_sq,\n      all_element_values: all_element_values,\n    };\n    // this.displayFeedback = this.displayFeedback.bind(this)\n    /* prevents page from going to the right/left when arrows are pressed .*/\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      } else if (e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  }\n  /////////////////////////////////////////////////////////////////////////////////\n  _handleBreakKey = (event) => {\n    if (event.keyCode === 32) {\n      this.nextTrial(2);\n    }\n  };\n\n  _handleIndicKey = (event) => {\n    var pressed;\n    switch (event.keyCode) {\n      case 49:\n        pressed = 1;\n        this.nextTrial(1, pressed);\n        break;\n      case 50:\n        pressed = 2;\n        this.nextTrial(1, pressed);\n        break;\n      case 51:\n        pressed = 3;\n        this.nextTrial(1, pressed);\n        break;\n      default:\n    }\n  };\n\n  nextTrial(event, pressed) {\n    if (event === 1) {\n      document.removeEventListener(\"keyup\", this._handleBreakKey);\n      var indicReq = this.state.indicReq;\n      indicReq[this.state.trialNum - 1] = 0;\n      var indicKey_tmp = this.state.indicKey;\n      indicKey_tmp[this.state.trialNum - 1][1] = this.state.trialNum;\n      indicKey_tmp[this.state.trialNum - 1][2] = pressed;\n      debugger;\n      this.setState({\n        indicReq: indicReq,\n        indicKey: indicKey_tmp,\n      });\n    } else if (event === 2) {\n      document.removeEventListener(\"keyup\", this._handleIndicKey);\n    } else if (event === 0) {\n      if (\n        this.state.trialNum === this.state.trialTotal\n      ) {\n        this.redirectToNextStage();\n      } else {\n        if (this.state.trialBlockNum === this.state.trialPerBlock) {\n          var block_tmp = this.state.blockNum + 1;\n          var trialBlockNum_tmp = 1;\n        } else {\n          var trialBlockNum_tmp = this.state.trialBlockNum + 1;\n        }\n\n        var trialNum_tmp = this.state.trialNum + 1;\n        this.setState({\n          trialNum: trialNum_tmp,\n          blockNum: block_tmp,\n          trialBlockNum: trialBlockNum_tmp,\n          feedback: false,\n          timePassed: false,\n          timePassed2: false,\n        });\n      }\n    }\n  }\n\n  componentDidMount() {\n    setTimeout(\n      function () {\n        this.setState({\n          mounted: 1,\n        });\n      }.bind(this),\n      5000\n    );\n  }\n\n  componentWillUnmount() {\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n  //\n  // sendBlock(user_no_, block_no_) {\n  //   // var currentDate   = new Date();\n  //   // var BlockFinishTime    = currentDate.toTimeString();\n  //   // let trial_per_block = this.state.trial_per_block;\n  //   // let ind_block = block_no_-1;\n  //   //\n  //   // var subset_Horizon = this.state.block_info.Horizon.slice(0,trial_per_block);\n  //\n  //   let behaviour = {\n  //     BlockNo: block_no_,\n  //     //                         'Date'                : this.props.user_info.date,\n  //     //                         'UserStartTime'       : this.props.user_info.startTime,\n  //   };\n\n  // fetch(`${API_URL}/behaviour/` + user_no_ + `/` + block_no_, {\n  //    method: 'POST',\n  //    headers: {\n  //      'Accept': 'application/json',\n  //      'Content-Type': 'application/json',\n  //    },\n  //    body: JSON.stringify(behaviour)\n  //  })\n  // }\n  /////////////////////////////////////////////////////////////////////////////////\n  render() {\n    debugger;\n    if (!this.state.timePassed && this.state.feedback === false) {\n      return <div className={styles.cockpit}>{this.disp_elements()}</div>;\n    } else if (this.state.feedback === true && !this.state.timePassed2) {\n      return (\n        <div className={styles.cockpit}>\n          {this.disp_feedback()} {this.handleIncrement}{\" \"}\n        </div>\n      );\n    } else if (!this.state.feedback && this.state.timePassed2 === false) {\n      return <div className={styles.cockpit}>{this.disp_slider()}</div>;\n    } else if (\n      this.state.timePassed2 === true &&\n      this.state.feedback === true\n    ) {\n      if (\n        this.state.trialBlockNum === this.state.trialPerBlock &&\n        this.state.blockNum < this.state.blockTotal\n      ) {\n        return (\n          <div className={styles.cockpit}>\n            {this.disp_break(this.state.blockNum, this.state.blockTotal)}\n          </div>\n        );\n      } else if (this.state.trialBlockNum === this.state.trialPerBlock) {\n        this.sendBlock(this.props.UserNo, this.state.blockNum);\n      }\n      {\n        this.nextTrial(0);\n      }\n      return null;\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////\n  disp_slider() {\n    let choiceTime0 = Math.round(performance.now());\n\n    let text = (\n      <div className={styles.questions}>\n        How large is the alien population?\n        <br />\n        <br />\n        <br />\n      </div>\n    );\n\n    return (\n      <div className={styles.cockpit}>\n        <div>{text}</div>\n        <Slider\n          onSpacebarHit={(result) => {\n            this.saveSgmMu(result, choiceTime0);\n          }}\n        />\n      </div>\n    );\n  }\n\n  disp_elements() {\n    if (this.state.indicReq[this.state.trialNum - 1] === 1) {\n      document.addEventListener(\"keyup\", this._handleIndicKey);\n\n      return (\n        <div className={styles.overlaybar}>\n          <ElementsIndicator\n            img1={this.state.element1Col}\n            img2={this.state.element2Col}\n            img3={this.state.element3Col}\n            userID={this.state.userID}\n            trialNum={this.state.trialNum}\n            blockNum={this.state.blockNum}\n          />\n        </div>\n      );\n    } else {\n      setTimeout(() => {\n        this.setState({ timePassed: true, timePassed2: false });\n      }, 5000);\n      return (\n        <div className={styles.overlaybar}>\n          <ElementsFullDisplay\n            value1={this.state.all_element_values[this.state.trialNum - 1][0]}\n            value2={this.state.all_element_values[this.state.trialNum - 1][1]}\n            value3={this.state.all_element_values[this.state.trialNum - 1][2]}\n            img1={this.state.element1Col}\n            img2={this.state.element2Col}\n            img3={this.state.element3Col}\n          />\n        </div>\n      );\n    }\n  }\n\n  disp_feedback() {\n    let text2 = (\n      <div className={styles.questions}>\n        The true population on the planet was{\" \"}\n        {this.state.all_true_pop_size[this.state.trialNum - 1]} million.\n        <br />\n        <br />\n        <br />\n      </div>\n    );\n\n    setTimeout(() => {\n      this.setState({ timePassed2: true, timePassed: false });\n    }, 700);\n\n    return (\n      <div className={styles.cockpit}>\n        <div>{text2}</div>\n        <View style={styles.container}>\n          <div className={styles.overlaybar}>\n            <OutcomeSlider\n              mu={this.state.trialSgmMu[this.state.trialNum - 1][2]}\n              sgm={this.state.trialSgmMu[this.state.trialNum - 1][1]}\n            />\n          </div>\n          <div className={styles.overlaybar}>\n            <OutcomeSliderBar\n              mu={this.state.trialSgmMu[this.state.trialNum - 1][2]}\n              sgm={this.state.trialSgmMu[this.state.trialNum - 1][1]}\n              value={this.state.all_true_pop_size[this.state.trialNum - 1]}\n            />\n          </div>\n        </View>\n      </div>\n    );\n  }\n\n  saveSgmMu(result, time) {\n    let trialSgmMu = this.state.trialSgmMu;\n    let trialRT = this.state.trialRT;\n    let trialNum = this.state.trialNum;\n    trialSgmMu[trialNum - 1][1] = result.sgm;\n    trialSgmMu[trialNum - 1][2] = result.mu;\n    trialRT[trialNum - 1][0] = trialNum;\n    trialRT[trialNum - 1][1] = time;\n    trialRT[trialNum - 1][2] = Math.round(performance.now());\n    trialRT[trialNum - 1][3] = trialRT[trialNum - 1][2] - time;\n\n    this.setState({\n      trialSgmMu: trialSgmMu,\n      trialRT: trialRT,\n      feedback: true,\n      //trialNum : trialNum+1,\n      // outcome: show\n    });\n  }\n\n  disp_break(blockNum, blockTotal) {\n    document.addEventListener(\"keyup\", this._handleBreakKey);\n    let text = (\n      <div className={styles.main}>\n        <p>\n          <span className={styles.center}>BREAK</span>\n          <br />\n          <br />\n          You have completed {blockNum} out of&nbsp;\n          {blockTotal} blocks!\n          <br />\n          <br />\n          You may take a short break.\n          <br />\n          <br />\n          You should take the opportunity to refresh your memory of the room and\n          outcome images.\n          <br />\n          <br />\n          <span className={styles.centerTwo}>\n            If you are ready to continue, please press the [\n            <strong>SPACEBAR</strong>].\n          </span>\n        </p>\n      </div>\n    );\n\n    return (\n      <div className={styles.cockpit}>\n        <div className={styles.textblock}>\n          {text} {this.handleBreakKey}\n        </div>\n      </div>\n    );\n  }\n\n  redirectToNextStage() {\n    this.props.history.push({\n      pathname: `/EndPage`,\n      state: {\n        // userID: this.state.userID,\n        // date: this.state.date,\n        // startTime: this.state.startTime,\n        //rewardTotal:\n      },\n    });\n\n    // console.log(\"UserID is: \" + this.state.userID);\n  }\n}\n\nexport default withRouter(MainTask);\n"]},"metadata":{},"sourceType":"module"}