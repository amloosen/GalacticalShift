{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/MainTask.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\";\nimport { View } from \"react-native\";\nimport OutcomeSlider from \"./sliderOutcome\";\nimport OutcomeSliderBar from \"./sliderOutcomeBar\";\nimport ElementsFullDisplay from \"./elementsFulldisplay\";\nimport ElementsIndicator from \"./elementsIndicator\";\nimport { range } from \"lodash\"; ////////////////////////////////////////////////////////////////////////////////\n// function shuffle(array) {\n//   let currentIndex = array.length,\n//     randomIndex;\n//\n//   // While there remain elements to shuffle...\n//   while (currentIndex !== 0) {\n//     // Pick a remaining element...\n//     randomIndex = Math.floor(Math.random() * currentIndex);\n//     currentIndex--;\n//\n//     // And swap it with the current element.\n//     [array[currentIndex], array[randomIndex]] = [\n//       array[randomIndex],\n//       array[currentIndex],\n//     ];\n//   }\n//   return array;\n// }\n//\n// function getRandomInt(min, max) {\n//   const minimum = Math.ceil(min);\n//   const maximum = Math.floor(max);\n//\n//   return Math.floor(Math.random() * (maximum - minimum + 1)) + minimum;\n// }\n// function getRand(array) {\n//   var val_options = range(0, 110, 10);\n//   var rand = val_options[~~(Math.random() * val_options.length)];\n//   // var rand = Math.floor(Math.random() * 10);\n//   if (array.indexOf(rand) === -1) {\n//     return rand;\n//   } else {\n//     return getRand(array);\n//   }\n// }\n/////////////////////////////////////////////////////////////////////////////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MainTask extends React.Component {\n  constructor(props) {\n    super(props); //\n    // let nr_train_a_trial = 10; //update later\n    // var val_options = range(0, 110, 10);\n    // val_options.splice(val_options.indexOf(50), 1); //remove the 50 to make it clearer which element is correct\n    // var random_val = [];\n    // for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n    //   var val_tmp = val_options[~~(Math.random() * val_options.length)];\n    //   do {\n    //     var val_tmp = val_options[~~(Math.random() * val_options.length)];\n    //   } while (random_val[i - 1] === val_tmp); // make sure it changes every time\n    //   random_val[i] = val_tmp;\n    // }\n    // var corr_values = random_val.slice(0, 6);\n    // var inverse_tmp = random_val.slice(6, 12);\n    // var inverse = inverse_tmp.map(function (value) {\n    //   return 100 - value;\n    // });\n    // corr_values.push(\n    //   inverse[0],\n    //   inverse[1],\n    //   inverse[2],\n    //   inverse[3],\n    //   inverse[4],\n    //   inverse[5]\n    // );\n    // let array_tmp = Array(nr_train_a_trial).fill(0);\n    // var rightCodeAns = [4, 4, 4, 4, 4, 5, 5, 5, 5];\n    // var corr_pos = [4, 4, 4, 4, 4, 5, 5, 5, 5]; //1 is left and 2 is right; determine where the correct value is displayed\n    // shuffle(corr_pos);\n    //\n    // var corr_elem_tmp = [1, 2, 3]; //1 is left and 2 is right; determine where the correct value is displayed\n    // shuffle(corr_elem_tmp);\n    // var corr_elem = Array(nr_train_a_trial).fill(0);\n    //\n    // for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n    //   if (i < nr_train_a_trial / 3) {\n    //     corr_elem[i] = corr_elem_tmp[0];\n    //   } else if (i >= nr_train_a_trial / 3 && i < (nr_train_a_trial / 3) * 2) {\n    //     corr_elem[i] = corr_elem_tmp[1];\n    //   } else {\n    //     corr_elem[i] = corr_elem_tmp[2];\n    //   }\n    // }\n    //pregenerate the values for all elements\n    // var check_al2 = [];\n    // var check_al1 = [];\n    //\n    // for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n    //   var restricted = [corr_values[i], 100 - corr_values[i]];\n    //   if (i < nr_train_a_trial / 2) {\n    //     check_al1[i] = getRand(restricted);\n    //     check_al2[i] = 100 - corr_values[i];\n    //   } else {\n    //     check_al1[i] = 100 - corr_values[i];\n    //     check_al2[i] = getRand(restricted);\n    //   }\n    // }\n    // var all_element_values = Array(nr_train_a_trial)\n    //   .fill()\n    //   .map(() => Array(3).fill(0));\n    //\n    // for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n    //   all_element_values[i][corr_elem[i] - 1] = corr_values[i];\n    //   if (corr_elem[i] === 1) {\n    //     all_element_values[i][1] = check_al1[i];\n    //     all_element_values[i][2] = check_al2[i];\n    //   } else if (corr_elem[i] === 2) {\n    //     all_element_values[i][0] = check_al1[i];\n    //     all_element_values[i][2] = check_al2[i];\n    //   } else if (corr_elem[i] === 3) {\n    //     all_element_values[i][0] = check_al1[i];\n    //     all_element_values[i][1] = check_al2[i];\n    //   }\n    // }\n\n    let trialSgmMu = Array(nr_train_a_trial).fill().map(() => Array(3).fill(0));\n    let trialRT = Array(nr_train_a_trial).fill().map(() => Array(3).fill(0));\n    var randNum = \"struct_\" + getRandomInt(1, 10);\n\n    var StructToRender = require(\"./taskStructs/\" + randNum + \".json\");\n\n    var precededShift = StructToRender[0]; //1=intra-dimensional; 2=extra-dimensional\n\n    var w0 = StructToRender[1];\n    var relevant_w = StructToRender[2];\n    var col_sq = StructToRender[3];\n    var val_corr_elem_tmp = StructToRender[4];\n    var epsilon = StructToRender[5];\n    var val_corr_elem_final_tmp = StructToRender[6];\n    var val_corr_elem_tmp = val_corr_elem_final_tmp.map(function (each_element) {\n      return Number(each_element.toFixed(0));\n    });\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"MainTaskC\",\n      trialTotal: nr_train_a_trial,\n      trialPerBlock: 50,\n      trialNum: 1,\n      trialBlockNum: 1,\n      blockTotal: 5,\n      blockNum: 1,\n      trialRT: trialRT,\n      choiceTime0: 0,\n      element1: col_sq[0],\n      element2: col_sq[1],\n      element3: col_sq[2],\n      indicTrials: [10, 87, 163, 240],\n      //generate by Matlab function linspace(min(10),max(240),4)\n      // trialSliderRT: null,\n      trialSgmMu: trialSgmMu,\n      timerCountDur: 10,\n      feedback: false,\n      mounted: 0,\n      choiceTime0: 0,\n      timePassed: false,\n      timePassed2: false,\n      all_corr_values: corr_values,\n      trainAcc: array_tmp,\n      corr_elem: corr_elem,\n      all_element_values: all_element_values\n    }; // this.displayFeedback = this.displayFeedback.bind(this)\n\n    /* prevents page from going to the right/left when arrows are pressed .*/\n\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      } else if (e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  } /////////////////////////////////////////////////////////////////////////////////\n\n\n  nextTrial() {\n    if (this.state.trialNum === this.state.trialTotal && this.state.blockNum < this.state.blockTotal) {\n      // setInterval()\n      // {this.disp_break)}\n      this.setState({\n        trialNum: 1,\n        // trialRT: trialRT,\n        choiceTime0: 0,\n        // trialSliderRT: null,\n        // trialSgmMu: trialSgmMu,\n        timerCountDur: 10,\n        feedback: false,\n        mounted: 0,\n        // trialTotal: nr_train_a_trial,\n        blockTotal: 10,\n        blockNum: 1,\n        choiceTime0: 0,\n        timePassed: false,\n        timePassed2: false // all_corr_values: corr_values,\n        // trainAcc: array_tmp,\n        // corr_elem: corr_elem,\n        // all_element_values: all_element_values,\n\n      });\n    } else if (this.state.trialNum === this.state.trialTotal && this.state.blockNum === this.state.blockTotal) {\n      this.redirectToNextStage();\n    } else {\n      var trialNum_tmp = this.state.trialNum + 1;\n      var block_tmp = this.state.blockNum + 1;\n      this.setState({\n        trialNum: trialNum_tmp,\n        blockNum: block_tmp,\n        feedback: false,\n        timePassed: false,\n        timePassed2: false\n      });\n    }\n  }\n\n  componentDidMount() {\n    setTimeout(function () {\n      this.setState({\n        mounted: 1\n      });\n    }.bind(this), 5000);\n  }\n\n  componentWillUnmount() {\n    this.setState = (state, callback) => {\n      return;\n    };\n  } //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n  /////////////////////////////////////////////////////////////////////////////////\n\n\n  render() {\n    if (this.state.indicTrials.includes(this.state.trialNum)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.cockpit,\n        children: this.disp_elementIndicator()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 14\n      }, this);\n    } else {\n      if (!this.state.timePassed && this.state.feedback === false) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cockpit,\n          children: this.disp_elements()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 16\n        }, this);\n      } else if (this.state.feedback === true && !this.state.timePassed2) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cockpit,\n          children: [this.disp_feedback(), \" \", this.handleIncrement, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this);\n      } else if (!this.state.feedback && this.state.timePassed2 === false) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cockpit,\n          children: this.disp_slider()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 16\n        }, this);\n      } else if (this.state.timePassed2 === true && this.state.feedback === true) {\n        {\n          this.nextTrial();\n        }\n        return null;\n      }\n    }\n  } /////////////////////////////////////////////////////////////////////////////////\n\n\n  disp_elementIndicator() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cockpit,\n      children: /*#__PURE__*/_jsxDEV(ElementsIndicator, {\n        value1: this.state.all_element_values[this.state.trialNum - 1][0],\n        value2: this.state.all_element_values[this.state.trialNum - 1][1],\n        value3: this.state.all_element_values[this.state.trialNum - 1][2],\n        corAns: this.state.corr_elem //adapt later\n        ,\n        element_col: [1, 2, 3] //adapt later\n        ,\n        userID: 100 //props.userID,\n        ,\n        trialNum: this.state.trialNum,\n        blockNum: this.state.blockNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this);\n  }\n\n  disp_slider() {\n    let choiceTime0 = Math.round(performance.now());\n\n    let text = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.questions,\n      children: [\"How large is the alien population?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cockpit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        onSpacebarHit: result => {\n          this.saveSgmMu(result, choiceTime0);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this);\n  }\n\n  disp_elements() {\n    setTimeout(() => {\n      this.setState({\n        timePassed: true,\n        timePassed2: false\n      });\n    }, 5000);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.overlaybar,\n      children: /*#__PURE__*/_jsxDEV(ElementsFullDisplay, {\n        value1: this.state.all_element_values[this.state.trialNum - 1][0],\n        value2: this.state.all_element_values[this.state.trialNum - 1][1],\n        value3: this.state.all_element_values[this.state.trialNum - 1][2],\n        img1: this.state.element1,\n        img2: this.state.element2,\n        img3: this.state.element3,\n        elem_indic: 1 //adapt later\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this);\n  }\n\n  disp_feedback() {\n    let text2 = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.questions,\n      children: [\"The true population on the planet was\", \" \", this.state.all_corr_values[this.state.trialNum - 1], \" million.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this);\n\n    setTimeout(() => {\n      this.setState({\n        timePassed2: true,\n        timePassed: false\n      });\n    }, 700);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cockpit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: text2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(View, {\n        style: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.overlaybar,\n          children: /*#__PURE__*/_jsxDEV(OutcomeSlider, {\n            mu: this.state.trialSgmMu[this.state.trialNum - 1][2],\n            sgm: this.state.trialSgmMu[this.state.trialNum - 1][1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.overlaybar,\n          children: /*#__PURE__*/_jsxDEV(OutcomeSliderBar, {\n            mu: this.state.trialSgmMu[this.state.trialNum - 1][2],\n            sgm: this.state.trialSgmMu[this.state.trialNum - 1][1],\n            value: this.state.all_corr_values[this.state.trialNum - 1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this);\n  }\n\n  saveSgmMu(result, time) {\n    let trialSgmMu = this.state.trialSgmMu;\n    let trialRT = this.state.trialRT;\n    let trialNum = this.state.trialNum;\n    trialSgmMu[trialNum - 1][1] = result.sgm;\n    trialSgmMu[trialNum - 1][2] = result.mu;\n    trialRT[trialNum - 1][0] = trialNum;\n    trialRT[trialNum - 1][1] = time;\n    trialRT[trialNum - 1][2] = Math.round(performance.now());\n    trialRT[trialNum - 1][3] = trialRT[trialNum - 1][2] - time;\n    this.setState({\n      trialSgmMu: trialSgmMu,\n      trialRT: trialRT,\n      feedback: true //trialNum : trialNum+1,\n      // outcome: show\n\n    });\n  }\n\n  disp_break() {\n    let text = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.center,\n          children: \"BREAK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), \"You have completed \", this.state.blockNum, \" out of\\xA0\", this.state.blockTotal, \" blocks!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), \"You may take a short break.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this), \"You should take the opportunity to refresh your memory of the room and outcome images.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.centerTwo,\n          children: [\"If you are ready to continue, please press the [\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"SPACEBAR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, this), \"].\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cockpit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.textblock,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this);\n  }\n\n  redirectToNextStage() {\n    this.props.history.push({\n      pathname: `/MainTaskIntro`,\n      state: {// userID: this.state.userID,\n        // date: this.state.date,\n        // startTime: this.state.startTime,\n      }\n    }); // console.log(\"UserID is: \" + this.state.userID);\n  }\n\n}\n\nexport default _c = withRouter(MainTask);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/MainTask.js"],"names":["React","withRouter","DATABASE_URL","styles","Slider","View","OutcomeSlider","OutcomeSliderBar","ElementsFullDisplay","ElementsIndicator","range","MainTask","Component","constructor","props","trialSgmMu","Array","nr_train_a_trial","fill","map","trialRT","randNum","getRandomInt","StructToRender","require","precededShift","w0","relevant_w","col_sq","val_corr_elem_tmp","epsilon","val_corr_elem_final_tmp","each_element","Number","toFixed","state","trialTotal","trialPerBlock","trialNum","trialBlockNum","blockTotal","blockNum","choiceTime0","element1","element2","element3","indicTrials","timerCountDur","feedback","mounted","timePassed","timePassed2","all_corr_values","corr_values","trainAcc","array_tmp","corr_elem","all_element_values","window","addEventListener","e","keyCode","target","document","body","preventDefault","nextTrial","setState","redirectToNextStage","trialNum_tmp","block_tmp","componentDidMount","setTimeout","bind","componentWillUnmount","callback","render","includes","cockpit","disp_elementIndicator","disp_elements","disp_feedback","handleIncrement","disp_slider","Math","round","performance","now","text","questions","result","saveSgmMu","overlaybar","text2","container","time","sgm","mu","disp_break","main","center","centerTwo","textblock","history","push","pathname"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AAEA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,KAAT,QAAsB,QAAtB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAIC,UAAU,GAAGC,KAAK,CAACC,gBAAD,CAAL,CACdC,IADc,GAEdC,GAFc,CAEV,MAAMH,KAAK,CAAC,CAAD,CAAL,CAASE,IAAT,CAAc,CAAd,CAFI,CAAjB;AAGA,QAAIE,OAAO,GAAGJ,KAAK,CAACC,gBAAD,CAAL,CACXC,IADW,GAEXC,GAFW,CAEP,MAAMH,KAAK,CAAC,C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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\";\nimport { View } from \"react-native\";\nimport OutcomeSlider from \"./sliderOutcome\";\nimport OutcomeSliderBar from \"./sliderOutcomeBar\";\nimport ElementsFullDisplay from \"./elementsFulldisplay\";\n\nimport ElementsIndicator from \"./elementsIndicator\";\nimport { range } from \"lodash\";\n////////////////////////////////////////////////////////////////////////////////\n// function shuffle(array) {\n//   let currentIndex = array.length,\n//     randomIndex;\n//\n//   // While there remain elements to shuffle...\n//   while (currentIndex !== 0) {\n//     // Pick a remaining element...\n//     randomIndex = Math.floor(Math.random() * currentIndex);\n//     currentIndex--;\n//\n//     // And swap it with the current element.\n//     [array[currentIndex], array[randomIndex]] = [\n//       array[randomIndex],\n//       array[currentIndex],\n//     ];\n//   }\n//   return array;\n// }\n//\n// function getRandomInt(min, max) {\n//   const minimum = Math.ceil(min);\n//   const maximum = Math.floor(max);\n//\n//   return Math.floor(Math.random() * (maximum - minimum + 1)) + minimum;\n// }\n\n// function getRand(array) {\n//   var val_options = range(0, 110, 10);\n//   var rand = val_options[~~(Math.random() * val_options.length)];\n//   // var rand = Math.floor(Math.random() * 10);\n//   if (array.indexOf(rand) === -1) {\n//     return rand;\n//   } else {\n//     return getRand(array);\n//   }\n// }\n/////////////////////////////////////////////////////////////////////////////////\nclass MainTask extends React.Component {\n  constructor(props) {\n    super(props);\n    //\n    // let nr_train_a_trial = 10; //update later\n    // var val_options = range(0, 110, 10);\n    // val_options.splice(val_options.indexOf(50), 1); //remove the 50 to make it clearer which element is correct\n    // var random_val = [];\n    // for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n    //   var val_tmp = val_options[~~(Math.random() * val_options.length)];\n    //   do {\n    //     var val_tmp = val_options[~~(Math.random() * val_options.length)];\n    //   } while (random_val[i - 1] === val_tmp); // make sure it changes every time\n    //   random_val[i] = val_tmp;\n    // }\n\n    // var corr_values = random_val.slice(0, 6);\n    // var inverse_tmp = random_val.slice(6, 12);\n    // var inverse = inverse_tmp.map(function (value) {\n    //   return 100 - value;\n    // });\n    // corr_values.push(\n    //   inverse[0],\n    //   inverse[1],\n    //   inverse[2],\n    //   inverse[3],\n    //   inverse[4],\n    //   inverse[5]\n    // );\n    // let array_tmp = Array(nr_train_a_trial).fill(0);\n\n    // var rightCodeAns = [4, 4, 4, 4, 4, 5, 5, 5, 5];\n    // var corr_pos = [4, 4, 4, 4, 4, 5, 5, 5, 5]; //1 is left and 2 is right; determine where the correct value is displayed\n    // shuffle(corr_pos);\n    //\n    // var corr_elem_tmp = [1, 2, 3]; //1 is left and 2 is right; determine where the correct value is displayed\n    // shuffle(corr_elem_tmp);\n    // var corr_elem = Array(nr_train_a_trial).fill(0);\n    //\n    // for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n    //   if (i < nr_train_a_trial / 3) {\n    //     corr_elem[i] = corr_elem_tmp[0];\n    //   } else if (i >= nr_train_a_trial / 3 && i < (nr_train_a_trial / 3) * 2) {\n    //     corr_elem[i] = corr_elem_tmp[1];\n    //   } else {\n    //     corr_elem[i] = corr_elem_tmp[2];\n    //   }\n    // }\n    //pregenerate the values for all elements\n    // var check_al2 = [];\n    // var check_al1 = [];\n    //\n    // for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n    //   var restricted = [corr_values[i], 100 - corr_values[i]];\n    //   if (i < nr_train_a_trial / 2) {\n    //     check_al1[i] = getRand(restricted);\n    //     check_al2[i] = 100 - corr_values[i];\n    //   } else {\n    //     check_al1[i] = 100 - corr_values[i];\n    //     check_al2[i] = getRand(restricted);\n    //   }\n    // }\n\n    // var all_element_values = Array(nr_train_a_trial)\n    //   .fill()\n    //   .map(() => Array(3).fill(0));\n    //\n    // for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n    //   all_element_values[i][corr_elem[i] - 1] = corr_values[i];\n    //   if (corr_elem[i] === 1) {\n    //     all_element_values[i][1] = check_al1[i];\n    //     all_element_values[i][2] = check_al2[i];\n    //   } else if (corr_elem[i] === 2) {\n    //     all_element_values[i][0] = check_al1[i];\n    //     all_element_values[i][2] = check_al2[i];\n    //   } else if (corr_elem[i] === 3) {\n    //     all_element_values[i][0] = check_al1[i];\n    //     all_element_values[i][1] = check_al2[i];\n    //   }\n    // }\n\n    let trialSgmMu = Array(nr_train_a_trial)\n      .fill()\n      .map(() => Array(3).fill(0));\n    let trialRT = Array(nr_train_a_trial)\n      .fill()\n      .map(() => Array(3).fill(0));\n\n    var randNum = \"struct_\" + getRandomInt(1, 10);\n    var StructToRender = require(\"./taskStructs/\" + randNum + \".json\");\n    var precededShift = StructToRender[0]; //1=intra-dimensional; 2=extra-dimensional\n    var w0 = StructToRender[1];\n    var relevant_w = StructToRender[2];\n    var col_sq = StructToRender[3];\n    var val_corr_elem_tmp = StructToRender[4];\n    var epsilon = StructToRender[5];\n    var val_corr_elem_final_tmp = StructToRender[6];\n    var val_corr_elem_tmp = val_corr_elem_final_tmp.map(function (\n      each_element\n    ) {\n      return Number(each_element.toFixed(0));\n    });\n\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"MainTaskC\",\n      trialTotal: nr_train_a_trial,\n      trialPerBlock: 50,\n      trialNum: 1,\n      trialBlockNum: 1,\n      blockTotal: 5,\n      blockNum: 1,\n      trialRT: trialRT,\n      choiceTime0: 0,\n      element1: col_sq[0],\n      element2: col_sq[1],\n      element3: col_sq[2],\n      indicTrials: [10,87,163,240],//generate by Matlab function linspace(min(10),max(240),4)\n      // trialSliderRT: null,\n      trialSgmMu: trialSgmMu,\n      timerCountDur: 10,\n      feedback: false,\n      mounted: 0,\n      choiceTime0: 0,\n      timePassed: false,\n      timePassed2: false,\n      all_corr_values: corr_values,\n      trainAcc: array_tmp,\n      corr_elem: corr_elem,\n      all_element_values: all_element_values,\n    };\n    // this.displayFeedback = this.displayFeedback.bind(this)\n    /* prevents page from going to the right/left when arrows are pressed .*/\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      } else if (e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  }\n  /////////////////////////////////////////////////////////////////////////////////\n\n  nextTrial() {\n    if (\n      this.state.trialNum === this.state.trialTotal &&\n      this.state.blockNum < this.state.blockTotal\n    ) {\n      // setInterval()\n      // {this.disp_break)}\n\n      this.setState({\n        trialNum: 1,\n        // trialRT: trialRT,\n        choiceTime0: 0,\n        // trialSliderRT: null,\n        // trialSgmMu: trialSgmMu,\n        timerCountDur: 10,\n        feedback: false,\n        mounted: 0,\n        // trialTotal: nr_train_a_trial,\n        blockTotal: 10,\n        blockNum: 1,\n        choiceTime0: 0,\n        timePassed: false,\n        timePassed2: false,\n\n        // all_corr_values: corr_values,\n        // trainAcc: array_tmp,\n        // corr_elem: corr_elem,\n        // all_element_values: all_element_values,\n      });\n    } else if (\n      this.state.trialNum === this.state.trialTotal &&\n      this.state.blockNum === this.state.blockTotal\n    ) {\n      this.redirectToNextStage();\n    } else {\n      var trialNum_tmp = this.state.trialNum + 1;\n      var block_tmp = this.state.blockNum + 1;\n\n      this.setState({\n        trialNum: trialNum_tmp,\n        blockNum: block_tmp,\n        feedback: false,\n        timePassed: false,\n        timePassed2: false,\n      });\n    }\n  }\n  componentDidMount() {\n    setTimeout(\n      function () {\n        this.setState({\n          mounted: 1,\n        });\n      }.bind(this),\n      5000\n    );\n  }\n\n  componentWillUnmount() {\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n\n  /////////////////////////////////////////////////////////////////////////////////\n  render() {\n    if (this.state.indicTrials.includes(this.state.trialNum)) {\n      return <div className={styles.cockpit}>{this.disp_elementIndicator()}</div>;\n    } else {\n      if (!this.state.timePassed && this.state.feedback === false) {\n        return <div className={styles.cockpit}>{this.disp_elements()}</div>;\n      } else if (this.state.feedback === true && !this.state.timePassed2) {\n        return (\n          <div className={styles.cockpit}>\n            {this.disp_feedback()} {this.handleIncrement}{\" \"}\n          </div>\n        );\n      } else if (!this.state.feedback && this.state.timePassed2 === false) {\n        return <div className={styles.cockpit}>{this.disp_slider()}</div>;\n      } else if (\n        this.state.timePassed2 === true &&\n        this.state.feedback === true\n      ) {\n        {\n          this.nextTrial();\n        }\n        return null;\n      }\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////\n  disp_elementIndicator() {\n    return (\n      <div className={styles.cockpit}>\n        <ElementsIndicator\n          value1={this.state.all_element_values[this.state.trialNum - 1][0]}\n          value2={this.state.all_element_values[this.state.trialNum - 1][1]}\n          value3={this.state.all_element_values[this.state.trialNum - 1][2]}\n          corAns={this.state.corr_elem} //adapt later\n          element_col={[1, 2, 3]} //adapt later\n          userID={100} //props.userID,\n          trialNum={this.state.trialNum}\n          blockNum={this.state.blockNum}\n        />\n      </div>\n    );\n  }\n\n  disp_slider() {\n    let choiceTime0 = Math.round(performance.now());\n\n    let text = (\n      <div className={styles.questions}>\n        How large is the alien population?\n        <br />\n        <br />\n        <br />\n      </div>\n    );\n\n    return (\n      <div className={styles.cockpit}>\n        <div>{text}</div>\n        <Slider\n          onSpacebarHit={(result) => {\n            this.saveSgmMu(result, choiceTime0);\n          }}\n        />\n      </div>\n    );\n  }\n\n  disp_elements() {\n    setTimeout(() => {\n      this.setState({ timePassed: true, timePassed2: false });\n    }, 5000);\n\n    return (\n      <div className={styles.overlaybar}>\n        <ElementsFullDisplay\n          value1={this.state.all_element_values[this.state.trialNum - 1][0]}\n          value2={this.state.all_element_values[this.state.trialNum - 1][1]}\n          value3={this.state.all_element_values[this.state.trialNum - 1][2]}\n          img1={this.state.element1}\n          img2={this.state.element2}\n          img3={this.state.element3}\n          elem_indic={1} //adapt later\n        />\n      </div>\n    );\n  }\n\n  disp_feedback() {\n    let text2 = (\n      <div className={styles.questions}>\n        The true population on the planet was{\" \"}\n        {this.state.all_corr_values[this.state.trialNum - 1]} million.\n        <br />\n        <br />\n        <br />\n      </div>\n    );\n\n    setTimeout(() => {\n      this.setState({ timePassed2: true, timePassed: false });\n    }, 700);\n\n    return (\n      <div className={styles.cockpit}>\n        <div>{text2}</div>\n        <View style={styles.container}>\n          <div className={styles.overlaybar}>\n            <OutcomeSlider\n              mu={this.state.trialSgmMu[this.state.trialNum - 1][2]}\n              sgm={this.state.trialSgmMu[this.state.trialNum - 1][1]}\n            />\n          </div>\n          <div className={styles.overlaybar}>\n            <OutcomeSliderBar\n              mu={this.state.trialSgmMu[this.state.trialNum - 1][2]}\n              sgm={this.state.trialSgmMu[this.state.trialNum - 1][1]}\n              value={this.state.all_corr_values[this.state.trialNum - 1]}\n            />\n          </div>\n        </View>\n      </div>\n    );\n  }\n\n  saveSgmMu(result, time) {\n    let trialSgmMu = this.state.trialSgmMu;\n    let trialRT = this.state.trialRT;\n    let trialNum = this.state.trialNum;\n    trialSgmMu[trialNum - 1][1] = result.sgm;\n    trialSgmMu[trialNum - 1][2] = result.mu;\n    trialRT[trialNum - 1][0] = trialNum;\n    trialRT[trialNum - 1][1] = time;\n    trialRT[trialNum - 1][2] = Math.round(performance.now());\n    trialRT[trialNum - 1][3] = trialRT[trialNum - 1][2] - time;\n\n    this.setState({\n      trialSgmMu: trialSgmMu,\n      trialRT: trialRT,\n      feedback: true,\n      //trialNum : trialNum+1,\n      // outcome: show\n    });\n  }\n\n  disp_break() {\n    let text = (\n      <div className={styles.main}>\n        <p>\n          <span className={styles.center}>BREAK</span>\n          You have completed {this.state.blockNum} out of&nbsp;\n          {this.state.blockTotal} blocks!\n          <br />\n          <br />\n          You may take a short break.\n          <br />\n          <br />\n          You should take the opportunity to refresh your memory of the room and\n          outcome images.\n          <br />\n          <span className={styles.centerTwo}>\n            If you are ready to continue, please press the [\n            <strong>SPACEBAR</strong>].\n          </span>\n        </p>\n      </div>\n    );\n\n    return (\n      <div className={styles.cockpit}>\n        <div className={styles.textblock}>{text}</div>\n      </div>\n    );\n  }\n\n\n\n  redirectToNextStage() {\n    this.props.history.push({\n      pathname: `/MainTaskIntro`,\n      state: {\n        // userID: this.state.userID,\n        // date: this.state.date,\n        // startTime: this.state.startTime,\n      },\n    });\n\n    // console.log(\"UserID is: \" + this.state.userID);\n  }\n}\n\nexport default withRouter(MainTask);\n"]},"metadata":{},"sourceType":"module"}