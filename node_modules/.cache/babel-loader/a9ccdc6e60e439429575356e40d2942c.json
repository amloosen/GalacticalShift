{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/barOutcome.js\";\nimport { range } from \"lodash\";\nimport React, { Component } from \"react\";\nimport normalPdf from \"normal-pdf\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BarOutcome extends React.Component {\n  constructor(props) {\n    super(props);\n    const mu = this.props.mu;\n    const sgm = this.props.sgm; // const mu = 50;\n    // const sgm = 20;\n\n    const trueValue = 50; // const trueValue = this.props.value;\n\n    const xValues = range(0, 100, 0.5);\n    const yValues = xValues.map(x => normalPdf(x, mu, sgm));\n    const yValuesAdaptNew = yValues.map(function (element) {\n      return element * 1000;\n    });\n    var xValuesOutcome = new Array(200).fill(null);\n    xValuesOutcome[trueValue * 2] = yValuesAdaptNew[trueValue * 2];\n    this.state = {\n      series: [{\n        name: 'Net Profit',\n        data: [80, 70, 200, 60]\n      }],\n      options: {\n        chart: {\n          type: 'bar',\n          height: 80\n        },\n        plotOptions: {\n          bar: {\n            horizontal: false,\n            columnWidth: '55%',\n            endingShape: 'rounded'\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          show: true,\n          width: 2,\n          colors: ['transparent']\n        },\n        markers: {\n          size: 0\n        },\n        xaxis: {\n          tickAmount: 5,\n          overwriteCategories: ['0', '25', '50', '75', '100'],\n          lines: {\n            show: false\n          },\n          axisTicks: {\n            color: '#e7e6e2',\n            width: 3,\n            height: 10\n          },\n          axisBorder: {\n            show: true,\n            color: '#e7e6e2',\n            height: 4,\n            width: '100%'\n          },\n          labels: {\n            rotate: 0,\n            style: {\n              fontSize: '20px',\n              colors: ['#e7e6e2', '#e7e6e2', '#e7e6e2', '#e7e6e2', '#e7e6e2'],\n              offsetX: 0,\n              offsetY: 0\n            }\n          }\n        },\n        yaxis: {\n          min: 0,\n          labels: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          lines: {\n            show: false\n          }\n        },\n        fill: {\n          opacity: 1\n        },\n        tooltip: {\n          y: {\n            formatter: function (val) {\n              return \"$ \" + val + \" thousands\";\n            }\n          }\n        }\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chart\",\n      children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n        options: this.state.options,\n        series: this.state.series,\n        type: \"bar\",\n        height: 350\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default BarOutcome;","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/barOutcome.js"],"names":["range","React","Component","normalPdf","ReactApexChart","BarOutcome","constructor","props","mu","sgm","trueValue","xValues","yValues","map","x","yValuesAdaptNew","element","xValuesOutcome","Array","fill","state","series","name","data","options","chart","type","height","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","enabled","stroke","show","width","colors","markers","size","xaxis","tickAmount","overwriteCategories","lines","axisTicks","color","axisBorder","labels","rotate","style","fontSize","offsetX","offsetY","yaxis","min","opacity","tooltip","y","formatter","val","render"],"mappings":"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","sourcesContent":["import { range } from \"lodash\";\nimport React, { Component } from \"react\";\nimport normalPdf from \"normal-pdf\";\nimport ReactApexChart from \"react-apexcharts\";\n\nclass BarOutcome extends React.Component {\n  constructor(props) {\n    super(props);\n    const mu  = this.props.mu\n    const sgm  = this.props.sgm\n    // const mu = 50;\n    // const sgm = 20;\n    const trueValue = 50;\n    // const trueValue = this.props.value;\n\n    const xValues = range(0, 100,0.5);\n    const yValues = xValues.map((x) => normalPdf(x, mu, sgm))\n    const yValuesAdaptNew = yValues.map(function(element) {\n      return element*1000;});\n\n      var xValuesOutcome = new Array(200).fill(null);\n      xValuesOutcome[trueValue*2] = yValuesAdaptNew[trueValue*2];\n\n\n      this.state = {\n\n        series: [{\n          name: 'Net Profit',\n          data: [80,70,200,60]\n        }],\n        options: {\n          chart: {\n            type: 'bar',\n            height: 80\n          },\n          plotOptions: {\n            bar: {\n              horizontal: false,\n              columnWidth: '55%',\n              endingShape: 'rounded'\n            },\n          },\n          dataLabels: {\n            enabled: false\n          },\n          stroke: {\n            show: true,\n            width: 2,\n            colors: ['transparent']\n          },\n          markers: {\n            size: 0\n          },\n          xaxis: {\n            tickAmount: 5,\n            overwriteCategories: ['0', '25', '50', '75', '100'],\n            lines: {\n              show: false\n            },\n            axisTicks: {\n              color: '#e7e6e2',\n              width: 3,\n              height: 10\n            },\n            axisBorder: {\n              show: true,\n              color: '#e7e6e2',\n              height: 4,\n            width: '100%'},\n            labels: {\n              rotate: 0,\n              style: {\n                fontSize: '20px',\n                colors: ['#e7e6e2','#e7e6e2','#e7e6e2','#e7e6e2','#e7e6e2'],\n                offsetX: 0,\n             offsetY: 0}\n            }\n                  },\n          yaxis: {\n            min:0,\n            labels:{show: false },\n            axisTicks:{\n              show: false\n            },\n            lines: {\n              show: false\n            }\n\n          },\n          fill: {\n            opacity: 1\n          },\n          tooltip: {\n            y: {\n              formatter: function (val) {\n                return \"$ \" + val + \" thousands\"\n              }\n            }\n          }\n        },\n\n\n      };\n    }\n\n    render() {\n      return (\n        <div id=\"chart\">\n        <ReactApexChart options={this.state.options} series={this.state.series} type=\"bar\" height={350} />\n        </div>\n      );\n    }\n  }\n\nexport default BarOutcome;\n"]},"metadata":{},"sourceType":"module"}