{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTaskC_check.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\";\nimport { SafeAreaView, View, StyleSheet } from \"react-native\";\nimport OutcomeSlider from \"./sliderOutcome\";\nimport OutcomeSliderBar from \"./sliderOutcomeBar\";\nimport ElementsFullDisplay from \"./elementsFulldisplay\";\nimport { range } from \"lodash\"; ////////////////////////////////////////////////////////////////////////////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction shuffle(array) {\n  let currentIndex = array.length,\n      randomIndex; // While there remain elements to shuffle...\n\n  while (currentIndex != 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--; // And swap it with the current element.\n\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n\nfunction getRand(array) {\n  var val_options = range(0, 110, 10);\n  var rand = val_options[~~(Math.random() * val_options.length)]; // var rand = Math.floor(Math.random() * 10);\n\n  if (array.indexOf(rand) === -1) {\n    return rand;\n  } else {\n    return getRand(array);\n  }\n} /////////////////////////////////////////////////////////////////////////////////\n\n\nclass TrainingTask extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.nextTrial = () => {\n      debugger;\n      var traintrialNum_tmp = this.state.traintrialNum + 1;\n      var all_corr_values = this.state.all_corr_values;\n\n      if (traintrialNum_tmp === this.state.traintrialTotal) {\n        this.redirectToNextStage();\n      } else {\n        if (traintrialNum_tmp <= this.state.traintrialTotal / 2) {\n          var valTrainElem = all_corr_values[traintrialNum_tmp - 1];\n        } else {\n          var valTrainElem = 100 - all_corr_values[traintrialNum_tmp - 1];\n        }\n\n        this.setState({\n          traintrialNum: traintrialNum_tmp,\n          feedback: false,\n          timePassed: false,\n          timePassed2: false,\n          valTrainElem: valTrainElem,\n          corr_value: this.state.all_corr_values[traintrialNum_tmp - 1]\n        });\n      }\n    };\n\n    let nr_train_a_trial = 10; //update later\n\n    var val_options = range(0, 110, 10);\n    val_options.splice(val_options.indexOf(50), 1); //remove the 50 to make it clearer which element is correct\n\n    var random_val = [];\n\n    for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n      var val_tmp = val_options[~~(Math.random() * val_options.length)];\n\n      do {\n        var val_tmp = val_options[~~(Math.random() * val_options.length)];\n      } while (random_val[i - 1] === val_tmp); // make sure it changes every time\n\n\n      random_val[i] = val_tmp;\n    }\n\n    var corr_values = random_val.slice(0, 6);\n    var inverse_tmp = random_val.slice(6, 12);\n    var inverse = inverse_tmp.map(function (value) {\n      return 100 - value;\n    });\n    corr_values.push(inverse[0], inverse[1], inverse[2], inverse[3], inverse[4], inverse[5]);\n    let array_tmp = Array(nr_train_a_trial).fill(0); // var rightCodeAns = [4, 4, 4, 4, 4, 5, 5, 5, 5];\n\n    var corr_pos = [4, 4, 4, 4, 4, 5, 5, 5, 5]; //1 is left and 2 is right; determine where the correct value is displayed\n\n    shuffle(corr_pos);\n    var corr_elem_tmp = [1, 2, 3]; //1 is left and 2 is right; determine where the correct value is displayed\n\n    shuffle(corr_elem_tmp);\n    var corr_elem = Array(nr_train_a_trial).fill(0);\n\n    for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n      if (i < nr_train_a_trial / 3) {\n        corr_elem[i] = corr_elem_tmp[0];\n      } else if (i >= nr_train_a_trial / 3 && i < nr_train_a_trial / 3 * 2) {\n        corr_elem[i] = corr_elem_tmp[1];\n      } else {\n        corr_elem[i] = corr_elem_tmp[2];\n      }\n    } //pregenerate the values for all elements\n\n\n    var check_al2 = [];\n    var check_al1 = [];\n\n    for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n      var restricted = [corr_values[i], 100 - corr_values[i]];\n\n      if (i < nr_train_a_trial / 2) {\n        check_al1[i] = getRand(restricted);\n        check_al2[i] = 100 - corr_values[i];\n      } else {\n        check_al1[i] = 100 - corr_values[i];\n        check_al2[i] = getRand(restricted);\n      }\n    }\n\n    var all_element_values = Array(nr_train_a_trial).fill().map(() => Array(3).fill(0));\n\n    for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n      all_element_values[i][corr_elem[i] - 1] = corr_values[i];\n\n      if (corr_elem[i] == 1) {\n        all_element_values[i][1] = check_al1[i];\n        all_element_values[i][2] = check_al2[i];\n      } else if (corr_elem[i] == 2) {\n        all_element_values[i][0] = check_al1[i];\n        all_element_values[i][2] = check_al2[i];\n      } else if (corr_elem[i] == 3) {\n        all_element_values[i][0] = check_al1[i];\n        all_element_values[i][1] = check_al2[i];\n      }\n    }\n\n    let trialSgmMu = Array(nr_train_a_trial).fill().map(() => Array(3).fill(0));\n    let trialRT = Array(nr_train_a_trial).fill().map(() => Array(3).fill(0));\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"TrainingTaskC\",\n      traintrialNum: 1,\n      trialRT: trialRT,\n      choiceTime0: 0,\n      // //\n      // trialSliderRT: null,\n      trialSgmMu: trialSgmMu,\n      timerCountDur: 10,\n      feedback: false,\n      mounted: 0,\n      trueValue: 50,\n      counter: 100,\n      trialRT: trialRT,\n      traintrialTotal: nr_train_a_trial,\n      choiceTime0: 0,\n      timePassed: false,\n      timePassed2: false,\n      mounted: 0,\n      all_corr_values: corr_values,\n      valTrainElem: corr_values[0],\n      corr_value: corr_values[0],\n      trainAcc: array_tmp,\n      corr_elem: corr_elem,\n      all_element_values: all_element_values,\n      trialSgmMu: trialSgmMu\n    }; // this.displayFeedback = this.displayFeedback.bind(this)\n\n    /* prevents page from going to the right/left when arrows are pressed .*/\n\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      } else if (e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  } /////////////////////////////////////////////////////////////////////////////////\n\n\n  componentDidMount() {// setTimeout(\n    //   function() {\n    //     this.setState({\n    //       mounted: 1,\n    //     });\n    //   }\n    //   .bind(this),\n    //   5000\n    // );\n  }\n\n  componentWillUnmount() {\n    ;\n  } //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n  /////////////////////////////////////////////////////////////////////////////////\n\n\n  render() {\n    let elementsTimer = setTimeout(() => {\n      this.setState({\n        timePassed: true\n      });\n    }, 100); //show elements\n\n    if (!this.state.timePassed) {\n      return /*#__PURE__*/_jsxDEV(ElementsFullDisplay, {\n        value1: 30,\n        value2: 40,\n        value3: 80,\n        trialTotal: this.state.traintrialTotal,\n        trialNum: this.state.traintrialNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this); // clearTimeout(elementsTimer)\n    } else {\n      let choiceTime0 = Math.round(performance.now());\n\n      let text = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [\"How large is the alien population?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this);\n\n      let text2 = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [\"The true population on the planet was \", 50, \" million.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this);\n\n      if (this.state.feedback === true) {\n        let x = this;\n        let {\n          counter\n        } = this.state;\n        debugger;\n        let timer = setTimeout(function () {\n          if (counter > 0) {\n            x.setState({\n              counter: counter - 1\n            });\n          } else {\n            x.nextTrial(timer);\n            x.setState({\n              counter: x.state.val\n            });\n          }\n        }, 100);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", this.state.feedback ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cockpit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: text2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(View, {\n            style: styles.container,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.overlaybar,\n              children: /*#__PURE__*/_jsxDEV(OutcomeSliderBar, {\n                mu: this.state.trialSgmMu[this.state.traintrialNum - 1][2],\n                sgm: this.state.trialSgmMu[this.state.traintrialNum - 1][1],\n                value: this.state.trueValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.overlaybar,\n              children: /*#__PURE__*/_jsxDEV(OutcomeSlider, {\n                mu: this.state.trialSgmMu[this.state.traintrialNum - 1][2],\n                sgm: this.state.trialSgmMu[this.state.traintrialNum - 1][1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cockpit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Slider, {\n            onSpacebarHit: result => {\n              this.saveSgmMu(result, choiceTime0);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this);\n    }\n  } /////////////////////////////////////////////////////////////////////////////////\n  //   outcomeTimer() {\n  //     debugger;\n  //       setTimeout(() => {\n  //         this.setState({ timePassed2: true });\n  //       }, 100); //show elements\n  // if (this.state.timePassed2===true) {\n  //   {\n  //     this.nextTrial();\n  //   }\n  //   return null;}\n  //\n  //\n  //   }\n\n\n  saveSgmMu(result, time) {\n    let trialSgmMu = this.state.trialSgmMu;\n    let trialRT = this.state.trialRT;\n    let traintrialNum = this.state.traintrialNum;\n    trialSgmMu[traintrialNum - 1][1] = result.sgm;\n    trialSgmMu[traintrialNum - 1][2] = result.mu;\n    trialRT[traintrialNum - 1][0] = traintrialNum;\n    trialRT[traintrialNum - 1][1] = time;\n    trialRT[traintrialNum - 1][2] = Math.round(performance.now());\n    trialRT[traintrialNum - 1][3] = trialRT[traintrialNum - 1][2] - time;\n    this.setState({\n      trialSgmMu: trialSgmMu,\n      trialRT: trialRT,\n      feedback: true,\n      timePassed: false //traintrialNum : traintrialNum+1,\n      // outcome: show\n\n    });\n  }\n\n  redirectToNextStage() {\n    this.props.history.push({\n      pathname: `/MainTaskIntro`,\n      state: {// userID: this.state.userID,\n        // date: this.state.date,\n        // startTime: this.state.startTime,\n      }\n    }); // console.log(\"UserID is: \" + this.state.userID);\n  }\n\n}\n\nexport default _c = withRouter(TrainingTask);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTaskC_check.js"],"names":["React","withRouter","DATABASE_URL","styles","Slider","SafeAreaView","View","StyleSheet","OutcomeSlider","OutcomeSliderBar","ElementsFullDisplay","range","shuffle","array","currentIndex","length","randomIndex","Math","floor","random","getRand","val_options","rand","indexOf","TrainingTask","Component","constructor","props","nextTrial","traintrialNum_tmp","state","traintrialNum","all_corr_values","traintrialTotal","redirectToNextStage","valTrainElem","setState","feedback","timePassed","timePassed2","corr_value","nr_train_a_trial","splice","random_val","i","val_tmp","corr_values","slice","inverse_tmp","inverse","map","value","push","array_tmp","Array","fill","corr_pos","corr_elem_tmp","corr_elem","check_al2","check_al1","restricted","all_element_values","trialSgmMu","trialRT","choiceTime0","timerCountDur","mounted","trueValue","counter","trainAcc","window","addEventListener","e","keyCode","target","document","body","preventDefault","componentDidMount","componentWillUnmount","render","elementsTimer","setTimeout","round","performance","now","text","questions","text2","x","timer","val","cockpit","container","overlaybar","result","saveSgmMu","time","sgm","mu","history","pathname"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\";\nimport { SafeAreaView, View, StyleSheet } from \"react-native\";\nimport OutcomeSlider from \"./sliderOutcome\";\nimport OutcomeSliderBar from \"./sliderOutcomeBar\";\nimport ElementsFullDisplay from \"./elementsFulldisplay\";\nimport { range } from \"lodash\";\n////////////////////////////////////////////////////////////////////////////////\nfunction shuffle(array) {\n  let currentIndex = array.length,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex != 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex],\n    ];\n  }\n  return array;\n}\n\nfunction getRand(array) {\n  var val_options = range(0, 110, 10);\n  var rand = val_options[~~(Math.random() * val_options.length)];\n  // var rand = Math.floor(Math.random() * 10);\n  if (array.indexOf(rand) === -1) {\n    return rand;\n  } else {\n    return getRand(array);\n  }\n}\n/////////////////////////////////////////////////////////////////////////////////\nclass TrainingTask extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let nr_train_a_trial = 10; //update later\n    var val_options = range(0, 110, 10);\n    val_options.splice(val_options.indexOf(50), 1); //remove the 50 to make it clearer which element is correct\n    var random_val = [];\n    for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n      var val_tmp = val_options[~~(Math.random() * val_options.length)];\n      do {\n        var val_tmp = val_options[~~(Math.random() * val_options.length)];\n      } while (random_val[i - 1] === val_tmp); // make sure it changes every time\n      random_val[i] = val_tmp;\n    }\n\n    var corr_values = random_val.slice(0, 6);\n    var inverse_tmp = random_val.slice(6, 12);\n    var inverse = inverse_tmp.map(function (value) {\n      return 100 - value;\n    });\n    corr_values.push(\n      inverse[0],\n      inverse[1],\n      inverse[2],\n      inverse[3],\n      inverse[4],\n      inverse[5]\n    );\n    let array_tmp = Array(nr_train_a_trial).fill(0);\n\n    // var rightCodeAns = [4, 4, 4, 4, 4, 5, 5, 5, 5];\n    var corr_pos = [4, 4, 4, 4, 4, 5, 5, 5, 5]; //1 is left and 2 is right; determine where the correct value is displayed\n    shuffle(corr_pos);\n\n    var corr_elem_tmp = [1, 2, 3]; //1 is left and 2 is right; determine where the correct value is displayed\n    shuffle(corr_elem_tmp);\n    var corr_elem = Array(nr_train_a_trial).fill(0);\n\n    for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n      if (i < nr_train_a_trial / 3) {\n        corr_elem[i] = corr_elem_tmp[0];\n      } else if (i >= nr_train_a_trial / 3 && i < (nr_train_a_trial / 3) * 2) {\n        corr_elem[i] = corr_elem_tmp[1];\n      } else {\n        corr_elem[i] = corr_elem_tmp[2];\n      }\n    }\n    //pregenerate the values for all elements\n    var check_al2 = [];\n    var check_al1 = [];\n\n    for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n      var restricted = [corr_values[i], 100 - corr_values[i]];\n      if (i < nr_train_a_trial / 2) {\n        check_al1[i] = getRand(restricted);\n        check_al2[i] = 100 - corr_values[i];\n      } else {\n        check_al1[i] = 100 - corr_values[i];\n        check_al2[i] = getRand(restricted);\n      }\n    }\n\n    var all_element_values = Array(nr_train_a_trial)\n      .fill()\n      .map(() => Array(3).fill(0));\n\n    for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n      all_element_values[i][corr_elem[i] - 1] = corr_values[i];\n      if (corr_elem[i] == 1) {\n        all_element_values[i][1] = check_al1[i];\n        all_element_values[i][2] = check_al2[i];\n      } else if (corr_elem[i] == 2) {\n        all_element_values[i][0] = check_al1[i];\n        all_element_values[i][2] = check_al2[i];\n      } else if (corr_elem[i] == 3) {\n        all_element_values[i][0] = check_al1[i];\n        all_element_values[i][1] = check_al2[i];\n      }\n    }\n\n    let trialSgmMu = Array(nr_train_a_trial)\n      .fill()\n      .map(() => Array(3).fill(0));\n    let trialRT = Array(nr_train_a_trial)\n      .fill()\n      .map(() => Array(3).fill(0));\n\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"TrainingTaskC\",\n      traintrialNum: 1,\n      trialRT: trialRT,\n      choiceTime0: 0,\n      // //\n      // trialSliderRT: null,\n      trialSgmMu: trialSgmMu,\n      timerCountDur: 10,\n      feedback: false,\n      mounted: 0,\n      trueValue: 50,\n      counter:100,\n\n      trialRT: trialRT,\n      traintrialTotal: nr_train_a_trial,\n      choiceTime0: 0,\n      timePassed: false,\n      timePassed2: false,\n      mounted: 0,\n      all_corr_values: corr_values,\n      valTrainElem: corr_values[0],\n      corr_value: corr_values[0],\n      trainAcc: array_tmp,\n      corr_elem: corr_elem,\n      all_element_values: all_element_values,\n      trialSgmMu: trialSgmMu,\n    };\n    // this.displayFeedback = this.displayFeedback.bind(this)\n    /* prevents page from going to the right/left when arrows are pressed .*/\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      } else if (e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  }\n  /////////////////////////////////////////////////////////////////////////////////\n  nextTrial =()=> {\n    debugger;\n    var traintrialNum_tmp = this.state.traintrialNum + 1;\n    var all_corr_values = this.state.all_corr_values;\n    if (traintrialNum_tmp === this.state.traintrialTotal) {\n      this.redirectToNextStage();\n    } else {\n      if (traintrialNum_tmp <= this.state.traintrialTotal / 2) {\n        var valTrainElem = all_corr_values[traintrialNum_tmp - 1];\n      } else {\n        var valTrainElem = 100 - all_corr_values[traintrialNum_tmp - 1];\n      }\n\n      this.setState({\n        traintrialNum: traintrialNum_tmp,\n        feedback: false,\n        timePassed: false,\n        timePassed2: false,\n        valTrainElem: valTrainElem,\n        corr_value: this.state.all_corr_values[traintrialNum_tmp - 1],\n      });\n    }\n  }\n  componentDidMount() {\n      // setTimeout(\n      //   function() {\n      //     this.setState({\n      //       mounted: 1,\n      //     });\n      //   }\n      //   .bind(this),\n      //   5000\n      // );\n    }\n\ncomponentWillUnmount() {\n   ;\n }\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n\n\n\n  /////////////////////////////////////////////////////////////////////////////////\n  render() {\n    let elementsTimer = setTimeout(() => {\n      this.setState({ timePassed: true });\n    }, 100); //show elements\n    if (!this.state.timePassed) {\n      return (\n        <ElementsFullDisplay\n          value1={30}\n          value2={40}\n          value3={80}\n          trialTotal={this.state.traintrialTotal}\n          trialNum={this.state.traintrialNum}\n        />\n      );\n      // clearTimeout(elementsTimer)\n    } else {\n\n\n      let choiceTime0 = Math.round(performance.now());\n\n      let text = (\n        <div className={styles.questions}>\n          How large is the alien population?\n          <br />\n          <br />\n          <br />\n        </div>\n      );\n\n      let text2 = (\n        <div className={styles.questions}>\n          The true population on the planet was {50} million.\n          <br />\n          <br />\n          <br />\n        </div>\n      );\n\n      if (this.state.feedback === true) {\n        let x = this;\n        let { counter } = this.state;\n        debugger;\n        let timer = setTimeout(function () {\n          if (counter > 0) {\n            x.setState({ counter: counter - 1 });\n          } else {\n            x.nextTrial(timer);\n            x.setState({ counter: x.state.val });\n          }\n        }, 100);\n      }\n\n      return (\n        <div>\n          {\" \"}\n          {this.state.feedback ? (\n            <div className={styles.cockpit}>\n              <div>{text2}</div>\n              <View style={styles.container}>\n                <div className={styles.overlaybar}>\n                  <OutcomeSliderBar\n                    mu={this.state.trialSgmMu[this.state.traintrialNum - 1][2]}\n                    sgm={this.state.trialSgmMu[this.state.traintrialNum - 1][1]}\n                    value={this.state.trueValue}\n                  />\n                </div>\n                <div className={styles.overlaybar}>\n                  <OutcomeSlider\n                    mu={this.state.trialSgmMu[this.state.traintrialNum - 1][2]}\n                    sgm={this.state.trialSgmMu[this.state.traintrialNum - 1][1]}\n                  />\n                </div>\n              </View>\n            </div>\n          ) : (\n            <div className={styles.cockpit}>\n              <div>{text}</div>\n              <Slider\n                onSpacebarHit={(result) => {\n                  this.saveSgmMu(result, choiceTime0);\n                }}\n              />\n            </div>\n          )}\n        </div>\n      );\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////\n\n  //   outcomeTimer() {\n  //     debugger;\n  //       setTimeout(() => {\n  //         this.setState({ timePassed2: true });\n  //       }, 100); //show elements\n  // if (this.state.timePassed2===true) {\n  //   {\n  //     this.nextTrial();\n  //   }\n  //   return null;}\n  //\n  //\n  //   }\n\n  saveSgmMu(result, time) {\n    let trialSgmMu = this.state.trialSgmMu;\n    let trialRT = this.state.trialRT;\n    let traintrialNum = this.state.traintrialNum;\n    trialSgmMu[traintrialNum - 1][1] = result.sgm;\n    trialSgmMu[traintrialNum - 1][2] = result.mu;\n    trialRT[traintrialNum - 1][0] = traintrialNum;\n    trialRT[traintrialNum - 1][1] = time;\n    trialRT[traintrialNum - 1][2] = Math.round(performance.now());\n    trialRT[traintrialNum - 1][3] = trialRT[traintrialNum - 1][2] - time;\n    this.setState({\n      trialSgmMu: trialSgmMu,\n      trialRT: trialRT,\n      feedback: true,\n      timePassed: false,\n      //traintrialNum : traintrialNum+1,\n      // outcome: show\n    });\n  }\n\n  redirectToNextStage() {\n    this.props.history.push({\n      pathname: `/MainTaskIntro`,\n      state: {\n        // userID: this.state.userID,\n        // date: this.state.date,\n        // startTime: this.state.startTime,\n      },\n    });\n\n    // console.log(\"UserID is: \" + this.state.userID);\n  }\n}\n\nexport default withRouter(TrainingTask);\n"]},"metadata":{},"sourceType":"module"}