{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/barOutcome.js\";\nimport { range } from \"lodash\";\nimport React, { Component } from \"react\";\nimport normalPdf from \"normal-pdf\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BarOutcome extends React.Component {\n  constructor(props) {\n    super(props);\n    const mu = this.props.mu;\n    const sgm = this.props.sgm;\n    const trueValue = this.props.value; // const mu = 50;\n    // const sgm = 20;\n    // const trueValue = 50;\n\n    const xValues = range(0, 100, 0.5);\n    const yValues = xValues.map(x => normalPdf(x, mu, sgm));\n    const yValuesAdaptNew = yValues.map(function (element) {\n      return element * 1000;\n    });\n    var xValuesOutcome = new Array(200).fill(null);\n    xValuesOutcome[trueValue * 2] = yValuesAdaptNew[trueValue * 2];\n    this.state = {\n      series: [{\n        name: 'Net Profit',\n        data: xValuesOutcome\n      }],\n      options: {\n        chart: {\n          type: 'bar',\n          height: 80\n        },\n        plotOptions: {\n          bar: {\n            horizontal: false,\n            columnWidth: '100%',\n            endingShape: 'rounded'\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          show: true,\n          width: 2,\n          colors: [\"#DAA520\"]\n        },\n        markers: {\n          size: 0\n        },\n        xaxis: {\n          tickAmount: 5,\n          lines: {\n            show: false\n          },\n          labels: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          axisBorder: {\n            show: false,\n            color: '#e7e6e2',\n            height: 4,\n            width: '100%'\n          }\n        },\n        yaxis: {\n          min: 0,\n          labels: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          lines: {\n            show: false\n          }\n        },\n        fill: {\n          colors: ['#DAA520'],\n          opacity: 1\n        },\n        animations: {\n          enabled: false\n        },\n        grid: {\n          show: false\n        },\n        tooltip: {\n          enabled: false\n        },\n        legend: {\n          show: false\n        }\n      },\n      toolbar: {\n        show: false\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chart\",\n      children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n        options: this.state.options,\n        series: this.state.series,\n        type: \"bar\",\n        height: 350\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default BarOutcome;","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/barOutcome.js"],"names":["range","React","Component","normalPdf","ReactApexChart","BarOutcome","constructor","props","mu","sgm","trueValue","value","xValues","yValues","map","x","yValuesAdaptNew","element","xValuesOutcome","Array","fill","state","series","name","data","options","chart","type","height","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","enabled","stroke","show","width","colors","markers","size","xaxis","tickAmount","lines","labels","axisTicks","axisBorder","color","yaxis","min","opacity","animations","grid","tooltip","legend","toolbar","render"],"mappings":"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","sourcesContent":["import { range } from \"lodash\";\nimport React, { Component } from \"react\";\nimport normalPdf from \"normal-pdf\";\nimport ReactApexChart from \"react-apexcharts\";\n\nclass BarOutcome extends React.Component {\n  constructor(props) {\n    super(props);\n    const mu  = this.props.mu\n    const sgm  = this.props.sgm\n    const trueValue = this.props.value;\n    // const mu = 50;\n    // const sgm = 20;\n    // const trueValue = 50;\n\n\n    const xValues = range(0, 100,0.5);\n    const yValues = xValues.map((x) => normalPdf(x, mu, sgm))\n    const yValuesAdaptNew = yValues.map(function(element) {\n      return element*1000;});\n\n      var xValuesOutcome = new Array(200).fill(null);\n      xValuesOutcome[trueValue*2] = yValuesAdaptNew[trueValue*2];\n\n\n      this.state = {\n\n        series: [{\n          name: 'Net Profit',\n          data: xValuesOutcome\n        }],\n        options: {\n          chart: {\n            type: 'bar',\n            height: 80\n          },\n          plotOptions: {\n            bar: {\n              horizontal: false,\n              columnWidth: '100%',\n              endingShape: 'rounded'\n            },\n          },\n          dataLabels: {\n            enabled: false\n          },\n          stroke: {\n            show: true,\n            width: 2,\n            colors: [\"#DAA520\"],\n          },\n          markers: {\n            size: 0\n          },\n          xaxis: {\n            tickAmount: 5,\n            lines: {\n              show: false\n            },\n            labels:{show: false },\n            axisTicks: {\n              show: false\n            },\n            axisBorder: {\n              show: false,\n              color: '#e7e6e2',\n              height: 4,\n            width: '100%'},\n                  },\n          yaxis: {\n            min:0,\n            labels:{show: false },\n            axisTicks:{\n              show: false\n            },\n            lines: {\n              show: false\n            }\n          },\n          fill: {\n            colors: ['#DAA520'],\n            opacity: 1\n          },\n          animations: {\n          enabled: false},\n          grid: {show: false},\n          tooltip: {enabled: false},\n          legend: {\n          show: false}\n        },\n        \n  toolbar: {show: false},\n      };\n    }\n\n    render() {\n      return (\n        <div id=\"chart\">\n        <ReactApexChart options={this.state.options} series={this.state.series} type=\"bar\" height={350} />\n        </div>\n      );\n    }\n  }\n\nexport default BarOutcome;\n"]},"metadata":{},"sourceType":"module"}