{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTask.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\";\nimport OutcomeSlider from \"./sliderOutcome\";\nimport OutcomeSliderBar from \"./sliderOutcomeBar\";\nimport ElementsFullDisplay from \"./elementsFulldisplay\"; ////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TrainingTask extends React.Component {\n  constructor(props) {\n    super(props);\n    let trialSgmMu = Array(9).fill().map(() => Array(3).fill(0));\n    let trialRT = Array(9).fill().map(() => Array(3).fill(0));\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"TrainingTask\",\n      trialTotal: 9,\n      trialNum: 1,\n      //adapt\n      trialRT: trialRT,\n      choiceTime0: 0,\n      trialTotal: trialTotal,\n      //adapt\n      // //\n      trialSgmMu: trialSgmMu,\n      timerCountDur: 10,\n      timePassed: false,\n      feedback: false,\n      mounted: 0,\n      trueValue: 50 // trialTime: null,\n      // trialScore: null,\n      // valElem1: null,\n      // valElem2: null,\n      // valElem3: null,\n      // colElem1: null,\n      // colElem2: null,\n      // colElem3: null\n\n    }; // this.displayFeedback = this.displayFeedback.bind(this)\n\n    /* prevents page from going to the right/left when arrows are pressed .*/\n\n    window.addEventListener('keydown', function (e) {\n      if (e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      } else if (e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  } /////////////////////////////////////////////////////////////////////////////////\n  // componentDidMount() {\n  //     setTimeout(\n  //       function() {\n  //         this.setState({\n  //           mounted: 1,\n  //         });\n  //       }\n  //       .bind(this),\n  //       5000\n  //     );\n  //   }\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n  /////////////////////////////////////////////////////////////////////////////////\n\n\n  render() {\n    if (this.state.trialNum <= this.state.trialTotal) {\n      setTimeout(() => {\n        this.setState({\n          timePassed: true\n        });\n      }, 100); //show elements\n\n      if (!this.state.timePassed) {\n        return /*#__PURE__*/_jsxDEV(ElementsFullDisplay, {\n          value1: 30,\n          value2: 40,\n          value3: 80,\n          trialTotal: this.state.trialTotal,\n          trialNum: this.state.trialNum\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 8\n        }, this);\n      } else {\n        // if (this.state.timePassed===true && this.state.feedback===false){\n        let choiceTime0 = Math.round(performance.now());\n\n        let text = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.questions,\n          children: [\"How large is the alien population?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 8\n        }, this);\n\n        let text2 = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.questions,\n          children: [\"The true population on the planet was \", 50, \" mio.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 8\n        }, this);\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", this.state.feedback ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.cockpit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: text2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.overlaybar,\n              children: /*#__PURE__*/_jsxDEV(OutcomeSliderBar, {\n                mu: this.state.trialSgmMu[this.state.trialNum - 1][2],\n                sgm: this.state.trialSgmMu[this.state.trialNum - 1][1],\n                value: this.state.trueValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.overlaybar,\n              children: /*#__PURE__*/_jsxDEV(OutcomeSlider, {\n                mu: this.state.trialSgmMu[this.state.trialNum - 1][2],\n                sgm: this.state.trialSgmMu[this.state.trialNum - 1][1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 10\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.cockpit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              onSpacebarHit: result => {\n                this.saveSgmMu(result, choiceTime0);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 10\n        }, this);\n      }\n    }\n  } /////////////////////////////////////////////////////////////////////////////////\n\n\n  saveSgmMu(result, time) {\n    let trialSgmMu = this.state.trialSgmMu;\n    let trialRT = this.state.trialRT;\n    let trialNum = this.state.trialNum;\n    trialSgmMu[trialNum - 1][1] = result.sgm;\n    trialSgmMu[trialNum - 1][2] = result.mu;\n    trialRT[trialNum - 1][0] = trialNum;\n    trialRT[trialNum - 1][1] = time;\n    trialRT[trialNum - 1][2] = Math.round(performance.now());\n    trialRT[trialNum - 1][3] = trialRT[trialNum - 1][2] - time;\n    this.setState({\n      trialSgmMu: trialSgmMu,\n      trialRT: trialRT,\n      feedback: true,\n      trialNum: trialNum + 1 // outcome: show\n\n    });\n  }\n\n}\n\nexport default _c = withRouter(TrainingTask);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTask.js"],"names":["React","withRouter","DATABASE_URL","styles","Slider","OutcomeSlider","OutcomeSliderBar","ElementsFullDisplay","TrainingTask","Component","constructor","props","trialSgmMu","Array","fill","map","trialRT","state","trialTotal","trialNum","choiceTime0","timerCountDur","timePassed","feedback","mounted","trueValue","window","addEventListener","e","keyCode","target","document","body","preventDefault","render","setTimeout","setState","Math","round","performance","now","text","questions","text2","cockpit","overlaybar","result","saveSgmMu","time","sgm","mu"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\";\nimport OutcomeSlider from \"./sliderOutcome\";\nimport OutcomeSliderBar from \"./sliderOutcomeBar\";\nimport ElementsFullDisplay from \"./elementsFulldisplay\";\n////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\nclass TrainingTask extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let trialSgmMu = Array(9).fill().map(() => Array(3).fill(0));\n    let trialRT = Array(9).fill().map(() => Array(3).fill(0));\n\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"TrainingTask\",\n      trialTotal: 9,\n      trialNum: 1,//adapt\n      trialRT: trialRT,\n      choiceTime0: 0,\n      trialTotal: trialTotal,//adapt\n      // //\n      trialSgmMu: trialSgmMu,\n      timerCountDur: 10,\n      timePassed: false,\n      feedback: false,\n      mounted: 0,\n      trueValue: 50\n      // trialTime: null,\n      // trialScore: null,\n      // valElem1: null,\n      // valElem2: null,\n      // valElem3: null,\n      // colElem1: null,\n      // colElem2: null,\n      // colElem3: null\n    };\n    // this.displayFeedback = this.displayFeedback.bind(this)\n    /* prevents page from going to the right/left when arrows are pressed .*/\n    window.addEventListener('keydown', function(e) {\n    if(e.keyCode === 37 && e.target === document.body) {\n      e.preventDefault();\n    }\n    else if(e.keyCode === 39 && e.target === document.body) {\n      e.preventDefault();\n    }\n    });\n  }\n/////////////////////////////////////////////////////////////////////////////////\n  // componentDidMount() {\n  //     setTimeout(\n  //       function() {\n  //         this.setState({\n  //           mounted: 1,\n  //         });\n  //       }\n  //       .bind(this),\n  //       5000\n  //     );\n  //   }\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n  /////////////////////////////////////////////////////////////////////////////////\n  render() {\n  if (this.state.trialNum<=this.state.trialTotal){\n   setTimeout(() => {this.setState({timePassed: true})}, 100);//show elements\n   if (!this.state.timePassed){\n     return (\n       <ElementsFullDisplay  value1={30} value2={40} value3={80} trialTotal={this.state.trialTotal} trialNum={this.state.trialNum}/>\n     );\n   } else {\n      // if (this.state.timePassed===true && this.state.feedback===false){\n      let choiceTime0 = Math.round(performance.now());\n\n      let text = (\n       <div className={styles.questions}>\n       How large is the alien population?\n       <br />\n       <br />\n       <br />\n       </div>);\n\n       let text2 = (\n       <div className={styles.questions}>\n        The true population on the planet was {50} mio.\n        <br />\n        <br />\n        <br />\n       </div>);\n\n       return (\n         <div> {this.state.feedback ? (\n         <div className={styles.cockpit}>\n         <div>{text2}</div>\n         <div className={styles.overlaybar}><OutcomeSliderBar mu={this.state.trialSgmMu[this.state.trialNum-1][2]} sgm={this.state.trialSgmMu[this.state.trialNum-1][1]} value = {this.state.trueValue}/>\n         </div>\n         <div className={styles.overlaybar}><OutcomeSlider mu={this.state.trialSgmMu[this.state.trialNum-1][2]} sgm={this.state.trialSgmMu[this.state.trialNum-1][1]} />\n         </div>\n         </div>\n      ) : (\n        <div className={styles.cockpit}>\n        <div>{text}</div>\n        <Slider onSpacebarHit={(result) => {this.saveSgmMu(result,choiceTime0);}}/>\n        </div>\n          )}\n       </div>\n  );\n\n    }\n  }\n  }\n/////////////////////////////////////////////////////////////////////////////////\n  saveSgmMu(result,time) {\n      let trialSgmMu = this.state.trialSgmMu;\n      let trialRT = this.state.trialRT;\n      let trialNum = this.state.trialNum;\n      trialSgmMu[trialNum-1][1] = result.sgm;\n      trialSgmMu[trialNum-1][2] = result.mu;\n      trialRT[trialNum-1][0] = trialNum;\n      trialRT[trialNum-1][1] = time;\n      trialRT[trialNum-1][2] = Math.round(performance.now());\n      trialRT[trialNum-1][3] = trialRT[trialNum-1][2] - time;\n      this.setState({\n          trialSgmMu: trialSgmMu,\n          trialRT: trialRT,\n          feedback: true,\n          trialNum : trialNum+1,\n          // outcome: show\n        });\n    }\n}\n\nexport default withRouter(TrainingTask);\n"]},"metadata":{},"sourceType":"module"}