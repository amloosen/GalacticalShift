{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/sliderOutcomeCheck.js\";\nimport { range } from \"lodash\";\nimport normalPdf from \"normal-pdf\";\nimport { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OutcomeSliderCheck = props => {\n  const xValues = range(0, 100, 0.5);\n  const yValues = xValues.map(x => normalPdf(x, props.mu, props.sgm));\n  const yValuesAdapt = yValues.map(function (element) {\n    return element * 1000;\n  });\n  const data = {\n    series: [{\n      data: yValuesAdapt\n    }],\n    options: {\n      chart: {\n        toolbar: {\n          show: false\n        },\n        height: 350,\n        type: 'line',\n        zoom: {\n          enabled: false\n        }\n      },\n      colors: ['#d2eaf2'],\n      fill: {\n        colors: ['#d2eaf2']\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: 'smooth'\n      },\n      markers: {\n        size: 0\n      },\n      yaxis: {\n        min: 0,\n        labels: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        lines: {\n          show: false\n        }\n      },\n      xaxis: {\n        color: '#d2eaf2',\n        // min: 0,\n        // max: 100,\n        tickAmount: 5,\n        overwriteCategories: ['0', '25', '50', '75', '100'],\n        lines: {\n          show: false\n        },\n        axisTicks: {\n          color: '#e7e6e2',\n          width: 3,\n          height: 10\n        },\n        axisBorder: {\n          show: true,\n          color: '#e7e6e2',\n          height: 4,\n          width: '100%'\n        },\n        labels: {\n          rotate: 0,\n          style: {\n            fontSize: '20px',\n            colors: ['#e7e6e2', '#e7e6e2', '#e7e6e2', '#e7e6e2', '#e7e6e2'],\n            offsetX: 0,\n            offsetY: 0\n          }\n        }\n      },\n      grid: {\n        show: false\n      },\n      tooltip: {\n        enabled: false\n      }\n    }\n  }; //\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      options: data.options,\n      series: data.series,\n      type: \"line\",\n      height: 350,\n      width: 700,\n      align: \"center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_c = OutcomeSliderCheck;\nexport default OutcomeSliderCheck;\n\nvar _c;\n\n$RefreshReg$(_c, \"OutcomeSliderCheck\");","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/sliderOutcomeCheck.js"],"names":["range","normalPdf","useEffect","useState","ReactApexChart","OutcomeSliderCheck","props","xValues","yValues","map","x","mu","sgm","yValuesAdapt","element","data","series","options","chart","toolbar","show","height","type","zoom","enabled","colors","fill","dataLabels","stroke","curve","markers","size","yaxis","min","labels","axisTicks","lines","xaxis","color","tickAmount","overwriteCategories","width","axisBorder","rotate","style","fontSize","offsetX","offsetY","grid","tooltip"],"mappings":"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","sourcesContent":["import { range } from \"lodash\";\nimport normalPdf from \"normal-pdf\";\nimport { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nconst OutcomeSliderCheck = (props) => {\n\n  const xValues = range(0, 100,0.5)\n  const yValues = xValues.map((x) => normalPdf(x, props.mu, props.sgm))\n  const yValuesAdapt = yValues.map(function(element) {\n\t                     return element*1000;});\n\n\n  const data = {\n    series: [\n      { data: yValuesAdapt}\n    ],\n    options: {\n      chart: {\n      toolbar: {\n        show: false},\n        height: 350,\n        type: 'line',\n        zoom: {\n            enabled: false}\n      },\n      colors: ['#d2eaf2'],\n      fill: {colors: ['#d2eaf2']},\n      dataLabels: {\n        enabled: false,\n      },\n      stroke: {\n        curve: 'smooth',\n      },\n      markers: {\n        size: 0\n      },\n      yaxis: {\n        min:0,\n        labels:{show: false },\n        axisTicks:{\n          show: false\n        },\n        lines: {\n          show: false\n        }\n      },\n      xaxis: {\n        color:'#d2eaf2',\n        // min: 0,\n        // max: 100,\n        tickAmount: 5,\n        overwriteCategories: ['0', '25', '50', '75', '100'],\n        lines: {\n          show: false\n        },\n        axisTicks: {\n          color: '#e7e6e2',\n          width: 3,\n          height: 10\n        },\n        axisBorder: {\n          show: true,\n          color: '#e7e6e2',\n          height: 4,\n        width: '100%'},\n        labels: {\n          rotate: 0,\n          style: {\n            fontSize: '20px',\n            colors: ['#e7e6e2','#e7e6e2','#e7e6e2','#e7e6e2','#e7e6e2'],\n            offsetX: 0,\n         offsetY: 0}\n        }\n      },\n      grid: {show: false},\n      tooltip: {enabled: false},\n    },\n  };\n//\n\n  return (\n    <div>\n    <ReactApexChart options={data.options} series={data.series} type=\"line\" height={350} width={700} align=\"center\"/>\n    </div>\n  )\n};\n\nexport default OutcomeSliderCheck;\n"]},"metadata":{},"sourceType":"module"}