{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTaskC_check.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\";\nimport { SafeAreaView, View, StyleSheet } from 'react-native';\nimport OutcomeSlider from \"./sliderOutcome\";\nimport OutcomeSliderBar from \"./sliderOutcomeBar\";\nimport ElementsFullDisplay from \"./elementsFulldisplay\"; ////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TrainingTask extends React.Component {\n  constructor(props) {\n    super(props);\n    let nr_train_a_trial = 10; //update later\n\n    let trialSgmMu = Array(trialTotal).fill().map(() => Array(3).fill(0));\n    let trialRT = Array(trialTotal).fill().map(() => Array(3).fill(0));\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"TrainingTask\",\n      traintrialNum: 1,\n      trialRT: trialRT,\n      choiceTime0: 0,\n      trialTotal: trialTotal,\n      //adapt\n      // //\n      // trialSliderRT: null,\n      trialSgmMu: trialSgmMu,\n      timerCountDur: 10,\n      timePassed: false,\n      feedback: false,\n      mounted: 0,\n      trueValue: 50,\n      trialRT: trialRT,\n      traintrialTotal: nr_train_a_trial,\n      feedback: 0,\n      choiceTime0: 0,\n      timePassed: false,\n      timePassed2: false,\n      mounted: 0,\n      all_corr_values: corr_values,\n      valTrainElem: corr_values[0],\n      corr_value: corr_values[0],\n      trainAcc: array_tmp,\n      ansOne: ansOne,\n      ansTwo: ansTwo,\n      corr_pos: corr_pos,\n      corr_elem: corr_elem,\n      all_element_values: all_element_values,\n      trialSgmMu: trialSgmMu\n    }; // this.displayFeedback = this.displayFeedback.bind(this)\n\n    /* prevents page from going to the right/left when arrows are pressed .*/\n\n    window.addEventListener('keydown', function (e) {\n      if (e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      } else if (e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  } /////////////////////////////////////////////////////////////////////////////////\n  // componentDidMount() {\n  //     setTimeout(\n  //       function() {\n  //         this.setState({\n  //           mounted: 1,\n  //         });\n  //       }\n  //       .bind(this),\n  //       5000\n  //     );\n  //   }\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n  // displayFeedback() {\n  //   this.setState({feedback: true});\n  // }\n  /////////////////////////////////////////////////////////////////////////////////\n\n\n  render() {\n    setTimeout(() => {\n      this.setState({\n        timePassed: true\n      });\n    }, 100); //show elements\n\n    if (!this.state.timePassed) {\n      return /*#__PURE__*/_jsxDEV(ElementsFullDisplay, {\n        value1: 30,\n        value2: 40,\n        value3: 80,\n        trialTotal: this.state.trialTotal,\n        trialNum: this.state.trialNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 8\n      }, this);\n    } else {\n      // if (this.state.timePassed===true && this.state.feedback===false){\n      let choiceTime0 = Math.round(performance.now());\n\n      let text = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [\"How large is the alien population?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 8\n      }, this);\n\n      let text2 = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [\"The true population on the planet was \", 50, \" mio.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 8\n      }, this);\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", this.state.feedback ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cockpit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: text2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(View, {\n            style: styles.container,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.overlaybar,\n              children: /*#__PURE__*/_jsxDEV(OutcomeSliderBar, {\n                mu: this.state.trialSgmMu[this.state.trialNum - 1][2],\n                sgm: this.state.trialSgmMu[this.state.trialNum - 1][1],\n                value: this.state.trueValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.overlaybar,\n              children: /*#__PURE__*/_jsxDEV(OutcomeSlider, {\n                mu: this.state.trialSgmMu[this.state.trialNum - 1][2],\n                sgm: this.state.trialSgmMu[this.state.trialNum - 1][1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 10\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cockpit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Slider, {\n            onSpacebarHit: result => {\n              this.saveSgmMu(result, choiceTime0);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 10\n      }, this);\n    }\n  } /////////////////////////////////////////////////////////////////////////////////\n\n\n  disp_elements() {\n    setTimeout(() => {\n      this.setState({\n        timePassed: true\n      });\n    }, 100); //show elements\n\n    return /*#__PURE__*/_jsxDEV(ElementsFullDisplay, {\n      value1: 30,\n      value2: 40,\n      value3: 80,\n      trialTotal: this.state.trialTotal,\n      trialNum: this.state.trialNum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this);\n  }\n\n  saveSgmMu(result, time) {\n    let trialSgmMu = this.state.trialSgmMu;\n    let trialRT = this.state.trialRT;\n    let trialNum = this.state.trialNum;\n    trialSgmMu[trialNum - 1][1] = result.sgm;\n    trialSgmMu[trialNum - 1][2] = result.mu;\n    trialRT[trialNum - 1][0] = trialNum;\n    trialRT[trialNum - 1][1] = time;\n    trialRT[trialNum - 1][2] = Math.round(performance.now());\n    trialRT[trialNum - 1][3] = trialRT[trialNum - 1][2] - time;\n    this.setState({\n      trialSgmMu: trialSgmMu,\n      trialRT: trialRT,\n      feedback: true // trialNum : trialNum+1,\n      // outcome: show\n\n    });\n  }\n\n}\n\nexport default _c = withRouter(TrainingTask);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTaskC_check.js"],"names":["React","withRouter","DATABASE_URL","styles","Slider","SafeAreaView","View","StyleSheet","OutcomeSlider","OutcomeSliderBar","ElementsFullDisplay","TrainingTask","Component","constructor","props","nr_train_a_trial","trialSgmMu","Array","trialTotal","fill","map","trialRT","state","traintrialNum","choiceTime0","timerCountDur","timePassed","feedback","mounted","trueValue","traintrialTotal","timePassed2","all_corr_values","corr_values","valTrainElem","corr_value","trainAcc","array_tmp","ansOne","ansTwo","corr_pos","corr_elem","all_element_values","window","addEventListener","e","keyCode","target","document","body","preventDefault","render","setTimeout","setState","trialNum","Math","round","performance","now","text","questions","text2","cockpit","container","overlaybar","result","saveSgmMu","disp_elements","time","sgm","mu"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\";\nimport {\n  SafeAreaView,\n  View,\n  StyleSheet,\n} from 'react-native';\nimport OutcomeSlider from \"./sliderOutcome\";\nimport OutcomeSliderBar from \"./sliderOutcomeBar\";\nimport ElementsFullDisplay from \"./elementsFulldisplay\";\n////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\nclass TrainingTask extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let nr_train_a_trial = 10;//update later\n\n    let trialSgmMu = Array(trialTotal).fill().map(() => Array(3).fill(0));\n    let trialRT = Array(trialTotal).fill().map(() => Array(3).fill(0));\n\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"TrainingTask\",\n      traintrialNum: 1,\n      trialRT: trialRT,\n      choiceTime0: 0,\n      trialTotal: trialTotal,//adapt\n      // //\n      // trialSliderRT: null,\n      trialSgmMu: trialSgmMu,\n      timerCountDur: 10,\n      timePassed: false,\n      feedback: false,\n      mounted: 0,\n      trueValue: 50,\n\n      trialRT: trialRT,\n      traintrialTotal: nr_train_a_trial,\n      feedback: 0,\n      choiceTime0: 0,\n      timePassed: false,\n      timePassed2: false,\n      mounted: 0,\n      all_corr_values: corr_values,\n      valTrainElem: corr_values[0],\n      corr_value: corr_values[0],\n      trainAcc: array_tmp,\n      ansOne: ansOne,\n      ansTwo: ansTwo,\n      corr_pos: corr_pos,\n      corr_elem: corr_elem,\n      all_element_values: all_element_values,\n      trialSgmMu: trialSgmMu,\n    };\n    // this.displayFeedback = this.displayFeedback.bind(this)\n    /* prevents page from going to the right/left when arrows are pressed .*/\n    window.addEventListener('keydown', function(e) {\n    if(e.keyCode === 37 && e.target === document.body) {\n      e.preventDefault();\n    }\n    else if(e.keyCode === 39 && e.target === document.body) {\n      e.preventDefault();\n    }\n    });\n  }\n/////////////////////////////////////////////////////////////////////////////////\n  // componentDidMount() {\n  //     setTimeout(\n  //       function() {\n  //         this.setState({\n  //           mounted: 1,\n  //         });\n  //       }\n  //       .bind(this),\n  //       5000\n  //     );\n  //   }\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n\n  // displayFeedback() {\n  //   this.setState({feedback: true});\n  // }\n\n  /////////////////////////////////////////////////////////////////////////////////\n  render() {\n   setTimeout(() => {this.setState({timePassed: true})}, 100);//show elements\n   if (!this.state.timePassed){\n     return (\n       <ElementsFullDisplay  value1={30} value2={40} value3={80} trialTotal={this.state.trialTotal} trialNum={this.state.trialNum}/>\n     );\n   } else {\n      // if (this.state.timePassed===true && this.state.feedback===false){\n      let choiceTime0 = Math.round(performance.now());\n\n      let text = (\n       <div className={styles.questions}>\n       How large is the alien population?\n       <br />\n       <br />\n       <br />\n       </div>);\n\n       let text2 = (\n       <div className={styles.questions}>\n        The true population on the planet was {50} mio.\n        <br />\n        <br />\n        <br />\n       </div>);\n\n       return (\n         <div> {this.state.feedback ? (\n         <div className={styles.cockpit}>\n         <div>{text2}</div>\n         <View style={styles.container}>\n         <div className={styles.overlaybar}><OutcomeSliderBar mu={this.state.trialSgmMu[this.state.trialNum-1][2]} sgm={this.state.trialSgmMu[this.state.trialNum-1][1]} value = {this.state.trueValue}/>\n         </div>\n         <div className={styles.overlaybar}><OutcomeSlider mu={this.state.trialSgmMu[this.state.trialNum-1][2]} sgm={this.state.trialSgmMu[this.state.trialNum-1][1]} />\n         </div>\n         </View>\n         </div>\n      ) : (\n        <div className={styles.cockpit}>\n        <div>{text}</div>\n        <Slider onSpacebarHit={(result) => {this.saveSgmMu(result,choiceTime0);}}/>\n        </div>\n          )}\n       </div>\n  );\n\n    }\n  }\n\n\n/////////////////////////////////////////////////////////////////////////////////\ndisp_elements(){\n  setTimeout(() => {this.setState({timePassed: true})}, 100);//show elements\n\n    return (\n      <ElementsFullDisplay  value1={30} value2={40} value3={80} trialTotal={this.state.trialTotal} trialNum={this.state.trialNum}/>\n    );\n}\n  saveSgmMu(result,time) {\n      let trialSgmMu = this.state.trialSgmMu;\n      let trialRT = this.state.trialRT;\n      let trialNum = this.state.trialNum;\n      trialSgmMu[trialNum-1][1] = result.sgm;\n      trialSgmMu[trialNum-1][2] = result.mu;\n      trialRT[trialNum-1][0] = trialNum;\n      trialRT[trialNum-1][1] = time;\n      trialRT[trialNum-1][2] = Math.round(performance.now());\n      trialRT[trialNum-1][3] = trialRT[trialNum-1][2] - time;\n      this.setState({\n          trialSgmMu: trialSgmMu,\n          trialRT: trialRT,\n          feedback: true\n          // trialNum : trialNum+1,\n          // outcome: show\n        });\n    }\n}\n\nexport default withRouter(TrainingTask);\n"]},"metadata":{},"sourceType":"module"}