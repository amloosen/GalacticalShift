{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/sliderOutcome.js\";\nimport React from \"react\";\nimport { range } from \"lodash\";\nimport normalPdf from \"normal-pdf\";\nimport { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass OutcomeSlider extends React.Component {\n  constructor(props) {\n    super(props);\n    var mu = this.props.mu;\n    var sgm = this.props.sgm;\n    /* prevents page from going down when space bar is hit .*/\n\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 32 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n    const xValues = range(0, 100, 0.5);\n    const yValues = xValues.map(x => normalPdf(x, mu, sgm));\n    const yValuesAdapt = yValues.map(function (element) {\n      return element * 1000;\n    });\n    const data = {\n      series: [{\n        name: 'loggedDistribution',\n        data: yValuesAdapt,\n        type: 'line'\n      }, {\n        name: 'Outcome',\n        type: 'line',\n        data: [23, 42, 35, 27, 43, 22, 17, 31, 22, 22, 12, 16]\n      }],\n      options: {\n        chart: {\n          toolbar: {\n            show: false\n          },\n          height: 350,\n          type: 'line',\n          toolbar: {\n            show: false\n          },\n          zoom: {\n            enabled: false\n          }\n        },\n        colors: ['#d2eaf2'],\n        fill: {\n          colors: ['#d2eaf2']\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth'\n        },\n        markers: {\n          size: 0\n        },\n        yaxis: {\n          min: 0,\n          labels: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          lines: {\n            show: false\n          }\n        },\n        xaxis: {\n          color: '#d2eaf2',\n          // min: 0,\n          // max: 100,\n          tickAmount: 5,\n          overwriteCategories: ['0', '25', '50', '75', '100'],\n          lines: {\n            show: false\n          },\n          axisTicks: {\n            color: '#e7e6e2',\n            width: 3,\n            height: 10\n          },\n          axisBorder: {\n            show: true,\n            color: '#e7e6e2',\n            height: 4,\n            width: '100%'\n          },\n          labels: {\n            rotate: 0,\n            style: {\n              fontSize: '20px',\n              colors: ['#e7e6e2', '#e7e6e2', '#e7e6e2', '#e7e6e2', '#e7e6e2'],\n              offsetX: 0,\n              offsetY: 0\n            }\n          }\n        },\n        grid: {\n          show: false\n        },\n        tooltip: {\n          enabled: false\n        }\n      }\n    };\n  }\n\n  // //\n  //   function muPlus(event) {\n  //     if (mu==100){setMu(mu)}\n  //     else\n  //       {setMu(mu + 1)}\n  //     }\n  //\n  //   function muMinus(event) {\n  //     if (mu==0){setMu(mu)}\n  //     else\n  //     {setMu(mu - 1)}\n  //   }\n  //   function sgmPlus(event) {\n  //     // if (sgm>=20000){setSgm(sgm)}\n  //     // else\n  //     setSgm(sgm + 10)\n  //   }\n  //   function sgmMinus(event) {\n  //     if (sgm<=1){setSgm(sgm)}\n  //     else\n  //     setSgm(sgm - 1)\n  //   }\n  // useEffect(() => {\n  //   const handler = (event) => {\n  //     // do something with data\n  //     if (event.keyCode === 32) {\n  //       onSpacebarHit({ mu, sgm })\n  //     } else if (event.keyCode === 39) {muPlus()\n  //\n  //     } else if (event.keyCode === 37) {muMinus()\n  //\n  //     } else if (event.keyCode === 38) {sgmPlus()\n  //\n  //     } else if (event.keyCode === 40) {sgmMinus()\n  //\n  //     }\n  //   }\n  //   document.addEventListener('keydown', handler)\n  //   return () => {\n  //     document.removeEventListener('keydown', handler)\n  //   }\n  // }, [onSpacebarHit, mu, sgm])\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n        options: data.options,\n        series: data.series,\n        type: \"line\",\n        height: 350,\n        width: 700,\n        align: \"center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }, this);\n  }\n\n}\n\n;\nexport default OutcomeSlider;","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/sliderOutcome.js"],"names":["React","range","normalPdf","useEffect","useState","ReactApexChart","OutcomeSlider","Component","constructor","props","mu","sgm","window","addEventListener","e","keyCode","target","document","body","preventDefault","xValues","yValues","map","x","yValuesAdapt","element","data","series","name","type","options","chart","toolbar","show","height","zoom","enabled","colors","fill","dataLabels","stroke","curve","markers","size","yaxis","min","labels","axisTicks","lines","xaxis","color","tickAmount","overwriteCategories","width","axisBorder","rotate","style","fontSize","offsetX","offsetY","grid","tooltip","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { range } from \"lodash\";\nimport normalPdf from \"normal-pdf\";\nimport { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nclass OutcomeSlider extends React.Component{\n  constructor(props) {\n    super(props);\n\n  var mu = this.props.mu\n  var sgm = this.props.sgm\n  /* prevents page from going down when space bar is hit .*/\n  window.addEventListener(\"keydown\", function (e) {\n    if (e.keyCode === 32 && e.target === document.body) {\n      e.preventDefault();\n    }\n  });\n\n\n\n  const xValues = range(0, 100,0.5)\n  const yValues = xValues.map((x) => normalPdf(x, mu, sgm))\n  const yValuesAdapt = yValues.map(function(element) {\n  return element*1000;});\n\n  const data = {\n      series: [{\n        name: 'loggedDistribution',\n        data: yValuesAdapt,\n        type: 'line'\n      },\n      {name: 'Outcome',\n        type: 'line',\n        data: [23, 42, 35, 27, 43, 22, 17, 31, 22, 22, 12, 16]\n      }],\n      options: {\n        chart: {\n          toolbar: {\n            show: false},\n            height: 350,\n            type: 'line',\n            toolbar: {\n              show: false\n            },\n            zoom: {\n              enabled: false}\n            },\n            colors: ['#d2eaf2'],\n            fill: {colors: ['#d2eaf2']},\n            dataLabels: {\n              enabled: false,\n            },\n            stroke: {\n              curve: 'smooth',\n            },\n            markers: {\n              size: 0\n            },\n            yaxis: {\n              min:0,\n              labels:{show: false },\n              axisTicks:{\n                show: false\n              },\n              lines: {\n                show: false\n              }\n            },\n            xaxis: {\n              color:'#d2eaf2',\n              // min: 0,\n              // max: 100,\n              tickAmount: 5,\n              overwriteCategories: ['0', '25', '50', '75', '100'],\n              lines: {\n                show: false\n              },\n              axisTicks: {\n                color: '#e7e6e2',\n                width: 3,\n                height: 10\n              },\n              axisBorder: {\n                show: true,\n                color: '#e7e6e2',\n                height: 4,\n                width: '100%'},\n                labels: {\n                  rotate: 0,\n                  style: {\n                    fontSize: '20px',\n                    colors: ['#e7e6e2','#e7e6e2','#e7e6e2','#e7e6e2','#e7e6e2'],\n                    offsetX: 0,\n                    offsetY: 0}\n                  }\n                },\n                grid: {show: false},\n                tooltip: {enabled: false},\n              },\n            };\n};\n\n            // //\n            //   function muPlus(event) {\n            //     if (mu==100){setMu(mu)}\n            //     else\n            //       {setMu(mu + 1)}\n            //     }\n            //\n            //   function muMinus(event) {\n            //     if (mu==0){setMu(mu)}\n            //     else\n            //     {setMu(mu - 1)}\n            //   }\n            //   function sgmPlus(event) {\n            //     // if (sgm>=20000){setSgm(sgm)}\n            //     // else\n            //     setSgm(sgm + 10)\n            //   }\n            //   function sgmMinus(event) {\n            //     if (sgm<=1){setSgm(sgm)}\n            //     else\n            //     setSgm(sgm - 1)\n            //   }\n\n            // useEffect(() => {\n            //   const handler = (event) => {\n            //     // do something with data\n            //     if (event.keyCode === 32) {\n            //       onSpacebarHit({ mu, sgm })\n            //     } else if (event.keyCode === 39) {muPlus()\n            //\n            //     } else if (event.keyCode === 37) {muMinus()\n            //\n            //     } else if (event.keyCode === 38) {sgmPlus()\n            //\n            //     } else if (event.keyCode === 40) {sgmMinus()\n            //\n            //     }\n            //   }\n            //   document.addEventListener('keydown', handler)\n            //   return () => {\n            //     document.removeEventListener('keydown', handler)\n            //   }\n            // }, [onSpacebarHit, mu, sgm])\nrender (){\n            return (\n              <div>\n              <ReactApexChart options={data.options} series={data.series} type=\"line\" height={350} width={700} align=\"center\"/>\n              </div>\n            )\n          };\n\n      };\n\n          export default OutcomeSlider;\n"]},"metadata":{},"sourceType":"module"}