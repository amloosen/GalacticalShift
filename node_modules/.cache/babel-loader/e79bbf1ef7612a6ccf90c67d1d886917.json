{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTask.js\";\nimport React, { useState, Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\";\nimport OutcomeSlider from \"./sliderOutcome\";\nimport ElementsFullDisplay from \"./elementsFulldisplay\";\nimport Cockpit from \"./img/CockpitBlank.jpg\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\"; /////////////////////////////////////////////////////////////////////////////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction renderSlider() {\n  let choiceTime0 = Math.round(performance.now());\n\n  let text = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.questions,\n    children: [\"How large is the alien population?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.cockpit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      onSpacebarHit: result => {\n        this.saveSgmMu(result, choiceTime0);\n        this.showFeedback(result);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), \"// \", result => this.saveSgmMu(result, choiceTime0)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n}\n\nfunction showFeedback(result) {\n  var trueValue = 50;\n  let feedbackTime = Math.round(performance.now());\n\n  let text = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.questions,\n    children: [\"The true population on the planet was $\", trueValue, \" mio.'\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 4\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.cockpit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(OutcomeSlider, {\n      mu: this.state.trialSgmMu[this.state.trialNum - 1][2],\n      sgm: this.state.trialSgmMu[this.state.trialNum - 1][1],\n      value: trueValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 6\n  }, this);\n} /////////////////////////////////////////////////////////////////////////////////\n\n\nclass TrainingTask extends React.Component {\n  constructor(props) {\n    super(props);\n    let trialTotal = 9; //update later\n\n    let trialSgmMu = Array(trialTotal).fill().map(() => Array(3).fill(0));\n    let trialRT = Array(trialTotal).fill().map(() => Array(3).fill(0));\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"TrainingTask\",\n      trialNum: 1,\n      //adapt\n      trialRT: trialRT,\n      choiceTime0: 0,\n      trialTotal: trialTotal,\n      //adapt\n      // //\n      // trialSliderRT: null,\n      trialSgmMu: trialSgmMu,\n      timerCountDur: 10,\n      timePassed: false,\n      displayFeedback: false // trialTime: null,\n      // trialScore: null,\n      // valElem1: null,\n      // valElem2: null,\n      // valElem3: null,\n      // colElem1: null,\n      // colElem2: null,\n      // colElem3: null\n\n    };\n    this.displayFeedback = this.displayFeedback.bind(this);\n  }\n\n  displayFeedback(e) {\n    this.setState({\n      feedback: true\n    });\n  }\n\n  render() {\n    setTimeout(() => {\n      this.setState({\n        timePassed: true\n      });\n    }, 10000);\n\n    if (!this.state.timePassed) {\n      return /*#__PURE__*/_jsxDEV(ElementsFullDisplay, {\n        value1: 30,\n        value2: 40,\n        value3: 80,\n        trialTotal: this.state.trialTotal,\n        trialNum: this.state.trialNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 8\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.renderSlider()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this);\n    } // <div>{this.showFeedback()}</div>\n\n  } // implement method to change values on elements etc.\n\n\n  saveSgmMu(result, time) {\n    let trialSgmMu = this.state.trialSgmMu;\n    let trialRT = this.state.trialRT;\n    let trialNum = this.state.trialNum;\n    trialSgmMu[trialNum - 1][1] = result.sgm;\n    trialSgmMu[trialNum - 1][2] = result.mu;\n    trialRT[trialNum - 1][0] = trialNum;\n    trialRT[trialNum - 1][1] = time;\n    trialRT[trialNum - 1][2] = Math.round(performance.now());\n    trialRT[trialNum - 1][3] = trialRT[trialNum - 1][2] - time;\n    this.setState({\n      trialSgmMu: trialSgmMu,\n      trialRT: trialRT // feedback: !this.state.feedback\n      // trialNum : trialNum+1,\n      // outcome: show\n\n    });\n  }\n\n}\n\nexport default _c = withRouter(TrainingTask);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTask.js"],"names":["React","useState","Component","withRouter","DATABASE_URL","styles","Slider","OutcomeSlider","ElementsFullDisplay","Cockpit","CountdownCircleTimer","renderSlider","choiceTime0","Math","round","performance","now","text","questions","cockpit","result","saveSgmMu","showFeedback","trueValue","feedbackTime","state","trialSgmMu","trialNum","TrainingTask","constructor","props","trialTotal","Array","fill","map","trialRT","timerCountDur","timePassed","displayFeedback","bind","e","setState","feedback","render","setTimeout","time","sgm","mu"],"mappings":"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","sourcesContent":["import React, { useState, Component}  from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\";\nimport OutcomeSlider from \"./sliderOutcome\";\nimport ElementsFullDisplay from \"./elementsFulldisplay\";\nimport Cockpit from \"./img/CockpitBlank.jpg\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\n/////////////////////////////////////////////////////////////////////////////////\nfunction renderSlider(){\n   let choiceTime0 = Math.round(performance.now());\n\n   let text = (\n    <div className={styles.questions}>\n    How large is the alien population?\n    <br />\n    <br />\n    <br />\n    </div>);\n\n    return (\n      <div className={styles.cockpit}>\n      <div>{text}</div>\n      <Slider onSpacebarHit={(result) => { this.saveSgmMu(result,choiceTime0); this.showFeedback(result);}}/>\n\n      // {(result) => this.saveSgmMu(result,choiceTime0)}\n          </div>\n    );\n  }\n\n  function showFeedback(result){\n\n  var trueValue = 50;\n  let feedbackTime = Math.round(performance.now());\n\n  let text = (\n   <div className={styles.questions}>\n   The true population on the planet was ${trueValue} mio.'\n   <br />\n   <br />\n   <br />\n   </div>);\n\n   return (\n     <div className={styles.cockpit}>\n     <div>{text}</div>\n     <OutcomeSlider mu={this.state.trialSgmMu[this.state.trialNum-1][2]} sgm={this.state.trialSgmMu[this.state.trialNum-1][1]} value={trueValue}/>\n     </div>\n   );}\n/////////////////////////////////////////////////////////////////////////////////\nclass TrainingTask extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let trialTotal = 9;//update later\n\n    let trialSgmMu = Array(trialTotal).fill().map(() => Array(3).fill(0));\n    let trialRT = Array(trialTotal).fill().map(() => Array(3).fill(0));\n\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"TrainingTask\",\n      trialNum: 1,//adapt\n      trialRT: trialRT,\n      choiceTime0: 0,\n      trialTotal: trialTotal,//adapt\n      // //\n      // trialSliderRT: null,\n      trialSgmMu: trialSgmMu,\n      timerCountDur: 10,\n      timePassed: false,\n      displayFeedback: false\n      // trialTime: null,\n      // trialScore: null,\n      // valElem1: null,\n      // valElem2: null,\n      // valElem3: null,\n      // colElem1: null,\n      // colElem2: null,\n      // colElem3: null\n    };\n    this.displayFeedback = this.displayFeedback.bind(this)\n  }\n\n  displayFeedback(e) {\n    this.setState({feedback: true});\n  }\n\n  render() {\n   setTimeout(() => {this.setState({timePassed: true})}, 10000);\n   if (!this.state.timePassed){\n     return (\n       <ElementsFullDisplay  value1={30} value2={40} value3={80} trialTotal={this.state.trialTotal} trialNum={this.state.trialNum}/>\n     );\n   }else {\n     return (\n    <div>{this.renderSlider()}</div>\n  );}\n\n      // <div>{this.showFeedback()}</div>\n\n }\n\n\n\n  // implement method to change values on elements etc.\n\n  saveSgmMu(result,time) {\n      let trialSgmMu = this.state.trialSgmMu;\n      let trialRT = this.state.trialRT;\n      let trialNum = this.state.trialNum;\n      trialSgmMu[trialNum-1][1] = result.sgm;\n      trialSgmMu[trialNum-1][2] = result.mu;\n      trialRT[trialNum-1][0] = trialNum;\n      trialRT[trialNum-1][1] = time;\n      trialRT[trialNum-1][2] = Math.round(performance.now());\n      trialRT[trialNum-1][3] = trialRT[trialNum-1][2] - time;\n      this.setState({\n          trialSgmMu: trialSgmMu,\n          trialRT: trialRT,\n          // feedback: !this.state.feedback\n          // trialNum : trialNum+1,\n          // outcome: show\n        });\n    }\n\n\n}\n\n  export default withRouter(TrainingTask);\n"]},"metadata":{},"sourceType":"module"}