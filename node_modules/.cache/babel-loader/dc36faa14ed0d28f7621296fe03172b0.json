{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/sliderTraining.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\"; ////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SliderPractice extends React.Component {\n  constructor(props) {\n    super(props);\n    let practSgmMu = Array(7).fill().map(() => Array(3).fill(0));\n    let practRT = Array(7).fill().map(() => Array(3).fill(0));\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      taskSession: \"SliderPractice\",\n      practTotal: 7,\n      practNum: 1,\n      //adapt\n      practRT: practRT,\n      choiceTime0: 0,\n      // //\n      practSgmMu: practSgmMu,\n      timerCountDur: 10,\n      timePassed: false,\n      feedback: false,\n      mounted: 0,\n      trueValue: 50 // trialTime: null,\n      // trialScore: null,\n      // valElem1: null,\n      // valElem2: null,\n      // valElem3: null,\n      // colElem1: null,\n      // colElem2: null,\n      // colElem3: null\n\n    }; // this.displayFeedback = this.displayFeedback.bind(this)\n\n    /* prevents page from going to the right/left when arrows are pressed .*/\n\n    window.addEventListener('keydown', function (e) {\n      if (e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      } else if (e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  } /////////////////////////////////////////////////////////////////////////////////\n  // componentDidMount() {\n  //     setTimeout(\n  //       function() {\n  //         this.setState({\n  //           mounted: 1,\n  //         });\n  //       }\n  //       .bind(this),\n  //       5000\n  //     );\n  //   }\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n  /////////////////////////////////////////////////////////////////////////////////\n\n\n  render() {\n    if (this.state.practNum <= this.state.practTotal) {\n      let choiceTime0 = Math.round(performance.now());\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.cockpit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.quest_text(this.state.practNum)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          onSpacebarHit: result => {\n            this.saveSgmMu(result, choiceTime0);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this);\n    }\n  } /////////////////////////////////////////////////////////////////////////////////\n\n\n  saveSgmMu(result, time) {\n    let practSgmMu = this.state.practSgmMu;\n    let practRT = this.state.practRT;\n    let practNum = this.state.practNum;\n    practSgmMu[practNum - 1][1] = result.sgm;\n    practSgmMu[practNum - 1][2] = result.mu;\n    practRT[practNum - 1][0] = practNum;\n    practRT[practNum - 1][1] = time;\n    practRT[practNum - 1][2] = Math.round(performance.now());\n    practRT[practNum - 1][3] = practRT[practNum - 1][2] - time;\n    this.setState({\n      practSgmMu: practSgmMu,\n      practRT: practRT,\n      feedback: true,\n      practNum: practNum + 1\n    });\n  }\n\n  quest_text(practNum) {\n    if (practNum === 1) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [\"Please indicate the number 65 with high certainty.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this);\n    } else if (practNum === 2) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [\"Please indicate the number 65 with high UNcertainty.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }, this);\n    } else if (practNum === 3) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [\"Please indicate the number 25 with high certainty.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this);\n    } else if (practNum === 4) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [\"Please indicate the number 25 with high UNcertainty.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }, this);\n    } else if (practNum === 5) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [\"What is your age? (If the scale refers to 0-100).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this);\n    } else if (practNum === 6) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [\"What is the population of the Connecticut?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 23\n        }, this), \"(If the scale refers to 0-100 Million).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 23\n      }, this);\n    } else if (practNum === 7) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [\"What is the population of New York City\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this), \"(If the scale refers to 0-100 Million).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }, this);\n    }\n  }\n\n  redirectToTarget() {\n    this.setState({\n      sliderPracticeComplete: 1\n    });\n    this.props.history.push({\n      pathname: `/TrainingIntro`,\n      state: {\n        userID: this.state.userID,\n        date: this.state.date,\n        startTime: this.state.startTime,\n        introPic: this.state.introPic\n      }\n    });\n    console.log(\"UserID is: \" + this.state.userID);\n  }\n\n}\n\nexport default SliderPractice;","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/sliderTraining.js"],"names":["React","withRouter","DATABASE_URL","styles","Slider","SliderPractice","Component","constructor","props","practSgmMu","Array","fill","map","practRT","state","taskSession","practTotal","practNum","choiceTime0","timerCountDur","timePassed","feedback","mounted","trueValue","window","addEventListener","e","keyCode","target","document","body","preventDefault","render","Math","round","performance","now","cockpit","quest_text","result","saveSgmMu","time","sgm","mu","setState","questions","redirectToTarget","sliderPracticeComplete","history","push","pathname","userID","date","startTime","introPic","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\";\n////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\nclass SliderPractice extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let practSgmMu = Array(7).fill().map(() => Array(3).fill(0));\n    let practRT = Array(7).fill().map(() => Array(3).fill(0));\n\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      taskSession: \"SliderPractice\",\n      practTotal: 7,\n      practNum: 1,//adapt\n      practRT: practRT,\n      choiceTime0: 0,\n      // //\n      practSgmMu: practSgmMu,\n      timerCountDur: 10,\n      timePassed: false,\n      feedback: false,\n      mounted: 0,\n      trueValue: 50\n      // trialTime: null,\n      // trialScore: null,\n      // valElem1: null,\n      // valElem2: null,\n      // valElem3: null,\n      // colElem1: null,\n      // colElem2: null,\n      // colElem3: null\n    };\n    // this.displayFeedback = this.displayFeedback.bind(this)\n    /* prevents page from going to the right/left when arrows are pressed .*/\n    window.addEventListener('keydown', function(e) {\n      if(e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      }\n      else if(e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  }\n  /////////////////////////////////////////////////////////////////////////////////\n  // componentDidMount() {\n  //     setTimeout(\n  //       function() {\n  //         this.setState({\n  //           mounted: 1,\n  //         });\n  //       }\n  //       .bind(this),\n  //       5000\n  //     );\n  //   }\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n  /////////////////////////////////////////////////////////////////////////////////\n  render() {\n    if (this.state.practNum<=this.state.practTotal){\n      let choiceTime0 = Math.round(performance.now());\n      return (\n        <div className={styles.cockpit}>\n        <div>{this.quest_text(this.state.practNum)}</div>\n        <Slider onSpacebarHit={(result) => {this.saveSgmMu(result,choiceTime0);}}/>\n        </div>);\n      }\n    }\n    /////////////////////////////////////////////////////////////////////////////////\n    saveSgmMu(result,time) {\n      let practSgmMu = this.state.practSgmMu;\n      let practRT = this.state.practRT;\n      let practNum = this.state.practNum;\n      practSgmMu[practNum-1][1] = result.sgm;\n      practSgmMu[practNum-1][2] = result.mu;\n      practRT[practNum-1][0] = practNum;\n      practRT[practNum-1][1] = time;\n      practRT[practNum-1][2] = Math.round(performance.now());\n      practRT[practNum-1][3] = practRT[practNum-1][2] - time;\n      this.setState({\n        practSgmMu: practSgmMu,\n        practRT: practRT,\n        feedback: true,\n        practNum: practNum+1,\n      });}\n\n      quest_text(practNum){\n        if (practNum===1){\n          return(\n            <div className={styles.questions}>\n            Please indicate the number 65 with high certainty.\n            <br />\n            <br />\n            <br />\n            </div>)\n          } else if (practNum===2){\n            return (\n              <div className={styles.questions}>\n              Please indicate the number 65 with high UNcertainty.\n              <br />\n              <br />\n              <br />\n              </div>)\n            } else if (practNum===3){\n              return (\n                <div className={styles.questions}>\n                Please indicate the number 25 with high certainty.\n                <br />\n                <br />\n                <br />\n                </div>)\n              } else if (practNum===4){\n                return (\n                  <div className={styles.questions}>\n                  Please indicate the number 25 with high UNcertainty.\n                  <br />\n                  <br />\n                  <br />\n                  </div>)\n                } else if (practNum===5){\n                  return (\n                    <div className={styles.questions}>\n                    What is your age? (If the scale refers to 0-100).\n                    <br />\n                    <br />\n                    <br />\n                    </div>)\n                  } else if (practNum===6){\n                    return (\n                      <div className={styles.questions}>\n                      What is the population of the Connecticut?\n                      <br />\n                      (If the scale refers to 0-100 Million).\n                      <br />\n                      <br />\n                      </div>)\n                    } else if (practNum===7){\n                      return (\n                        <div className={styles.questions}>\n                        What is the population of New York City\n                        <br />\n                        (If the scale refers to 0-100 Million).\n                        <br />\n                        <br />\n                        </div>)\n                      }\n                    }\n\n                    redirectToTarget() {\n                      this.setState({\n                        sliderPracticeComplete: 1,\n                      });\n\n                      this.props.history.push({\n                        pathname: `/TrainingIntro`,\n                        state: {\n                          userID: this.state.userID,\n                          date: this.state.date,\n                          startTime: this.state.startTime,\n                          introPic: this.state.introPic\n                        },\n                      });\n\n                      console.log(\"UserID is: \" + this.state.userID);\n                    }\n}\n\nexport default SliderPractice;\n"]},"metadata":{},"sourceType":"module"}