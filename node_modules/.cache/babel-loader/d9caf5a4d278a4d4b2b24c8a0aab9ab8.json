{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/slider.js\",\n    _s = $RefreshSig$();\n\nimport { range } from \"lodash\";\nimport normalPdf from \"normal-pdf\";\nimport { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Slider = ({\n  onSpacebarHit = () => {}\n}) => {\n  _s();\n\n  const [mu, setMu] = useState(50);\n  const [sgm, setSgm] = useState(30);\n  const xValues = range(0, 100.5, 0.5);\n  const yValues = xValues.map(x => normalPdf(x, mu, sgm));\n  const yValuesAdapt = yValues.map(function (element) {\n    return element * 1000;\n  });\n  const data = {\n    series: [{\n      data: yValuesAdapt\n    }],\n    options: {\n      chart: {\n        toolbar: {\n          show: false\n        },\n        height: 350,\n        type: \"line\",\n        zoom: {\n          enabled: false\n        }\n      },\n      colors: [\"#d2eaf2\"],\n      fill: {\n        colors: [\"#d2eaf2\"]\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: \"smooth\"\n      },\n      markers: {\n        size: 0\n      },\n      yaxis: {\n        min: 0,\n        labels: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        lines: {\n          show: false\n        }\n      },\n      xaxis: {\n        color: \"#d2eaf2\",\n        tickAmount: 5,\n        overwriteCategories: [\"0\", \"25\", \"50\", \"75\", \"100\"],\n        lines: {\n          show: false\n        },\n        axisTicks: {\n          color: \"#e7e6e2\",\n          width: 3,\n          height: 10\n        },\n        axisBorder: {\n          show: true,\n          color: \"#e7e6e2\",\n          height: 4,\n          width: \"100%\"\n        },\n        labels: {\n          rotate: 0,\n          style: {\n            fontSize: \"20px\",\n            colors: [\"#e7e6e2\", \"#e7e6e2\", \"#e7e6e2\", \"#e7e6e2\", \"#e7e6e2\"],\n            offsetX: 0,\n            offsetY: 0\n          }\n        }\n      },\n      grid: {\n        show: false\n      },\n      tooltip: {\n        enabled: false\n      }\n    }\n  }; //\n  //\n\n  function muPlus(event) {\n    if (mu === 100) {\n      setMu(mu);\n    } else {\n      setMu(mu + 1);\n    }\n  }\n\n  function muMinus(event) {\n    if (mu === 0) {\n      setMu(mu);\n    } else {\n      setMu(mu - 1);\n    }\n  }\n\n  function sgmPlus(event) {\n    setSgm(sgm + 20);\n  }\n\n  function sgmMinus(event) {\n    if (sgm <= 10) {\n      setSgm(sgm);\n    } else setSgm(sgm - 10);\n  }\n\n  function resetSlider(event) {\n    setSgm(30);\n    setMu(50);\n  }\n\n  useEffect(() => {\n    const handler = event => {\n      // do something with data\n      if (event.keyCode === 32) {\n        onSpacebarHit({\n          mu,\n          sgm\n        });\n        resetSlider();\n      } else if (event.keyCode === 39) {\n        muPlus();\n      } else if (event.keyCode === 37) {\n        muMinus();\n      } else if (event.keyCode === 38) {\n        sgmPlus();\n      } else if (event.keyCode === 40) {\n        sgmMinus();\n      }\n    };\n\n    document.addEventListener(\"keydown\", handler);\n    return () => {\n      document.removeEventListener(\"keydown\", handler);\n    };\n  }, [onSpacebarHit, mu, sgm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      options: data.options,\n      series: data.series,\n      type: \"line\",\n      height: 350,\n      width: 700,\n      align: \"center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Slider, \"4lcydI0MsIA/zLZ7K+iyvZncXnk=\");\n\n_c = Slider;\nexport default Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/slider.js"],"names":["range","normalPdf","useEffect","useState","ReactApexChart","Slider","onSpacebarHit","mu","setMu","sgm","setSgm","xValues","yValues","map","x","yValuesAdapt","element","data","series","options","chart","toolbar","show","height","type","zoom","enabled","colors","fill","dataLabels","stroke","curve","markers","size","yaxis","min","labels","axisTicks","lines","xaxis","color","tickAmount","overwriteCategories","width","axisBorder","rotate","style","fontSize","offsetX","offsetY","grid","tooltip","muPlus","event","muMinus","sgmPlus","sgmMinus","resetSlider","handler","keyCode","document","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import { range } from \"lodash\";\nimport normalPdf from \"normal-pdf\";\nimport { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nconst Slider = ({ onSpacebarHit = () => {} }) => {\n  const [mu, setMu] = useState(50);\n  const [sgm, setSgm] = useState(30);\n\n  const xValues = range(0, 100.5, 0.5);\n  const yValues = xValues.map((x) => normalPdf(x, mu, sgm));\n  const yValuesAdapt = yValues.map(function (element) {\n    return element * 1000;\n  });\n\n  const data = {\n    series: [{ data: yValuesAdapt }],\n    options: {\n      chart: {\n        toolbar: {\n          show: false,\n        },\n        height: 350,\n        type: \"line\",\n        zoom: {\n          enabled: false,\n        },\n      },\n      colors: [\"#d2eaf2\"],\n      fill: { colors: [\"#d2eaf2\"] },\n      dataLabels: {\n        enabled: false,\n      },\n      stroke: {\n        curve: \"smooth\",\n      },\n      markers: {\n        size: 0,\n      },\n      yaxis: {\n        min: 0,\n        labels: { show: false },\n        axisTicks: {\n          show: false,\n        },\n        lines: {\n          show: false,\n        },\n      },\n      xaxis: {\n        color: \"#d2eaf2\",\n        tickAmount: 5,\n        overwriteCategories: [\"0\", \"25\", \"50\", \"75\", \"100\"],\n        lines: {\n          show: false,\n        },\n        axisTicks: {\n          color: \"#e7e6e2\",\n          width: 3,\n          height: 10,\n        },\n        axisBorder: {\n          show: true,\n          color: \"#e7e6e2\",\n          height: 4,\n          width: \"100%\",\n        },\n        labels: {\n          rotate: 0,\n          style: {\n            fontSize: \"20px\",\n            colors: [\"#e7e6e2\", \"#e7e6e2\", \"#e7e6e2\", \"#e7e6e2\", \"#e7e6e2\"],\n            offsetX: 0,\n            offsetY: 0,\n          },\n        },\n      },\n      grid: { show: false },\n      tooltip: { enabled: false },\n    },\n  };\n  //\n\n  //\n  function muPlus(event) {\n    if (mu === 100) {\n      setMu(mu);\n    } else {\n      setMu(mu + 1);\n    }\n  }\n\n  function muMinus(event) {\n    if (mu === 0) {\n      setMu(mu);\n    } else {\n      setMu(mu - 1);\n    }\n  }\n  function sgmPlus(event) {\n    setSgm(sgm + 20);\n  }\n  function sgmMinus(event) {\n    if (sgm <= 10) {\n      setSgm(sgm);\n    } else setSgm(sgm - 10);\n  }\nfunction resetSlider(event){\n    setSgm(30);\n    setMu(50);\n  }\n\n  useEffect(() => {\n    const handler = (event) => {\n      // do something with data\n      if (event.keyCode === 32) {\n        onSpacebarHit({ mu, sgm });\n        resetSlider();\n      } else if (event.keyCode === 39) {\n        muPlus();\n      } else if (event.keyCode === 37) {\n        muMinus();\n      } else if (event.keyCode === 38) {\n        sgmPlus();\n      } else if (event.keyCode === 40) {\n        sgmMinus();\n      }\n    };\n    document.addEventListener(\"keydown\", handler);\n    return () => {\n      document.removeEventListener(\"keydown\", handler);\n    };\n  }, [onSpacebarHit, mu, sgm]);\n\n  return (\n    <div>\n      <ReactApexChart\n        options={data.options}\n        series={data.series}\n        type=\"line\"\n        height={350}\n        width={700}\n        align=\"center\"\n      />\n    </div>\n  );\n};\n\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}