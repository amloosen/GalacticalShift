{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/sliderOutcomeCheck.js\";\nimport { range } from \"lodash\";\nimport normalPdf from \"normal-pdf\";\nimport { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SliderOutcome = props => {\n  const mu = props.mu;\n  const sgm = props.sgm;\n  const trueValue = props.value;\n  const xValues = range(0, 100, 0.5);\n  const yValues = xValues.map(x => normalPdf(x, mu, sgm));\n  const yValuesAdaptNew = yValues.map(function (element) {\n    return element * 1000;\n  });\n  var xValuesOutcome = new Array(200).fill(null);\n  xValuesOutcome[trueValue * 2] = yValuesAdaptNew[trueValue * 2];\n  const data = {\n    series: [{\n      data: yValuesAdaptNew,\n      type: \"line\"\n    }, {\n      data: xValuesOutcome,\n      type: \"column\"\n    }],\n    options: {\n      chart: {\n        toolbar: {\n          show: false\n        },\n        height: 350,\n        type: 'line',\n        zoom: {\n          enabled: false\n        }\n      },\n      colors: ['#d2eaf2'],\n      fill: {\n        colors: ['#d2eaf2']\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: 'smooth'\n      },\n      markers: {\n        size: 0\n      },\n      yaxis: {\n        min: 0,\n        labels: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        lines: {\n          show: false\n        }\n      },\n      xaxis: {\n        color: '#d2eaf2',\n        // min: 0,\n        // max: 100,\n        tickAmount: 5,\n        overwriteCategories: ['0', '25', '50', '75', '100'],\n        lines: {\n          show: false\n        },\n        axisTicks: {\n          color: '#e7e6e2',\n          width: 3,\n          height: 10\n        },\n        axisBorder: {\n          show: true,\n          color: '#e7e6e2',\n          height: 4,\n          width: '100%'\n        },\n        labels: {\n          rotate: 0,\n          style: {\n            fontSize: '20px',\n            colors: ['#e7e6e2', '#e7e6e2', '#e7e6e2', '#e7e6e2', '#e7e6e2'],\n            offsetX: 0,\n            offsetY: 0\n          }\n        }\n      },\n      grid: {\n        show: false\n      },\n      tooltip: {\n        enabled: false\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      options: data.options,\n      series: data.series,\n      height: 350,\n      width: 700,\n      align: \"center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SliderOutcome;\nexport default SliderOutcome;\n\nvar _c;\n\n$RefreshReg$(_c, \"SliderOutcome\");","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/sliderOutcomeCheck.js"],"names":["range","normalPdf","useEffect","useState","ReactApexChart","SliderOutcome","props","mu","sgm","trueValue","value","xValues","yValues","map","x","yValuesAdaptNew","element","xValuesOutcome","Array","fill","data","series","type","options","chart","toolbar","show","height","zoom","enabled","colors","dataLabels","stroke","curve","markers","size","yaxis","min","labels","axisTicks","lines","xaxis","color","tickAmount","overwriteCategories","width","axisBorder","rotate","style","fontSize","offsetX","offsetY","grid","tooltip"],"mappings":"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","sourcesContent":["import { range } from \"lodash\";\nimport normalPdf from \"normal-pdf\";\nimport { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nconst SliderOutcome = ( props) => {\n  const mu  = props.mu;\n  const sgm  = props.sgm\n  const trueValue = props.value;\n\n  const xValues = range(0, 100,0.5);\n  const yValues = xValues.map((x) => normalPdf(x, mu, sgm))\n  const yValuesAdaptNew = yValues.map(function(element) {\n                       return element*1000;});\n\n  var xValuesOutcome = new Array(200).fill(null);\n  xValuesOutcome[trueValue*2] = yValuesAdaptNew[trueValue*2];\n\n  const data = {\n    series: [\n      { data: yValuesAdaptNew,\n      type: \"line\"},\n      { data: xValuesOutcome,\n      type: \"column\"},\n    ],\n    options: {\n      chart: {\n      toolbar: {\n        show: false},\n        height: 350,\n        type: 'line',\n        zoom: {\n            enabled: false}\n      },\n      colors: ['#d2eaf2'],\n      fill: {colors: ['#d2eaf2']},\n      dataLabels: {\n        enabled: false,\n      },\n      stroke: {\n        curve: 'smooth',\n      },\n      markers: {\n        size: 0\n      },\n      yaxis: {\n        min:0,\n        labels:{show: false },\n        axisTicks:{\n          show: false\n        },\n        lines: {\n          show: false\n        }\n      },\n      xaxis: {\n        color:'#d2eaf2',\n        // min: 0,\n        // max: 100,\n        tickAmount: 5,\n        overwriteCategories: ['0', '25', '50', '75', '100'],\n        lines: {\n          show: false\n        },\n        axisTicks: {\n          color: '#e7e6e2',\n          width: 3,\n          height: 10\n        },\n        axisBorder: {\n          show: true,\n          color: '#e7e6e2',\n          height: 4,\n        width: '100%'},\n        labels: {\n          rotate: 0,\n          style: {\n            fontSize: '20px',\n            colors: ['#e7e6e2','#e7e6e2','#e7e6e2','#e7e6e2','#e7e6e2'],\n            offsetX: 0,\n         offsetY: 0}\n        }\n      },\n      grid: {show: false},\n      tooltip: {enabled: false},\n    },\n  };\n\n\n  return (\n    <div>\n    <ReactApexChart options={data.options} series={data.series} height={350} width={700} align=\"center\"/>\n    </div>\n  )\n};\n\nexport default SliderOutcome;\n"]},"metadata":{},"sourceType":"module"}