{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/sliderOutcome.js\";\nimport { range } from \"lodash\";\nimport normalPdf from \"normal-pdf\";\nimport { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OutcomeSlider = props => {\n  const xValues = range(0, 100, 0.5);\n  const yValues = xValues.map(x => normalPdf(x, props.mu, props.sgm));\n  const yValuesAdapt = yValues.map(function (element) {\n    return element * 1000;\n  });\n  const data = {\n    series: [{\n      data: yValuesAdapt\n    }],\n    options: {\n      chart: {\n        toolbar: {\n          show: false\n        },\n        type: \"line\",\n        zoom: {\n          enabled: false\n        }\n      },\n      colors: [\"#d2eaf2\"],\n      fill: {\n        colors: [\"#d2eaf2\"]\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: \"smooth\"\n      },\n      markers: {\n        size: 0\n      },\n      yaxis: {\n        min: 0,\n        labels: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        lines: {\n          show: false\n        }\n      },\n      xaxis: {\n        color: \"#1C00ff00\",\n        show: false,\n        tickAmount: 5,\n        overwriteCategories: [\"0\", \"25\", \"50\", \"75\", \"100\"],\n        lines: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        axisBorder: {\n          show: false,\n          color: \"#1C00ff00\",\n          opacity: 1,\n          height: 4,\n          width: \"100%\"\n        },\n        labels: {\n          rotate: 0,\n          style: {\n            fontSize: \"20px\",\n            colors: [\"#1C00ff00\", \"#1C00ff00\", \"#1C00ff00\", \"#1C00ff00\", \"#1C00ff00\"],\n            offsetX: 0,\n            offsetY: 0\n          }\n        }\n      },\n      grid: {\n        show: false\n      },\n      tooltip: {\n        enabled: false\n      }\n    }\n  }; //\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      options: data.options,\n      series: data.series,\n      type: \"line\",\n      height: 350,\n      width: 700,\n      align: \"center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_c = OutcomeSlider;\nexport default OutcomeSlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"OutcomeSlider\");","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/sliderOutcome.js"],"names":["range","normalPdf","useEffect","useState","ReactApexChart","OutcomeSlider","props","xValues","yValues","map","x","mu","sgm","yValuesAdapt","element","data","series","options","chart","toolbar","show","type","zoom","enabled","colors","fill","dataLabels","stroke","curve","markers","size","yaxis","min","labels","axisTicks","lines","xaxis","color","tickAmount","overwriteCategories","axisBorder","opacity","height","width","rotate","style","fontSize","offsetX","offsetY","grid","tooltip"],"mappings":"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","sourcesContent":["import { range } from \"lodash\";\nimport normalPdf from \"normal-pdf\";\nimport { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nconst OutcomeSlider = (props) => {\n  const xValues = range(0, 100, 0.5);\n  const yValues = xValues.map((x) => normalPdf(x, props.mu, props.sgm));\n  const yValuesAdapt = yValues.map(function (element) {\n    return element * 1000;\n  });\n\n  const data = {\n    series: [{ data: yValuesAdapt }],\n    options: {\n      chart: {\n        toolbar: {\n          show: false,\n        },\n        type: \"line\",\n        zoom: {\n          enabled: false,\n        },\n      },\n      colors: [\"#d2eaf2\"],\n      fill: { colors: [\"#d2eaf2\"] },\n      dataLabels: {\n        enabled: false,\n      },\n      stroke: {\n        curve: \"smooth\",\n      },\n      markers: {\n        size: 0,\n      },\n      yaxis: {\n        min: 0,\n        labels: { show: false },\n        axisTicks: {\n          show: false,\n        },\n        lines: {\n          show: false,\n        },\n      },\n      xaxis: {\n        color: \"#1C00ff00\",\n        show: false,\n        tickAmount: 5,\n        overwriteCategories: [\"0\", \"25\", \"50\", \"75\", \"100\"],\n        lines: {\n          show: false,\n        },\n        axisTicks: {\n          show: false,\n        },\n        axisBorder: {\n          show: false,\n          color: \"#1C00ff00\",\n          opacity: 1,\n          height: 4,\n          width: \"100%\",\n        },\n        labels: {\n          rotate: 0,\n          style: {\n            fontSize: \"20px\",\n            colors: [\n              \"#1C00ff00\",\n              \"#1C00ff00\",\n              \"#1C00ff00\",\n              \"#1C00ff00\",\n              \"#1C00ff00\",\n            ],\n            offsetX: 0,\n            offsetY: 0,\n          },\n        },\n      },\n      grid: { show: false },\n      tooltip: { enabled: false },\n    },\n  };\n  //\n\n  return (\n    <div>\n      <ReactApexChart\n        options={data.options}\n        series={data.series}\n        type=\"line\"\n        height={350}\n        width={700}\n        align=\"center\"\n      />\n    </div>\n  );\n};\n\nexport default OutcomeSlider;\n"]},"metadata":{},"sourceType":"module"}