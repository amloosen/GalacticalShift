{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTask.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\";\nimport OutcomeSlider from \"./sliderOutcome\";\nimport OutcomeSliderBar from \"./sliderOutcomeBar\";\nimport ElementsFullDisplay from \"./elementsFulldisplay\"; ////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TrainingTask extends React.Component {\n  constructor(props) {\n    super(props);\n    let trialSgmMu = Array(9).fill().map(() => Array(3).fill(0));\n    let trialRT = Array(9).fill().map(() => Array(3).fill(0));\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"TrainingTask\",\n      trialTotal: 9,\n      trialNum: 1,\n      //adapt\n      trialRT: trialRT,\n      choiceTime0: 0,\n      // //\n      trialSgmMu: trialSgmMu,\n      timerCountDur: 10,\n      timePassed: false,\n      feedback: false,\n      mounted: 0,\n      trueValue: 50 // trialTime: null,\n      // trialScore: null,\n      // valElem1: null,\n      // valElem2: null,\n      // valElem3: null,\n      // colElem1: null,\n      // colElem2: null,\n      // colElem3: null\n\n    }; // this.displayFeedback = this.displayFeedback.bind(this)\n\n    /* prevents page from going to the right/left when arrows are pressed .*/\n\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      } else if (e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  } /////////////////////////////////////////////////////////////////////////////////\n  // componentDidMount() {\n  //     setTimeout(\n  //       function() {\n  //         this.setState({\n  //           mounted: 1,\n  //         });\n  //       }\n  //       .bind(this),\n  //       5000\n  //     );\n  //   }\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n  /////////////////////////////////////////////////////////////////////////////////\n\n\n  render() {\n    if (this.state.trialNum <= this.state.trialTotal) {\n      setTimeout(() => {\n        this.setState({\n          timePassed: true\n        });\n      }, 1000); //show elements\n\n      if (!this.state.timePassed) {\n        return /*#__PURE__*/_jsxDEV(ElementsFullDisplay, {\n          value1: 30,\n          value2: 40,\n          value3: 80,\n          trialTotal: this.state.trialTotal,\n          trialNum: this.state.trialNum\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this);\n      } else {\n        // if (this.state.timePassed===true && this.state.feedback===false){\n        let choiceTime0 = Math.round(performance.now());\n\n        let text = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.questions,\n          children: [\"How large is the alien population?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this);\n\n        let text2 = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.questions,\n          children: [\"The true population on the planet was \", 50, \" mio.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this);\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", this.state.feedback ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.cockpit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: text2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.overlaybar,\n              children: /*#__PURE__*/_jsxDEV(OutcomeSliderBar, {\n                mu: this.state.trialSgmMu[this.state.trialNum - 1][2],\n                sgm: this.state.trialSgmMu[this.state.trialNum - 1][1],\n                value: this.state.trueValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.overlaybar,\n              children: /*#__PURE__*/_jsxDEV(OutcomeSlider, {\n                mu: this.state.trialSgmMu[this.state.trialNum - 1][2],\n                sgm: this.state.trialSgmMu[this.state.trialNum - 1][1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.cockpit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              onSpacebarHit: result => {\n                this.saveSgmMu(result, choiceTime0);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this);\n      }\n    }\n  } /////////////////////////////////////////////////////////////////////////////////\n\n\n  saveSgmMu(result, time) {\n    let trialSgmMu = this.state.trialSgmMu;\n    let trialRT = this.state.trialRT;\n    let trialNum = this.state.trialNum;\n    trialSgmMu[trialNum - 1][1] = result.sgm;\n    trialSgmMu[trialNum - 1][2] = result.mu;\n    trialRT[trialNum - 1][0] = trialNum;\n    trialRT[trialNum - 1][1] = time;\n    trialRT[trialNum - 1][2] = Math.round(performance.now());\n    trialRT[trialNum - 1][3] = trialRT[trialNum - 1][2] - time;\n    this.setState({\n      trialSgmMu: trialSgmMu,\n      trialRT: trialRT,\n      feedback: true,\n      trialNum: trialNum + 1 // outcome: show\n\n    });\n  }\n\n}\n\nexport default _c = withRouter(TrainingTask);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTask.js"],"names":["React","withRouter","DATABASE_URL","styles","Slider","OutcomeSlider","OutcomeSliderBar","ElementsFullDisplay","TrainingTask","Component","constructor","props","trialSgmMu","Array","fill","map","trialRT","state","trialTotal","trialNum","choiceTime0","timerCountDur","timePassed","feedback","mounted","trueValue","window","addEventListener","e","keyCode","target","document","body","preventDefault","render","setTimeout","setState","Math","round","performance","now","text","questions","text2","cockpit","overlaybar","result","saveSgmMu","time","sgm","mu"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\";\nimport OutcomeSlider from \"./sliderOutcome\";\nimport OutcomeSliderBar from \"./sliderOutcomeBar\";\nimport ElementsFullDisplay from \"./elementsFulldisplay\";\n////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\nclass TrainingTask extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let trialSgmMu = Array(9)\n      .fill()\n      .map(() => Array(3).fill(0));\n    let trialRT = Array(9)\n      .fill()\n      .map(() => Array(3).fill(0));\n\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"TrainingTask\",\n      trialTotal: 9,\n      trialNum: 1, //adapt\n      trialRT: trialRT,\n      choiceTime0: 0,\n      // //\n      trialSgmMu: trialSgmMu,\n      timerCountDur: 10,\n      timePassed: false,\n      feedback: false,\n      mounted: 0,\n      trueValue: 50,\n      // trialTime: null,\n      // trialScore: null,\n      // valElem1: null,\n      // valElem2: null,\n      // valElem3: null,\n      // colElem1: null,\n      // colElem2: null,\n      // colElem3: null\n    };\n    // this.displayFeedback = this.displayFeedback.bind(this)\n    /* prevents page from going to the right/left when arrows are pressed .*/\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      } else if (e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  }\n  /////////////////////////////////////////////////////////////////////////////////\n  // componentDidMount() {\n  //     setTimeout(\n  //       function() {\n  //         this.setState({\n  //           mounted: 1,\n  //         });\n  //       }\n  //       .bind(this),\n  //       5000\n  //     );\n  //   }\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n  /////////////////////////////////////////////////////////////////////////////////\n  render() {\n    if (this.state.trialNum <= this.state.trialTotal) {\n      setTimeout(() => {\n        this.setState({ timePassed: true });\n      }, 1000); //show elements\n      if (!this.state.timePassed) {\n        return (\n          <ElementsFullDisplay\n            value1={30}\n            value2={40}\n            value3={80}\n            trialTotal={this.state.trialTotal}\n            trialNum={this.state.trialNum}\n          />\n        );\n      } else {\n        // if (this.state.timePassed===true && this.state.feedback===false){\n        let choiceTime0 = Math.round(performance.now());\n\n        let text = (\n          <div className={styles.questions}>\n            How large is the alien population?\n            <br />\n            <br />\n            <br />\n          </div>\n        );\n\n        let text2 = (\n          <div className={styles.questions}>\n            The true population on the planet was {50} mio.\n            <br />\n            <br />\n            <br />\n          </div>\n        );\n\n        return (\n          <div>\n            {\" \"}\n            {this.state.feedback ? (\n              <div className={styles.cockpit}>\n                <div>{text2}</div>\n                <div className={styles.overlaybar}>\n                  <OutcomeSliderBar\n                    mu={this.state.trialSgmMu[this.state.trialNum - 1][2]}\n                    sgm={this.state.trialSgmMu[this.state.trialNum - 1][1]}\n                    value={this.state.trueValue}\n                  />\n                </div>\n                <div className={styles.overlaybar}>\n                  <OutcomeSlider\n                    mu={this.state.trialSgmMu[this.state.trialNum - 1][2]}\n                    sgm={this.state.trialSgmMu[this.state.trialNum - 1][1]}\n                  />\n                </div>\n              </div>\n            ) : (\n              <div className={styles.cockpit}>\n                <div>{text}</div>\n                <Slider\n                  onSpacebarHit={(result) => {\n                    this.saveSgmMu(result, choiceTime0);\n                  }}\n                />\n              </div>\n            )}\n          </div>\n        );\n      }\n    }\n  }\n  /////////////////////////////////////////////////////////////////////////////////\n  saveSgmMu(result, time) {\n    let trialSgmMu = this.state.trialSgmMu;\n    let trialRT = this.state.trialRT;\n    let trialNum = this.state.trialNum;\n    trialSgmMu[trialNum - 1][1] = result.sgm;\n    trialSgmMu[trialNum - 1][2] = result.mu;\n    trialRT[trialNum - 1][0] = trialNum;\n    trialRT[trialNum - 1][1] = time;\n    trialRT[trialNum - 1][2] = Math.round(performance.now());\n    trialRT[trialNum - 1][3] = trialRT[trialNum - 1][2] - time;\n    this.setState({\n      trialSgmMu: trialSgmMu,\n      trialRT: trialRT,\n      feedback: true,\n      trialNum: trialNum + 1,\n      // outcome: show\n    });\n  }\n}\n\nexport default withRouter(TrainingTask);\n"]},"metadata":{},"sourceType":"module"}