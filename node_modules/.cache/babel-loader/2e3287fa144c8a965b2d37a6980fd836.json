{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/sliderOutcome.js\";\nimport { range } from \"lodash\";\nimport React from \"react\";\nimport normalPdf from \"normal-pdf\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass OutcomeSlider extends React.Component {\n  render() {\n    const mu = this.props.mu;\n    const sgm = this.props.sgm; // const mu = 50;\n    // const sgm = 20;\n\n    const trueValue = this.props.value;\n    const xValues = range(0, 100, 0.5);\n    const yValues = xValues.map(x => normalPdf(x, mu, sgm));\n    const yValuesAdaptNew = yValues.map(function (element) {\n      return element * 1000;\n    });\n    var xValuesOutcome = new Array(200).fill(null);\n    xValuesOutcome[trueValue * 2] = yValuesAdaptNew[trueValue * 2];\n    const data = {\n      series: [{\n        data: yValuesAdaptNew,\n        type: \"line\"\n      }, {\n        data: xValuesOutcome,\n        type: \"column\"\n      }],\n      options: {\n        chart: {\n          toolbar: {\n            show: false\n          },\n          height: 350,\n          type: 'line',\n          toolbar: {\n            show: false\n          },\n          zoom: {\n            enabled: false\n          }\n        },\n        colors: ['#d2eaf2', \"#DAA520\"],\n        fill: {\n          colors: ['#d2eaf2']\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth'\n        },\n        markers: {\n          size: 0\n        },\n        yaxis: {\n          min: 0,\n          labels: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          lines: {\n            show: false\n          }\n        },\n        xaxis: {\n          color: '#d2eaf2',\n          // min: 0,\n          // max: 100,\n          tickAmount: 5,\n          overwriteCategories: ['0', '25', '50', '75', '100'],\n          lines: {\n            show: false\n          },\n          axisTicks: {\n            color: '#e7e6e2',\n            width: 3,\n            height: 10\n          },\n          axisBorder: {\n            show: true,\n            color: '#e7e6e2',\n            height: 4,\n            width: '100%'\n          },\n          labels: {\n            rotate: 0,\n            style: {\n              fontSize: '20px',\n              colors: ['#e7e6e2', '#e7e6e2', '#e7e6e2', '#e7e6e2', '#e7e6e2'],\n              offsetX: 0,\n              offsetY: 0\n            }\n          }\n        },\n        grid: {\n          show: false\n        },\n        tooltip: {\n          enabled: false\n        },\n        legend: {\n          show: false\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n        options: data.options,\n        series: data.series,\n        height: 350,\n        width: 700,\n        align: \"center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default OutcomeSlider;","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/sliderOutcome.js"],"names":["range","React","normalPdf","ReactApexChart","OutcomeSlider","Component","render","mu","props","sgm","trueValue","value","xValues","yValues","map","x","yValuesAdaptNew","element","xValuesOutcome","Array","fill","data","series","type","options","chart","toolbar","show","height","zoom","enabled","colors","dataLabels","stroke","curve","markers","size","yaxis","min","labels","axisTicks","lines","xaxis","color","tickAmount","overwriteCategories","width","axisBorder","rotate","style","fontSize","offsetX","offsetY","grid","tooltip","legend"],"mappings":"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","sourcesContent":["import { range } from \"lodash\";\nimport React from \"react\";\n\nimport normalPdf from \"normal-pdf\";\nimport ReactApexChart from \"react-apexcharts\";\n\nclass OutcomeSlider extends React.Component{\n  render (){\n  const mu  = this.props.mu\n  const sgm  = this.props.sgm\n  // const mu = 50;\n  // const sgm = 20;\n  const trueValue = this.props.value;\n\n  const xValues = range(0, 100,0.5);\n  const yValues = xValues.map((x) => normalPdf(x, mu, sgm))\n  const yValuesAdaptNew = yValues.map(function(element) {\n\t                     return element*1000;});\n\n var xValuesOutcome = new Array(200).fill(null);\n xValuesOutcome[trueValue*2] = yValuesAdaptNew[trueValue*2];\n\n\n  const data = {\n    series: [\n      { data: yValuesAdaptNew,\n      type: \"line\"},\n      { data: xValuesOutcome,\n      type: \"column\"},\n    ],\n    options: {\n      chart: {\n      toolbar: {\n        show: false},\n        height: 350,\n        type: 'line',\n        toolbar: {\n          show: false\n        },\n        zoom: {\n            enabled: false}\n      },\n      colors: ['#d2eaf2',\"#DAA520\"],\n      fill: {colors: ['#d2eaf2']},\n      dataLabels: {\n        enabled: false,\n      },\n      stroke: {\n        curve: 'smooth',\n      },\n      markers: {\n        size: 0\n      },\n      yaxis: {\n        min:0,\n        labels:{show: false },\n        axisTicks:{\n          show: false\n        },\n        lines: {\n          show: false\n        }\n      },\n      xaxis: {\n        color:'#d2eaf2',\n        // min: 0,\n        // max: 100,\n        tickAmount: 5,\n        overwriteCategories: ['0', '25', '50', '75', '100'],\n        lines: {\n          show: false\n        },\n        axisTicks: {\n          color: '#e7e6e2',\n          width: 3,\n          height: 10\n        },\n        axisBorder: {\n          show: true,\n          color: '#e7e6e2',\n          height: 4,\n        width: '100%'},\n        labels: {\n          rotate: 0,\n          style: {\n            fontSize: '20px',\n            colors: ['#e7e6e2','#e7e6e2','#e7e6e2','#e7e6e2','#e7e6e2'],\n            offsetX: 0,\n         offsetY: 0}\n        }\n      },\n      grid: {show: false},\n      tooltip: {enabled: false},\n      legend: {\n      show: false}\n    },\n  };\n\n  return (\n    <div>\n    <ReactApexChart options={data.options} series={data.series} height={350} width={700} align=\"center\"/>\n    </div>\n  )\n};\n}\n\nexport default OutcomeSlider;\n"]},"metadata":{},"sourceType":"module"}