{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingIntro.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Cockpit from \"./img/CockpitBlank.jpg\";\nimport img_intro1 from \"./intro/ExamplePicture1.jpg\";\nimport img_intro2 from \"./intro/ExamplePicture2.jpg\";\nimport img_intro3 from \"./intro/ExamplePicture3.jpg\"; /////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar trialTotal = 9; /////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n// REACT COMPONENT START\n\nclass TrainingIntro extends React.Component {\n  constructor(props) {\n    super(props); // var user_info = this.props.location.state.user_info;\n\n    this._handleInstructKey = event => {\n      var key_pressed;\n\n      switch (event.keyCode) {\n        case 37:\n          //    this is left arrow\n          key_pressed = 4;\n          this.handleInstructLocal(key_pressed);\n          break;\n\n        case 39:\n          //    this is right arrow\n          key_pressed = 5;\n          this.handleInstructLocal(key_pressed);\n          break;\n\n        case 32:\n          //    this is SPACEBAR\n          key_pressed = 10;\n          this.handleInstructLocal(key_pressed);\n          break;\n\n        default:\n      }\n    };\n\n    var currentDate = new Date();\n    var introStartTime = currentDate.toTimeString(); /////////////////////////////////////////////////////////////////////////////////\n    // SET COMPONENT STATES\n\n    this.state = {\n      // userID: userID,\n      date: currentDate,\n      startTime: introStartTime,\n      sectionTime: introStartTime,\n      taskSessionTry: 1,\n      taskSession: \"TrainingIntro\",\n      instructScreenText: 1,\n      // outcomeNotAnsLog2: outcomeNotAnsLog2,\n      // trialNum: 1,\n      // trialTotal: trialTotal,\n      // trialRT: 0,\n      // trialTime: 0,\n      instructScreen: true // testScreen: false,\n      //\n      // debug: false //if true, skip this section\n\n    };\n    this.handleInstructLocal = this.handleInstructLocal.bind(this);\n    /* prevents page from going down when space bar is hit .*/\n\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 32 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  } /////////////////////////////////////////////////////////////////////////////////\n  // END COMPONENT STATE\n  // This handles instruction screen within the component USING KEYBOARD\n\n\n  handleInstructLocal(key_pressed) {\n    var curText = this.state.instructScreenText;\n    var whichButton = key_pressed;\n\n    if (whichButton === 4 && curText > 1) {\n      this.setState({\n        instructScreenText: curText - 1\n      });\n    } else if (whichButton === 5 && curText < 6) {\n      this.setState({\n        instructScreenText: curText + 1\n      });\n    } else if (curText === 6 && whichButton === 10) {\n      //   //startmissionOne\n      //   setTimeout(\n      //     function () {\n      //       this.missionOne();\n      //     }.bind(this),\n      //     0\n      //   );\n      // } else if (curText === 7 && whichButton === 10) {\n      //   //restart\n      //   this.setState({\n      //     instructScreenText: 1,\n      //   });\n      // } else if (curText === 8 && whichButton === 10) {\n      //   //go to TrainingTask\n      setTimeout(function () {\n        this.nextMission();\n      }.bind(this), 0);\n    }\n  } // handle key key_pressed\n\n\n  /////////////////////////////////////////////////////////////////////////////////\n  // END COMPONENT PROPS\n  //\n  // condSave() {\n  //   var userID = this.state.userID;\n  //   var currentDate = new Date(); // maybe change to local\n  //   var sectionTime = currentDate.tointroStartTime();\n  //   var trialTime = Math.round(performance.now());\n  //\n  //   let saveString = {\n  //     userID: this.state.userID,\n  //     date: this.state.date,\n  //     startTime: this.state.startTime, // this is when they start the expt\n  //     sectionTime: sectionTime, //this is if they somehow refresh the page...\n  //     trialTime: trialTime,\n  //     taskSession: this.state.taskSession,\n  //     taskSessionTry: this.state.taskSessionTry};\n  //\n  //   console.log(saveString);\n  //\n  //   try {\n  //     fetch(`${DATABASE_URL}/cond_data/` + userID, {\n  //       method: \"POST\",\n  //       headers: {\n  //         Accept: \"application/json\",\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify(saveString),\n  //     });\n  //   } catch (e) {\n  //     console.log(\"Cant post?\");\n  //   }\n  // }\n  //\n  // trialSave() {\n  //   var userID = this.state.userID;\n  //\n  //   let saveString = {\n  //     userID: this.state.userID,\n  //     date: this.state.date,\n  //     startTime: this.state.startTime, // this is when they start the expt\n  //     sectionTime: this.state.sectionTime, //this is if they somehow refresh the page...\n  //     taskSession: this.state.taskSession\n  //   };\n  //\n  //   try {\n  //     fetch(`${DATABASE_URL}/outcome_test/` + userID, {\n  //       method: \"POST\",\n  //       headers: {\n  //         Accept: \"application/json\",\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify(saveString),\n  //     });\n  //   } catch (e) {\n  //     console.log(\"Cant post?\");\n  //   }\n  //\n  //   //send the TrainingIntro conditions?\n  //   setTimeout(\n  //     function () {\n  //       this.condSave();\n  //     }.bind(this),\n  //     0\n  //   );\n  // }\n  //\n  // passMission() {\n  //   this.setState({\n  //     instructScreen: true,\n  //     testScreen: false,\n  //     instructScreenText: 8,\n  //   });\n  // }\n  nextMission() {\n    document.removeEventListener(\"keyup\", this._handleInstructKey);\n    document.removeEventListener(\"keyup\", this._handleDebugKey);\n    this.props.history.push({\n      pathname: `/TrainingTask`,\n      // pathname: `/elementsHover`,\n      state: {\n        userID: this.state.userID,\n        date: this.state.date,\n        startTime: this.state.startTime\n      }\n    });\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0); //send the TrainingIntro conditions?\n    // setTimeout(\n    //   function () {\n    //     this.condSave();\n    //   }.bind(this),\n    //   0\n    // );\n\n    setTimeout(function () {\n      this.setState({\n        mounted: 1\n      });\n    }.bind(this), 5000);\n  }\n\n  componentWillUnmount() {\n    // fix Warning: Can't perform a React state update on an unmounted component\n    this.setState = (state, callback) => {\n      return;\n    };\n  } //////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // render time\n\n\n  render() {\n    let text;\n\n    if (this.state.instructScreen === true) {\n      if (this.state.instructScreenText === 1) {\n        document.addEventListener(\"keyup\", this._handleInstructKey);\n        text = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.main,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.center,\n              children: \"Hello and welcome on onboard!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 13\n            }, this), \"For today's mission, you will be a space explorer on an intergalactic mission.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 13\n            }, this), \"Your mission is to tell your station on earth of how many aliens live on the planets you visit.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 13\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 20\n            }, this), \"It is critical that you give your best estimate of the alien population size for the mission to be successful.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 13\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 20\n            }, this), \"We will now tell you how you can infer the population size once you reached a planet.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 13\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.centerTwo,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"(Use the \\u2190 \\u2192 keys to navigate the pages.)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.centerTwo,\n              children: [\"[\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"NEXT \\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 14\n              }, this), \"]\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this);\n      } else if (this.state.instructScreenText === 2) {\n        text = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.main,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.center,\n              children: \"TRAINING I\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 13\n            }, this), \"So how can you find out how many aliens live on a planet?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 13\n            }, this), \"Your spaceship is equipped with several measuring instruments\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 13\n            }, this), \"that will help you determine how many aliens live on the planet.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 19\n            }, this), \"A measuring instrument may look like this:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 13\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.centerTwo,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: img_intro1,\n                alt: \"example1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 13\n              }, this), \"/>\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 13\n            }, this), \"This instrument indicates 40% of the resource is available.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.centerTwo,\n              children: [\"[\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u2190 BACK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 14\n              }, this), \"] [\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"NEXT \\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 40\n              }, this), \"]\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this);\n      } else if (this.state.instructScreenText === 3) {\n        text = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.main,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.center,\n              children: \"TRAINING I\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 13\n            }, this), \"The aliens living on these planets rely on natural resources,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 13\n            }, this), \" and thus the population size is related to the measurement of your instrument.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 13\n            }, this), \"For example, the reading of the measurement could be reflecting the population size (in million) one-to-one.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 13\n            }, this), \"This would mean that if the instrument shows you \\u201840%\\u2019 40 million aliens live on that planet. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 107\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.centerTwo,\n              children: [\"[\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u2190 BACK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 14\n              }, this), \"] [\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"NEXT \\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 40\n              }, this), \"]\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this);\n      } else if (this.state.instructScreenText === 4) {\n        text = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.main,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.center,\n              children: \"TRAINING I\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 13\n            }, this), \"However, a challenge makes your mission more difficult:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 13\n            }, this), \"No one knows how the instrument readings map onto the population size of the planet.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 13\n            }, this), \"The association between the instrument reading and the population size will be\", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"more complex\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 13\n            }, this), \" and also \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"change at certain time points.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 52\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 99\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 13\n            }, this), \"It is your task to learn this and keep track of changes.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 13\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.centerTwo,\n              children: [\"[\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u2190 BACK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 14\n              }, this), \"] [\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"NEXT \\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 40\n              }, this), \"]\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this);\n      } else if (this.state.instructScreenText === 5) {\n        text = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.main,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.center,\n              children: \"TRAINING I\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 13\n            }, this), \"For simplicity, we will now introduce you to the structure by using simple mappings that will change at some point.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 13\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 20\n            }, this), \"We want to see whether you can detect the change. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 63\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 69\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 13\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.centerTwo,\n              children: [\"[\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u2190 BACK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 14\n              }, this), \"] [\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"NEXT \\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 40\n              }, this), \"]\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this);\n      } else if (this.state.instructScreenText === 6) {\n        text = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.main,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.center,\n              children: \"TRAINING I\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 13\n            }, this), \"For your first training, after you indicated your answer \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 70\n            }, this), \"we will show you how many aliens actually lived on the planet.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 19\n            }, this), \"This will make it possible for you to find out how the instrument relates to the alien population size.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 13\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 20\n            }, this), \"Let's practice this!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 13\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.centerTwo,\n              children: [\"Press the [\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"SPACEBAR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 24\n              }, this), \"] to start the training.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.centerTwo,\n              children: [\"[\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u2190 BACK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 14\n              }, this), \"]\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this);\n      } else if (this.state.instructScreen === false) {}\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cockpit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.textblock,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(TrainingIntro);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingIntro.js"],"names":["React","withRouter","DATABASE_URL","styles","Cockpit","img_intro1","img_intro2","img_intro3","trialTotal","TrainingIntro","Component","constructor","props","_handleInstructKey","event","key_pressed","keyCode","handleInstructLocal","currentDate","Date","introStartTime","toTimeString","state","date","startTime","sectionTime","taskSessionTry","taskSession","instructScreenText","instructScreen","bind","window","addEventListener","e","target","document","body","preventDefault","curText","whichButton","setState","setTimeout","nextMission","removeEventListener","_handleDebugKey","history","push","pathname","userID","componentDidMount","scrollTo","mounted","componentWillUnmount","callback","render","text","main","center","centerTwo","cockpit","textblock"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\n\nimport styles from \"./style/taskStyle.module.css\";\nimport Cockpit from \"./img/CockpitBlank.jpg\";\n\nimport img_intro1 from \"./intro/ExamplePicture1.jpg\";\nimport img_intro2 from \"./intro/ExamplePicture2.jpg\";\nimport img_intro3 from \"./intro/ExamplePicture3.jpg\";\n/////////\nvar trialTotal = 9;\n\n/////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n// REACT COMPONENT START\nclass TrainingIntro extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // var user_info = this.props.location.state.user_info;\n\n    var currentDate   = new Date();\n    var introStartTime    = currentDate.toTimeString();\n\n    /////////////////////////////////////////////////////////////////////////////////\n    // SET COMPONENT STATES\n    this.state = {\n      // userID: userID,\n      date: currentDate,\n      startTime: introStartTime ,\n      sectionTime: introStartTime,\n      taskSessionTry: 1,\n      taskSession: \"TrainingIntro\",\n      instructScreenText: 1,\n\n      // outcomeNotAnsLog2: outcomeNotAnsLog2,\n\n      // trialNum: 1,\n      // trialTotal: trialTotal,\n      // trialRT: 0,\n      // trialTime: 0,\n      instructScreen: true,\n      // testScreen: false,\n      //\n      // debug: false //if true, skip this section\n    };\n\n    this.handleInstructLocal = this.handleInstructLocal.bind(this);\n\n    /* prevents page from going down when space bar is hit .*/\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 32 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  }\n  /////////////////////////////////////////////////////////////////////////////////\n  // END COMPONENT STATE\n\n  // This handles instruction screen within the component USING KEYBOARD\n  handleInstructLocal(key_pressed) {\n    var curText = this.state.instructScreenText;\n    var whichButton = key_pressed;\n\n    if (whichButton === 4 && curText > 1) {\n      this.setState({ instructScreenText: curText - 1 });\n    } else if (whichButton === 5 && curText < 6) {\n      this.setState({ instructScreenText: curText + 1 });\n    } else if (curText === 6 && whichButton === 10) {\n    //   //startmissionOne\n    //   setTimeout(\n    //     function () {\n    //       this.missionOne();\n    //     }.bind(this),\n    //     0\n    //   );\n    // } else if (curText === 7 && whichButton === 10) {\n    //   //restart\n    //   this.setState({\n    //     instructScreenText: 1,\n    //   });\n    // } else if (curText === 8 && whichButton === 10) {\n    //   //go to TrainingTask\n      setTimeout(\n        function () {\n          this.nextMission();\n        }.bind(this),\n        0\n      );\n    }\n  }\n\n  // handle key key_pressed\n  _handleInstructKey = (event) => {\n    var key_pressed;\n\n    switch (event.keyCode) {\n      case 37:\n        //    this is left arrow\n        key_pressed = 4;\n        this.handleInstructLocal(key_pressed);\n        break;\n      case 39:\n        //    this is right arrow\n        key_pressed = 5;\n        this.handleInstructLocal(key_pressed);\n        break;\n      case 32:\n        //    this is SPACEBAR\n        key_pressed = 10;\n        this.handleInstructLocal(key_pressed);\n        break;\n      default:\n    }\n  };\n\n  /////////////////////////////////////////////////////////////////////////////////\n  // END COMPONENT PROPS\n  //\n  // condSave() {\n  //   var userID = this.state.userID;\n  //   var currentDate = new Date(); // maybe change to local\n  //   var sectionTime = currentDate.tointroStartTime();\n  //   var trialTime = Math.round(performance.now());\n  //\n  //   let saveString = {\n  //     userID: this.state.userID,\n  //     date: this.state.date,\n  //     startTime: this.state.startTime, // this is when they start the expt\n  //     sectionTime: sectionTime, //this is if they somehow refresh the page...\n  //     trialTime: trialTime,\n  //     taskSession: this.state.taskSession,\n  //     taskSessionTry: this.state.taskSessionTry};\n  //\n  //   console.log(saveString);\n  //\n  //   try {\n  //     fetch(`${DATABASE_URL}/cond_data/` + userID, {\n  //       method: \"POST\",\n  //       headers: {\n  //         Accept: \"application/json\",\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify(saveString),\n  //     });\n  //   } catch (e) {\n  //     console.log(\"Cant post?\");\n  //   }\n  // }\n  //\n  // trialSave() {\n  //   var userID = this.state.userID;\n  //\n  //   let saveString = {\n  //     userID: this.state.userID,\n  //     date: this.state.date,\n  //     startTime: this.state.startTime, // this is when they start the expt\n  //     sectionTime: this.state.sectionTime, //this is if they somehow refresh the page...\n  //     taskSession: this.state.taskSession\n  //   };\n  //\n  //   try {\n  //     fetch(`${DATABASE_URL}/outcome_test/` + userID, {\n  //       method: \"POST\",\n  //       headers: {\n  //         Accept: \"application/json\",\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify(saveString),\n  //     });\n  //   } catch (e) {\n  //     console.log(\"Cant post?\");\n  //   }\n  //\n  //   //send the TrainingIntro conditions?\n  //   setTimeout(\n  //     function () {\n  //       this.condSave();\n  //     }.bind(this),\n  //     0\n  //   );\n  // }\n  //\n  // passMission() {\n  //   this.setState({\n  //     instructScreen: true,\n  //     testScreen: false,\n  //     instructScreenText: 8,\n  //   });\n  // }\n\n  nextMission() {\n    document.removeEventListener(\"keyup\", this._handleInstructKey);\n    document.removeEventListener(\"keyup\", this._handleDebugKey);\n    this.props.history.push({\n      pathname: `/TrainingTask`,\n      // pathname: `/elementsHover`,\n      state: {\n        userID: this.state.userID,\n        date: this.state.date,\n        startTime: this.state.startTime},\n    });\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    //send the TrainingIntro conditions?\n\n    // setTimeout(\n    //   function () {\n    //     this.condSave();\n    //   }.bind(this),\n    //   0\n    // );\n\n    setTimeout(\n      function () {\n        this.setState({\n          mounted: 1,\n        });\n      }.bind(this),\n      5000\n    );\n  }\n\n  componentWillUnmount() {\n    // fix Warning: Can't perform a React state update on an unmounted component\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // render time\n\n  render() {\n    let text;\n      if (this.state.instructScreen === true) {\n        if (this.state.instructScreenText === 1) {\n          document.addEventListener(\"keyup\", this._handleInstructKey);\n          text = (\n            <div className={styles.main}>\n            <p>\n            <span className={styles.center}>\n            Hello and welcome on onboard!\n            </span>\n            <br />\n            For today&apos;s mission, you will be a space explorer on an intergalactic mission.\n            <br />\n            <br />\n            Your mission is to tell your station on earth of how many aliens live on the planets you visit.\n            <br /> <br />It is critical that you give your best estimate of the alien population size for the mission to be successful.\n            <br /> <br />\n            We will now tell you how you can infer the population size once you reached a planet.\n            <br /> <br />\n            <span className={styles.centerTwo}>\n            <i>(Use the ← → keys to navigate the pages.)</i>\n            </span>\n            <span className={styles.centerTwo}>\n            [<strong>NEXT →</strong>]\n            </span>\n            </p>\n            </div>\n          );\n        } else if (this.state.instructScreenText === 2) {\n          text = (\n            <div className={styles.main}>\n            <p>\n            <span className={styles.center}>\n            TRAINING I\n            </span>\n\n            So how can you find out how many aliens live on a planet?\n            <br />\n            <br />\n            Your spaceship is equipped with several measuring instruments\n            <br />\n            that will help you determine how many aliens live on the planet.\n            <br /><br />A measuring instrument may look like this:\n            <br /> <br />\n            <span className={styles.centerTwo}>\n            <img src={img_intro1} alt=\"example1\"  />\n            />\n            </span>\n            <br />\n            This instrument indicates 40% of the resource is available.\n            <br />\n            <br />\n            <span className={styles.centerTwo}>\n            [<strong>← BACK</strong>] [<strong>NEXT →</strong>]\n            </span>\n            </p>\n            </div>\n          );\n        } else if (this.state.instructScreenText === 3) {\n          text = (\n            <div className={styles.main}>\n            <p>\n            <span className={styles.center}>TRAINING I</span>\n            <br />\n            The aliens living on these planets rely on natural resources,\n            <br /> and thus the population size is related to the measurement of your instrument.\n            <br />\n            <br />\n            For example, the reading of the measurement could be reflecting the population size (in million) one-to-one.\n            <br />\n            This would mean that if the instrument shows you ‘40%’ 40 million aliens live on that planet. <br />\n            <br />\n            <span className={styles.centerTwo}>\n            [<strong>← BACK</strong>] [<strong>NEXT →</strong>]\n            </span>\n            </p>\n            </div>\n          );\n        } else if (this.state.instructScreenText === 4) {\n          text = (\n            <div className={styles.main}>\n            <p>\n            <span className={styles.center}>TRAINING I</span>\n            <br />\n            However, a challenge makes your mission more difficult:\n            <br />\n            <br />\n            No one knows how the instrument readings map onto the population size of the planet.\n            <br />\n            <br />\n            The association between the instrument reading and the population size will be\n            <strong>more complex</strong> and also <strong>change at certain time points.</strong><br />\n            <br />\n            It is your task to learn this and keep track of changes.\n            <br /> <br />\n            <span className={styles.centerTwo}>\n            [<strong>← BACK</strong>] [<strong>NEXT →</strong>]\n            </span>\n            </p>\n            </div>\n          );\n        } else if (this.state.instructScreenText === 5) {\n          text = (\n            <div className={styles.main}>\n            <p>\n            <span className={styles.center}>TRAINING I</span>\n            <br />\n            For simplicity, we will now introduce you to the structure by using simple mappings\n            that will change at some point.\n            <br /> <br />\n            We want to see whether you can detect the change. <br /><br />\n            <br /> <br />\n            <span className={styles.centerTwo}>\n            [<strong>← BACK</strong>] [<strong>NEXT →</strong>]\n            </span>\n            </p>\n            </div>\n          );\n        } else if (this.state.instructScreenText === 6) {\n          text = (\n            <div className={styles.main}>\n            <p>\n            <span className={styles.center}>TRAINING I</span>\n            <br />\n            For your first training, after you indicated your answer <br />\n            we will show you how many aliens actually lived on the planet.\n            <br /><br />\n            This will make it possible for you to find out how the instrument relates to the alien population size.\n            <br /> <br />\n            Let's practice this!\n            <br /> <br />\n            <span className={styles.centerTwo}>\n            Press the [<strong>SPACEBAR</strong>] to start the training.\n            </span>\n            <span className={styles.centerTwo}>\n            [<strong>← BACK</strong>]\n            </span>\n            </p>\n            </div>\n          );\n        } else if (this.state.instructScreen === false) {}\n      }\n\n    return (\n      <div className={styles.cockpit}>\n        <div className={styles.textblock}>{text}</div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(TrainingIntro);\n"]},"metadata":{},"sourceType":"module"}