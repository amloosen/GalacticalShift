{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTask.js\";\nimport React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\";\nimport Cockpit from \"./img/CockpitBlank.jpg\"; /////////////////////////////////////////////////////////////////////////////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar trialTotal = 9; /////////////////////////////////////////////////////////////////////////////////\n// Plan the outcome memory test here\n/////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n// REACT COMPONENT START\n\nclass TrainingTask extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._handleInstructKey = event => {\n      var key_pressed;\n\n      switch (event.keyCode) {\n        case 37:\n          //    this is left arrow\n          key_pressed = 4;\n          this.handleInstructLocal(key_pressed);\n          break;\n\n        case 39:\n          //    this is right arrow\n          key_pressed = 5;\n          this.handleInstructLocal(key_pressed);\n          break;\n\n        case 32:\n          //    this is SPACEBAR\n          key_pressed = 10;\n          this.handleInstructLocal(key_pressed);\n          break;\n\n        default:\n      }\n    };\n\n    this._handleTestKey = event => {\n      var pressed;\n      var time_pressed;\n\n      switch (event.keyCode) {\n        case 49:\n          pressed = 1;\n          time_pressed = Math.round(performance.now());\n          this.testCheck(pressed, time_pressed);\n          break;\n\n        case 50:\n          pressed = 2;\n          time_pressed = Math.round(performance.now());\n          this.testCheck(pressed, time_pressed);\n          break;\n\n        case 51:\n          pressed = 3;\n          time_pressed = Math.round(performance.now());\n          this.testCheck(pressed, time_pressed);\n          break;\n        //this is keycode for numpad\n\n        case 97:\n          pressed = 1;\n          time_pressed = Math.round(performance.now());\n          this.testCheck(pressed, time_pressed);\n          break;\n\n        case 98:\n          pressed = 2;\n          time_pressed = Math.round(performance.now());\n          this.testCheck(pressed, time_pressed);\n          break;\n\n        case 99:\n          pressed = 3;\n          time_pressed = Math.round(performance.now());\n          this.testCheck(pressed, time_pressed);\n          break;\n\n        default:\n      }\n    };\n\n    const userID = this.props.location.state.userID;\n    const date = this.props.location.state.date;\n    const startTime = this.props.location.state.startTime;\n    var currentDate = new Date(); // maybe change to local\n\n    var timeString = currentDate.toTimeString(); /////////////////////////////////////////////////////////////////////////////////\n    // SET COMPONENT STATES\n\n    this.state = {\n      userID: userID,\n      date: date,\n      startTime: startTime,\n      sectionTime: timeString,\n      taskSessionTry: 1,\n      taskSession: \"TrainingTask\",\n      instructScreenText: 1,\n      trialNum: 1,\n      trialTotal: trialTotal,\n      trialRT: 0,\n      trialTime: 0,\n      trialKeypress: 0,\n      trialCorLog: [],\n      trialScore: 0,\n      trialCor: null,\n      instructScreen: true,\n      testScreen: false,\n      debug: false,\n      //if true, skip this section\n      mu: 0,\n      std: 1\n    };\n    this.handleInstructLocal = this.handleInstructLocal.bind(this);\n    this.testStart = this.testStart.bind(this);\n    /* prevents page from going down when space bar is hit .*/\n\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 32 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  } /////////////////////////////////////////////////////////////////////////////////\n  // END COMPONENT STATE\n  // This handles instruction screen within the component USING KEYBOARD\n\n\n  handleInstructLocal(key_pressed) {\n    var curText = this.state.instructScreenText;\n    var whichButton = key_pressed;\n\n    if (whichButton === 4 && curText > 1) {\n      this.setState({\n        instructScreenText: curText - 1\n      });\n    } else if (whichButton === 5 && curText < 6) {\n      this.setState({\n        instructScreenText: curText + 1\n      });\n    } else if (curText === 6 && whichButton === 10) {\n      //startmissionOne\n      setTimeout(function () {\n        this.missionOne();\n      }.bind(this), 0);\n    } else if (curText === 7 && whichButton === 10) {\n      //restart\n      this.setState({\n        instructScreenText: 1\n      });\n    } else if (curText === 8 && whichButton === 10) {\n      //go to pathtask\n      setTimeout(function () {\n        this.nextMission();\n      }.bind(this), 0);\n    }\n  } // handle key key_pressed\n\n\n  /////////////////////////////////////////////////////////////////////////////////\n  // END COMPONENT PROPS\n  missionOne() {\n    var trialTime = Math.round(performance.now());\n    this.setState({\n      instructScreen: false,\n      testScreen: true,\n      trialNum: 1,\n      trialTime: trialTime,\n      trialRT: 0,\n      trialKeypress: 0,\n      trialCorLog: [],\n      trialScore: 0\n    });\n  }\n\n  testStart(trialNum) {\n    // which picture\n    //\n    // var whichOutcomePic = this.state.outcomeIndxLog[trialNum - 1];\n    //\n    // //how many pics\n    // var numOutcomePic = this.state.outcomeMultLog[trialNum - 1];\n    //\n    // //value of the answer\n    // var outcomeVal1 = this.state.outcomeValLog[trialNum - 1];\n    // var outcomeVal2 = this.state.outcomeNotValLog1[trialNum - 1];\n    // var outcomeVal3 = this.state.outcomeNotValLog2[trialNum - 1];\n    //\n    // // position of the answer\n    // var outcomePos1 = this.state.outcomeAnsLog[trialNum - 1];\n    // var outcomePos2 = this.state.outcomeNotAnsLog1[trialNum - 1];\n    // // var outcomePos3 = this.state.outcomeNotAnsLog2[trialNum - 1];\n    //\n    // var ansOne;\n    // var ansTwo;\n    // var ansThree;\n    //\n    // // console.log(this.state.outcomeValLog);\n    // // console.log(this.state.outcomeNotValLog1);\n    // // console.log(this.state.outcomeNotValLog1);\n    // // console.log(this.state.outcomeAnsLog);\n    // // console.log(this.state.outcomeNotAnsLog1);\n    // // console.log(this.state.outcomeNotAnsLog2);\n    //\n    // if (outcomePos1 === 1) {\n    //   ansOne = outcomeVal1;\n    // } else {\n    //   if (outcomePos2 === 1) {\n    //     ansOne = outcomeVal2;\n    //   } else {\n    //     ansOne = outcomeVal3;\n    //   }\n    // }\n    //\n    // if (outcomePos1 === 2) {\n    //   ansTwo = outcomeVal1;\n    // } else {\n    //   if (outcomePos2 === 2) {\n    //     ansTwo = outcomeVal2;\n    //   } else {\n    //     ansTwo = outcomeVal3;\n    //   }\n    // }\n    //\n    // if (outcomePos1 === 3) {\n    //   ansThree = outcomeVal1;\n    // } else {\n    //   if (outcomePos2 === 3) {\n    //     ansThree = outcomeVal2;\n    //   } else {\n    //     ansThree = outcomeVal3;\n    //   }\n    // }\n    //\n    // // console.log(ansOne);\n    // // console.log(ansTwo);\n    // // console.log(ansThree);\n    let text = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.questions,\n      children: [\"How large is the alien population?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this); // return <div>{text}</div>;\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        onSpacebarHit: result => window.alert(JSON.stringify(result))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this);\n  }\n\n  condSave() {\n    var userID = this.state.userID;\n    var currentDate = new Date(); // maybe change to local\n\n    var sectionTime = currentDate.toTimeString();\n    var trialTime = Math.round(performance.now());\n    let saveString = {\n      userID: this.state.userID,\n      date: this.state.date,\n      startTime: this.state.startTime,\n      // this is when they start the expt\n      sectionTime: sectionTime,\n      //this is if they somehow refresh the page...\n      trialTime: trialTime,\n      taskSession: this.state.taskSession,\n      taskSessionTry: this.state.taskSessionTry,\n      structNum: null // outcomeVal: this.state.outcomeVal,\n      // outcomeIndx: this.state.outcomeIndx,\n      // stateWord: null,\n      // stateIndx: null,\n\n    };\n    console.log(saveString);\n\n    try {\n      fetch(`${DATABASE_URL}/cond_data/` + userID, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(saveString)\n      });\n    } catch (e) {\n      console.log(\"Cant post?\");\n    }\n  } // trialSave() {\n  //   var userID = this.state.userID;\n  //   var trialPicIndx = this.state.outcomeIndxLog[this.state.trialNum - 1];\n  //   var trialPicWord = this.state.outcomeWord[trialPicIndx];\n  //\n  //   let saveString = {\n  //     userID: this.state.userID,\n  //     date: this.state.date,\n  //     startTime: this.state.startTime, // this is when they start the expt\n  //     sectionTime: this.state.sectionTime, //this is if they somehow refresh the page...\n  //     taskSession: this.state.taskSession,\n  //     taskSessionTry: this.state.taskSessionTry,\n  //     trialTime: this.state.trialTime,\n  //     trialNum: this.state.trialNum,\n  //     trialPicIndx: trialPicIndx,\n  //     trialPicWord: trialPicWord,\n  //     trialPicNum: this.state.outcomeMultLog[this.state.trialNum - 1],\n  //     trialPicValue: this.state.outcomeValLog[this.state.trialNum - 1],\n  //     trialPicAns: this.state.outcomeAnsLog[this.state.trialNum - 1],\n  //     trialRT: this.state.trialRT,\n  //     trialKeypress: this.state.trialKeypress,\n  //     trialCor: this.state.trialCor,\n  //     trialScore: this.state.trialScore,\n  //   };\n  // try {\n  //   fetch(`${DATABASE_URL}/outcome_test/` + userID, {\n  //     method: \"POST\",\n  //     headers: {\n  //       Accept: \"application/json\",\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(saveString),\n  //   });\n  // } catch (e) {\n  //   console.log(\"Cant post?\");\n  // }\n  //lag a bit to make sure statestate is saved\n  //   setTimeout(\n  //     function () {\n  //       this.trialNext();\n  //     }.bind(this),\n  //     10\n  //   );\n  // }\n\n\n  trialNext() {\n    var trialNum = this.state.trialNum + 1;\n    var trialTime = Math.round(performance.now());\n    this.setState({\n      trialTime: trialTime,\n      trialNum: trialNum,\n      trialKeypress: 0,\n      // trialPicIndx: null,\n      // trialPicNum: null,\n      // trialPicValue: null,\n      // trialPicAns: null,\n      trialCor: null\n    });\n  } // passMission() {\n  //   this.setState({\n  //     instructScreen: true,\n  //     testScreen: false,\n  //     instructScreenText: 8,\n  //   });\n  // }\n  // nextMission() {\n  //   document.removeEventListener(\"keyup\", this._handleInstructKey);\n  //   document.removeEventListener(\"keyup\", this._handleDebugKey);\n  //   this.props.history.push({\n  //     pathname: `/PathTask`,\n  //     state: {\n  //       userID: this.state.userID,\n  //       date: this.state.date,\n  //       startTime: this.state.startTime,\n  //\n  //     },\n  //   });\n  // }\n\n\n  componentDidMount() {\n    window.scrollTo(0, 0); //send the TrainingTask conditions?\n\n    setTimeout(function () {\n      this.condSave();\n    }.bind(this), 0);\n    setTimeout(function () {\n      this.setState({\n        mounted: 1\n      });\n    }.bind(this), 5000);\n  }\n\n  componentWillUnmount() {\n    // fix Warning: Can't perform a React state update on an unmounted component\n    this.setState = (state, callback) => {\n      return;\n    };\n  } //////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // render time\n\n\n  render() {\n    let text;\n\n    if (this.state.debug === false) {\n      if (this.state.instructScreen === true) {\n        if (this.state.instructScreenText === 1) {\n          document.addEventListener(\"keyup\", this._handleInstructKey);\n          text = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.main,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.center,\n                children: \"Hello and welcome on onboard!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 13\n              }, this), \"For today's mission, you will be a space explorer on an intergalactic mission.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 13\n              }, this), \"Your mission is to tell your station on earth of how many aliens live on the planets you visit.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 20\n              }, this), \"It is critical that you give your best estimate of the alien population size for the mission to be successful.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 20\n              }, this), \"We will now tell you how you can infer the population size once you reached a planet.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.centerTwo,\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  children: \"(Use the \\u2190 \\u2192 keys to navigate the pages.)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.centerTwo,\n                children: [\"[\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"NEXT \\u2192\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 14\n                }, this), \"]\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this);\n        } else if (this.state.instructScreenText === 2) {\n          text = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.main,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.center,\n                children: \"TRAINING I\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 13\n              }, this), \"So how can you find out how many aliens live on a planet?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 13\n              }, this), \"Your spaceship is equipped with several measuring instruments\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 13\n              }, this), \"that will help you determine how many aliens live on the planet.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 19\n              }, this), \"A measuring instrument may look like this:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.centerTwo,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: styles.state,\n                  src: this.state.introPic[0],\n                  alt: \"example1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 13\n              }, this), \"This instrument indicates 40% of the resource is available.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.centerTwo,\n                children: [\"[\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\u2190 BACK\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 14\n                }, this), \"] [\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"NEXT \\u2192\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 40\n                }, this), \"]\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this);\n        } else if (this.state.instructScreenText === 3) {\n          text = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.main,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.center,\n                children: \"TRAINING I\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 13\n              }, this), \"The aliens living on these planets rely on natural resources,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 13\n              }, this), \" and thus the population size is related to the measurement of your instrument.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 13\n              }, this), \"For example, the reading of the measurement could be reflecting the population size (in million) one-to-one.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 13\n              }, this), \"This would mean that if the instrument shows you \\u201840%\\u2019 40 million aliens live on that planet. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 107\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.centerTwo,\n                children: [\"[\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\u2190 BACK\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 14\n                }, this), \"] [\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"NEXT \\u2192\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 40\n                }, this), \"]\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this);\n        } else if (this.state.instructScreenText === 4) {\n          text = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.main,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.center,\n                children: \"TRAINING I\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 13\n              }, this), \"However, a challenge makes your mission more difficult:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 13\n              }, this), \"No one knows how the instrument readings map onto the population size of the planet.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 13\n              }, this), \"The association between the instrument reading and the population size will be\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"more complex\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 20\n              }, this), \" and also \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"change at certain time points.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 59\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 106\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 13\n              }, this), \"It is your task to learn this and keep track of changes.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.centerTwo,\n                children: [\"[\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\u2190 BACK\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 14\n                }, this), \"] [\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"NEXT \\u2192\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 40\n                }, this), \"]\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 13\n          }, this);\n        } else if (this.state.instructScreenText === 5) {\n          text = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.main,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.center,\n                children: \"TRAINING I\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 13\n              }, this), \"For simplicity, we will now introduce you to the structure by using simple mappings \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 97\n              }, this), \"that will change at some point.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 20\n              }, this), \"We want to see whether you can detect the change. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 63\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 69\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.centerTwo,\n                children: [\"[\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\u2190 BACK\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 14\n                }, this), \"] [\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"NEXT \\u2192\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 40\n                }, this), \"]\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 13\n          }, this);\n        } else if (this.state.instructScreenText === 6) {\n          text = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.main,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.center,\n                children: \"TRAINING I\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 13\n              }, this), \"For your first training, after you indicated your answer \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 70\n              }, this), \"we will show you how many aliens actually lived on the planet.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 19\n              }, this), \"This will make it possible for you to find out how the instrument relates to the alien population size.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 20\n              }, this), \"Let's practice this!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.centerTwo,\n                children: [\"Press the [\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"SPACEBAR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 558,\n                  columnNumber: 24\n                }, this), \"] to start the training.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.centerTwo,\n                children: [\"[\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\u2190 BACK\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 14\n                }, this), \"]\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this);\n        } else if (this.state.instructScreenText === 7) {\n          // IF YOU FAIL THE TEST, YOU RESTART\n          document.addEventListener(\"keyup\", this._handleInstructKey);\n          text = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.main,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.center,\n                children: \"TRAINING I\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 13\n              }, this), \"Unforuntately, you only had \", this.state.trialScore, \"/\", this.state.trialTotal, \" correct!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 20\n              }, this), \"Let us go through the instructions and try again.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.centerTwo,\n                children: [\"Press the [\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"SPACEBAR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 580,\n                  columnNumber: 24\n                }, this), \"] to try again.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 13\n          }, this);\n        } else if (this.state.instructScreenText === 8) {\n          // IF YOU PASS THE TEST\n          document.addEventListener(\"keyup\", this._handleInstructKey);\n          text = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.main,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.center,\n                children: \"TRAINING I\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 13\n              }, this), \"Great, you had \", this.state.trialScore, \"/\", this.state.trialTotal, \"\\xA0correct!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 596,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 596,\n                columnNumber: 20\n              }, this), \"In summary, these outcome rooms lead to:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.centerTwo,\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: styles.stateSmall,\n                  src: this.state.outcomePic[0],\n                  alt: \"outcome1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 599,\n                  columnNumber: 13\n                }, this), \"\\xA0\\xA0 = \\xA0+\", \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: styles.coin,\n                  src: this.state.img_coinSmall,\n                  alt: \"coin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 13\n                }, this), \"\\xA0\\xA0 (gain)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: styles.stateSmall,\n                  src: this.state.outcomePic[1],\n                  alt: \"outcome2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 612,\n                  columnNumber: 13\n                }, this), \"\\xA0\\xA0 = \\xA0-\", \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: styles.coin,\n                  src: this.state.img_coinSmall,\n                  alt: \"coin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 618,\n                  columnNumber: 13\n                }, this), \"\\xA0\\xA0 (lose)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 624,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: styles.stateSmall,\n                  src: this.state.outcomePic[2],\n                  alt: \"outcome3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 625,\n                  columnNumber: 13\n                }, this), \"\\xA0\\xA0 = \\xA0none\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 632,\n                columnNumber: 13\n              }, this), \"You are ready to move on to the next training session.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 634,\n                columnNumber: 13\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 634,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.centerTwo,\n                children: [\"Press the [\", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"SPACEBAR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 636,\n                  columnNumber: 24\n                }, this), \"] to continue.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 13\n          }, this);\n        }\n      } else if (this.state.instructScreen === false) {\n        // out of the instructions, this is the quiz\n        if (this.state.testScreen === true) {\n          document.removeEventListener(\"keyup\", this._handleInstructKey);\n\n          if (this.state.trialNum <= this.state.trialTotal) {\n            document.addEventListener(\"keyup\", this._handleTestKey);\n            text = /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\" \", this.testStart(this.state.trialNum)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 20\n            }, this);\n          } else {\n            // finish the quiz\n            document.removeEventListener(\"keyup\", this._handleTestKey);\n\n            if (this.state.trialScore / this.state.trialTotal > 0.65) {\n              //if score more than 65%, move on to the next section\n              setTimeout(function () {\n                this.passMission();\n              }.bind(this), 0);\n            } else {\n              //if you fail, then you do the quiz again...\n              setTimeout(function () {\n                this.missionOneRestart();\n              }.bind(this), 0);\n            }\n          }\n        } else {\n          //Error..........\n          console.log(\"ERROR - LOOP BROKEN OR LEAKY\");\n        }\n      }\n    } else if (this.state.debug === true) {\n      document.addEventListener(\"keyup\", this._handleDebugKey);\n      text = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.main,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.center,\n            children: \"DEBUG MODE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.centerTwo,\n            children: [\"Press the [\", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"SPACEBAR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 20\n            }, this), \"] to skip to next section.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cockpit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.textblock,\n        children: this.testStart()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(TrainingTask);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTask.js"],"names":["React","useState","withRouter","DATABASE_URL","styles","Slider","Cockpit","trialTotal","TrainingTask","Component","constructor","props","_handleInstructKey","event","key_pressed","keyCode","handleInstructLocal","_handleTestKey","pressed","time_pressed","Math","round","performance","now","testCheck","userID","location","state","date","startTime","currentDate","Date","timeString","toTimeString","sectionTime","taskSessionTry","taskSession","instructScreenText","trialNum","trialRT","trialTime","trialKeypress","trialCorLog","trialScore","trialCor","instructScreen","testScreen","debug","mu","std","bind","testStart","window","addEventListener","e","target","document","body","preventDefault","curText","whichButton","setState","setTimeout","missionOne","nextMission","text","questions","result","alert","JSON","stringify","condSave","saveString","structNum","console","log","fetch","method","headers","Accept","trialNext","componentDidMount","scrollTo","mounted","componentWillUnmount","callback","render","main","center","centerTwo","introPic","stateSmall","outcomePic","coin","img_coinSmall","removeEventListener","passMission","missionOneRestart","_handleDebugKey","cockpit","textblock"],"mappings":"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","sourcesContent":["import React, { useState }  from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\";\n\nimport Cockpit from \"./img/CockpitBlank.jpg\";\n/////////////////////////////////////////////////////////////////////////////////\n\nvar trialTotal = 9;\n\n/////////////////////////////////////////////////////////////////////////////////\n// Plan the outcome memory test here\n\n/////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n// REACT COMPONENT START\nclass TrainingTask extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const userID = this.props.location.state.userID;\n    const date = this.props.location.state.date;\n    const startTime = this.props.location.state.startTime;\n    var currentDate = new Date(); // maybe change to local\n    var timeString = currentDate.toTimeString();\n\n    /////////////////////////////////////////////////////////////////////////////////\n    // SET COMPONENT STATES\n    this.state = {\n      userID: userID,\n      date: date,\n      startTime: startTime,\n      sectionTime: timeString,\n      taskSessionTry: 1,\n      taskSession: \"TrainingTask\",\n      instructScreenText: 1,\n\n      trialNum: 1,\n      trialTotal: trialTotal,\n      trialRT: 0,\n      trialTime: 0,\n      trialKeypress: 0,\n      trialCorLog: [],\n      trialScore: 0,\n      trialCor: null,\n\n      instructScreen: true,\n      testScreen: false,\n\n      debug: false, //if true, skip this section\n\n      mu: 0,\n      std: 1\n    };\n\n    this.handleInstructLocal = this.handleInstructLocal.bind(this);\n    this.testStart = this.testStart.bind(this);\n\n    /* prevents page from going down when space bar is hit .*/\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 32 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  }\n  /////////////////////////////////////////////////////////////////////////////////\n  // END COMPONENT STATE\n\n  // This handles instruction screen within the component USING KEYBOARD\n  handleInstructLocal(key_pressed) {\n    var curText = this.state.instructScreenText;\n    var whichButton = key_pressed;\n\n    if (whichButton === 4 && curText > 1) {\n      this.setState({ instructScreenText: curText - 1 });\n    } else if (whichButton === 5 && curText < 6) {\n      this.setState({ instructScreenText: curText + 1 });\n    } else if (curText === 6 && whichButton === 10) {\n      //startmissionOne\n      setTimeout(\n        function () {\n          this.missionOne();\n        }.bind(this),\n        0\n      );\n    } else if (curText === 7 && whichButton === 10) {\n      //restart\n      this.setState({\n        instructScreenText: 1,\n      });\n    } else if (curText === 8 && whichButton === 10) {\n      //go to pathtask\n      setTimeout(\n        function () {\n          this.nextMission();\n        }.bind(this),\n        0\n      );\n    }\n  }\n\n  // handle key key_pressed\n  _handleInstructKey = (event) => {\n    var key_pressed;\n\n    switch (event.keyCode) {\n      case 37:\n      //    this is left arrow\n      key_pressed = 4;\n      this.handleInstructLocal(key_pressed);\n      break;\n      case 39:\n      //    this is right arrow\n      key_pressed = 5;\n      this.handleInstructLocal(key_pressed);\n      break;\n      case 32:\n      //    this is SPACEBAR\n      key_pressed = 10;\n      this.handleInstructLocal(key_pressed);\n      break;\n      default:\n    }\n  };\n\n  _handleTestKey = (event) => {\n    var pressed;\n    var time_pressed;\n\n    switch (event.keyCode) {\n      case 49:\n      pressed = 1;\n      time_pressed = Math.round(performance.now());\n      this.testCheck(pressed, time_pressed);\n      break;\n      case 50:\n      pressed = 2;\n      time_pressed = Math.round(performance.now());\n      this.testCheck(pressed, time_pressed);\n      break;\n      case 51:\n      pressed = 3;\n      time_pressed = Math.round(performance.now());\n      this.testCheck(pressed, time_pressed);\n      break;\n      //this is keycode for numpad\n      case 97:\n      pressed = 1;\n      time_pressed = Math.round(performance.now());\n      this.testCheck(pressed, time_pressed);\n      break;\n      case 98:\n      pressed = 2;\n      time_pressed = Math.round(performance.now());\n      this.testCheck(pressed, time_pressed);\n      break;\n      case 99:\n      pressed = 3;\n      time_pressed = Math.round(performance.now());\n      this.testCheck(pressed, time_pressed);\n      break;\n      default:\n    }\n  };\n\n  /////////////////////////////////////////////////////////////////////////////////\n  // END COMPONENT PROPS\n\n  missionOne() {\n    var trialTime = Math.round(performance.now());\n    this.setState({\n      instructScreen: false,\n      testScreen: true,\n      trialNum: 1,\n      trialTime: trialTime,\n      trialRT: 0,\n      trialKeypress: 0,\n      trialCorLog: [],\n      trialScore: 0,\n    });\n  }\n\n  testStart(trialNum) {\n    // which picture\n    //\n    // var whichOutcomePic = this.state.outcomeIndxLog[trialNum - 1];\n    //\n    // //how many pics\n    // var numOutcomePic = this.state.outcomeMultLog[trialNum - 1];\n    //\n    // //value of the answer\n    // var outcomeVal1 = this.state.outcomeValLog[trialNum - 1];\n    // var outcomeVal2 = this.state.outcomeNotValLog1[trialNum - 1];\n    // var outcomeVal3 = this.state.outcomeNotValLog2[trialNum - 1];\n    //\n    // // position of the answer\n    // var outcomePos1 = this.state.outcomeAnsLog[trialNum - 1];\n    // var outcomePos2 = this.state.outcomeNotAnsLog1[trialNum - 1];\n    // // var outcomePos3 = this.state.outcomeNotAnsLog2[trialNum - 1];\n    //\n    // var ansOne;\n    // var ansTwo;\n    // var ansThree;\n    //\n    // // console.log(this.state.outcomeValLog);\n    // // console.log(this.state.outcomeNotValLog1);\n    // // console.log(this.state.outcomeNotValLog1);\n    // // console.log(this.state.outcomeAnsLog);\n    // // console.log(this.state.outcomeNotAnsLog1);\n    // // console.log(this.state.outcomeNotAnsLog2);\n    //\n    // if (outcomePos1 === 1) {\n    //   ansOne = outcomeVal1;\n    // } else {\n    //   if (outcomePos2 === 1) {\n    //     ansOne = outcomeVal2;\n    //   } else {\n    //     ansOne = outcomeVal3;\n    //   }\n    // }\n    //\n    // if (outcomePos1 === 2) {\n    //   ansTwo = outcomeVal1;\n    // } else {\n    //   if (outcomePos2 === 2) {\n    //     ansTwo = outcomeVal2;\n    //   } else {\n    //     ansTwo = outcomeVal3;\n    //   }\n    // }\n    //\n    // if (outcomePos1 === 3) {\n    //   ansThree = outcomeVal1;\n    // } else {\n    //   if (outcomePos2 === 3) {\n    //     ansThree = outcomeVal2;\n    //   } else {\n    //     ansThree = outcomeVal3;\n    //   }\n    // }\n    //\n    // // console.log(ansOne);\n    // // console.log(ansTwo);\n    // // console.log(ansThree);\n\n    let text = (\n      <div className={styles.questions}>\n      How large is the alien population?\n      <br />\n      <br />\n      <br />\n      </div>\n    );\n    // return <div>{text}</div>;\n    return (<div>\n      <div>{text}</div>\n      <Slider onSpacebarHit={(result) => window.alert(JSON.stringify(result))} />\n    </div>)\n  }\n\n\n  condSave() {\n    var userID = this.state.userID;\n    var currentDate = new Date(); // maybe change to local\n    var sectionTime = currentDate.toTimeString();\n    var trialTime = Math.round(performance.now());\n\n    let saveString = {\n      userID: this.state.userID,\n      date: this.state.date,\n      startTime: this.state.startTime, // this is when they start the expt\n      sectionTime: sectionTime, //this is if they somehow refresh the page...\n      trialTime: trialTime,\n      taskSession: this.state.taskSession,\n      taskSessionTry: this.state.taskSessionTry,\n      structNum: null,\n\n      // outcomeVal: this.state.outcomeVal,\n      // outcomeIndx: this.state.outcomeIndx,\n      // stateWord: null,\n      // stateIndx: null,\n\n    };\n\n    console.log(saveString);\n\n    try {\n      fetch(`${DATABASE_URL}/cond_data/` + userID, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(saveString),\n      });\n    } catch (e) {\n      console.log(\"Cant post?\");\n    }\n  }\n\n  // trialSave() {\n  //   var userID = this.state.userID;\n  //   var trialPicIndx = this.state.outcomeIndxLog[this.state.trialNum - 1];\n  //   var trialPicWord = this.state.outcomeWord[trialPicIndx];\n  //\n  //   let saveString = {\n  //     userID: this.state.userID,\n  //     date: this.state.date,\n  //     startTime: this.state.startTime, // this is when they start the expt\n  //     sectionTime: this.state.sectionTime, //this is if they somehow refresh the page...\n  //     taskSession: this.state.taskSession,\n  //     taskSessionTry: this.state.taskSessionTry,\n  //     trialTime: this.state.trialTime,\n  //     trialNum: this.state.trialNum,\n  //     trialPicIndx: trialPicIndx,\n  //     trialPicWord: trialPicWord,\n  //     trialPicNum: this.state.outcomeMultLog[this.state.trialNum - 1],\n  //     trialPicValue: this.state.outcomeValLog[this.state.trialNum - 1],\n  //     trialPicAns: this.state.outcomeAnsLog[this.state.trialNum - 1],\n  //     trialRT: this.state.trialRT,\n  //     trialKeypress: this.state.trialKeypress,\n  //     trialCor: this.state.trialCor,\n  //     trialScore: this.state.trialScore,\n  //   };\n\n    // try {\n    //   fetch(`${DATABASE_URL}/outcome_test/` + userID, {\n    //     method: \"POST\",\n    //     headers: {\n    //       Accept: \"application/json\",\n    //       \"Content-Type\": \"application/json\",\n    //     },\n    //     body: JSON.stringify(saveString),\n    //   });\n    // } catch (e) {\n    //   console.log(\"Cant post?\");\n    // }\n\n    //lag a bit to make sure statestate is saved\n  //   setTimeout(\n  //     function () {\n  //       this.trialNext();\n  //     }.bind(this),\n  //     10\n  //   );\n  // }\n\n  trialNext() {\n    var trialNum = this.state.trialNum + 1;\n    var trialTime = Math.round(performance.now());\n\n    this.setState({\n      trialTime: trialTime,\n      trialNum: trialNum,\n      trialKeypress: 0,\n      // trialPicIndx: null,\n      // trialPicNum: null,\n      // trialPicValue: null,\n      // trialPicAns: null,\n      trialCor: null,\n    });\n  }\n\n\n\n  // passMission() {\n  //   this.setState({\n  //     instructScreen: true,\n  //     testScreen: false,\n  //     instructScreenText: 8,\n  //   });\n  // }\n\n  // nextMission() {\n  //   document.removeEventListener(\"keyup\", this._handleInstructKey);\n  //   document.removeEventListener(\"keyup\", this._handleDebugKey);\n  //   this.props.history.push({\n  //     pathname: `/PathTask`,\n  //     state: {\n  //       userID: this.state.userID,\n  //       date: this.state.date,\n  //       startTime: this.state.startTime,\n  //\n  //     },\n  //   });\n  // }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    //send the TrainingTask conditions?\n\n    setTimeout(\n      function () {\n        this.condSave();\n      }.bind(this),\n      0\n    );\n\n    setTimeout(\n      function () {\n        this.setState({\n          mounted: 1,\n        });\n      }.bind(this),\n      5000\n    );\n  }\n\n  componentWillUnmount() {\n    // fix Warning: Can't perform a React state update on an unmounted component\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // render time\n\n  render() {\n    let text;\n\n    if (this.state.debug === false) {\n      if (this.state.instructScreen === true) {\n        if (this.state.instructScreenText === 1) {\n          document.addEventListener(\"keyup\", this._handleInstructKey);\n          text = (\n            <div className={styles.main}>\n            <p>\n            <span className={styles.center}>\n            Hello and welcome on onboard!\n            </span>\n            <br />\n            For today&apos;s mission, you will be a space explorer on an intergalactic mission.\n            <br />\n            Your mission is to tell your station on earth of how many aliens live on the planets you visit.\n            <br /> <br />It is critical that you give your best estimate of the alien population size for the mission to be successful.\n            <br /> <br />\n            We will now tell you how you can infer the population size once you reached a planet.\n            <br /> <br />\n            <span className={styles.centerTwo}>\n            <i>(Use the ← → keys to navigate the pages.)</i>\n            </span>\n            <span className={styles.centerTwo}>\n            [<strong>NEXT →</strong>]\n            </span>\n            </p>\n            </div>\n          );\n        } else if (this.state.instructScreenText === 2) {\n          text = (\n            <div className={styles.main}>\n            <p>\n            <span className={styles.center}>\n            TRAINING I\n            </span>\n            <br />\n            So how can you find out how many aliens live on a planet?\n            <br />\n            <br />\n            Your spaceship is equipped with several measuring instruments\n            <br />\n            that will help you determine how many aliens live on the planet.\n            <br /><br />A measuring instrument may look like this:\n            <br /> <br />\n            <span className={styles.centerTwo}>\n            <img\n            className={styles.state}\n            src={this.state.introPic[0]}\n            alt=\"example1\"\n            />\n            </span>\n            <br />\n            This instrument indicates 40% of the resource is available.\n            <br />\n\n            <br />\n            <span className={styles.centerTwo}>\n            [<strong>← BACK</strong>] [<strong>NEXT →</strong>]\n            </span>\n            </p>\n            </div>\n          );\n        } else if (this.state.instructScreenText === 3) {\n          text = (\n            <div className={styles.main}>\n            <p>\n            <span className={styles.center}>TRAINING I</span>\n            <br />\n            The aliens living on these planets rely on natural resources,\n            <br /> and thus the population size is related to the measurement of your instrument.\n            <br />\n            <br />\n            For example, the reading of the measurement could be reflecting the population size (in million) one-to-one.\n            <br />\n            This would mean that if the instrument shows you ‘40%’ 40 million aliens live on that planet. <br />\n            <br />\n            <span className={styles.centerTwo}>\n            [<strong>← BACK</strong>] [<strong>NEXT →</strong>]\n            </span>\n            </p>\n            </div>\n          );\n        } else if (this.state.instructScreenText === 4) {\n          text = (\n            <div className={styles.main}>\n            <p>\n            <span className={styles.center}>TRAINING I</span>\n            <br />\n            However, a challenge makes your mission more difficult:\n            <br />\n            <br />\n            No one knows how the instrument readings map onto the population size of the planet.\n            <br />\n            The association between the instrument reading and the population size will be\n            <br /> <strong>more complex</strong> and also <strong>change at certain time points.</strong><br />\n            <br />\n            It is your task to learn this and keep track of changes.\n            <br /> <br />\n            <span className={styles.centerTwo}>\n            [<strong>← BACK</strong>] [<strong>NEXT →</strong>]\n            </span>\n            </p>\n            </div>\n          );\n        } else if (this.state.instructScreenText === 5) {\n          text = (\n            <div className={styles.main}>\n            <p>\n            <span className={styles.center}>TRAINING I</span>\n            <br />\n            For simplicity, we will now introduce you to the structure by using simple mappings <br />\n            that will change at some point.\n            <br /> <br />\n            We want to see whether you can detect the change. <br /><br />\n            <br /> <br />\n            <span className={styles.centerTwo}>\n            [<strong>← BACK</strong>] [<strong>NEXT →</strong>]\n            </span>\n            </p>\n            </div>\n          );\n        } else if (this.state.instructScreenText === 6) {\n          text = (\n            <div className={styles.main}>\n            <p>\n            <span className={styles.center}>TRAINING I</span>\n            <br />\n            For your first training, after you indicated your answer <br />\n            we will show you how many aliens actually lived on the planet.\n            <br /><br />\n            This will make it possible for you to find out how the instrument relates to the alien population size.\n            <br /> <br />\n            Let's practice this!\n            <br /> <br />\n            <span className={styles.centerTwo}>\n            Press the [<strong>SPACEBAR</strong>] to start the training.\n            </span>\n            <span className={styles.centerTwo}>\n            [<strong>← BACK</strong>]\n            </span>\n            </p>\n            </div>\n          );\n        } else if (this.state.instructScreenText === 7) {\n          // IF YOU FAIL THE TEST, YOU RESTART\n          document.addEventListener(\"keyup\", this._handleInstructKey);\n          text = (\n            <div className={styles.main}>\n            <p>\n            <span className={styles.center}>TRAINING I</span>\n            <br />\n            Unforuntately, you only had {this.state.trialScore}/\n            {this.state.trialTotal} correct!\n            <br /> <br />\n            Let us go through the instructions and try again.\n            <br /> <br />\n            <span className={styles.centerTwo}>\n            Press the [<strong>SPACEBAR</strong>] to try again.\n            </span>\n            </p>\n            </div>\n          );\n        } else if (this.state.instructScreenText === 8) {\n          // IF YOU PASS THE TEST\n          document.addEventListener(\"keyup\", this._handleInstructKey);\n\n          text = (\n            <div className={styles.main}>\n            <p>\n            <span className={styles.center}>TRAINING I</span>\n            <br />\n            Great, you had {this.state.trialScore}/{this.state.trialTotal}\n            &nbsp;correct!\n            <br /> <br />\n            In summary, these outcome rooms lead to:\n            <span className={styles.centerTwo}>\n            <img\n            className={styles.stateSmall}\n            src={this.state.outcomePic[0]}\n            alt=\"outcome1\"\n            />\n            &nbsp;&nbsp; = &nbsp;+{\" \"}\n            <img\n            className={styles.coin}\n            src={this.state.img_coinSmall}\n            alt=\"coin\"\n            />\n            &nbsp;&nbsp; (gain)\n            <br />\n            <img\n            className={styles.stateSmall}\n            src={this.state.outcomePic[1]}\n            alt=\"outcome2\"\n            />\n            &nbsp;&nbsp; = &nbsp;-{\" \"}\n            <img\n            className={styles.coin}\n            src={this.state.img_coinSmall}\n            alt=\"coin\"\n            />\n            &nbsp;&nbsp; (lose)\n            <br />\n            <img\n            className={styles.stateSmall}\n            src={this.state.outcomePic[2]}\n            alt=\"outcome3\"\n            />\n            &nbsp;&nbsp; = &nbsp;none\n            </span>\n            <br />\n            You are ready to move on to the next training session.\n            <br /> <br />\n            <span className={styles.centerTwo}>\n            Press the [<strong>SPACEBAR</strong>] to continue.\n            </span>\n            </p>\n            </div>\n          );\n        }\n      } else if (this.state.instructScreen === false) {\n        // out of the instructions, this is the quiz\n        if (this.state.testScreen === true) {\n          document.removeEventListener(\"keyup\", this._handleInstructKey);\n\n          if (this.state.trialNum <= this.state.trialTotal) {\n            document.addEventListener(\"keyup\", this._handleTestKey);\n            text = <div> {this.testStart(this.state.trialNum)}</div>;\n          } else {\n            // finish the quiz\n            document.removeEventListener(\"keyup\", this._handleTestKey);\n            if (this.state.trialScore / this.state.trialTotal > 0.65) {\n              //if score more than 65%, move on to the next section\n              setTimeout(\n                function () {\n                  this.passMission();\n                }.bind(this),\n                0\n              );\n            } else {\n              //if you fail, then you do the quiz again...\n              setTimeout(\n                function () {\n                  this.missionOneRestart();\n                }.bind(this),\n                0\n              );\n            }\n          }\n        } else {\n          //Error..........\n          console.log(\"ERROR - LOOP BROKEN OR LEAKY\");\n        }\n      }\n    } else if (this.state.debug === true) {\n      document.addEventListener(\"keyup\", this._handleDebugKey);\n      text = (\n        <div className={styles.main}>\n        <p>\n        <span className={styles.center}>DEBUG MODE</span>\n        <br />\n\n        <span className={styles.centerTwo}>\n        Press the [<strong>SPACEBAR</strong>] to skip to next section.\n        </span>\n        </p>\n        </div>\n      );\n    }\n\n    return (\n      <div className={styles.cockpit}>\n      {/* <div className={styles.textblock}>{text}</div> */}\n      <div className={styles.textblock}>{this.testStart()}</div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(TrainingTask);\n"]},"metadata":{},"sourceType":"module"}