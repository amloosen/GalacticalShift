{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/sliderTraining.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\"; ////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SliderPractice extends React.Component {\n  constructor(props) {\n    super(props);\n    let practSgmMu = Array(trialTotal).fill().map(() => Array(3).fill(0));\n    let practRT = Array(trialTotal).fill().map(() => Array(3).fill(0));\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      taskSession: \"SliderPractice\",\n      practTotal: 7,\n      practNum: 1,\n      //adapt\n      practRT: practRT,\n      choiceTime0: 0,\n      trialTotal: trialTotal,\n      //adapt\n      // //\n      practSgmMu: practSgmMu,\n      timerCountDur: 10,\n      timePassed: false,\n      feedback: false,\n      mounted: 0,\n      trueValue: 50 // trialTime: null,\n      // trialScore: null,\n      // valElem1: null,\n      // valElem2: null,\n      // valElem3: null,\n      // colElem1: null,\n      // colElem2: null,\n      // colElem3: null\n\n    }; // this.displayFeedback = this.displayFeedback.bind(this)\n\n    /* prevents page from going to the right/left when arrows are pressed .*/\n\n    window.addEventListener('keydown', function (e) {\n      if (e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      } else if (e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  } /////////////////////////////////////////////////////////////////////////////////\n  // componentDidMount() {\n  //     setTimeout(\n  //       function() {\n  //         this.setState({\n  //           mounted: 1,\n  //         });\n  //       }\n  //       .bind(this),\n  //       5000\n  //     );\n  //   }\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n  /////////////////////////////////////////////////////////////////////////////////\n\n\n  render() {\n    if (this.state.practNum <= this.state.practTotal) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.cockpit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.quest_text(practNum)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          onSpacebarHit: result => {\n            this.saveSgmMu(result, choiceTime0);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this);\n    }\n  } /////////////////////////////////////////////////////////////////////////////////\n\n\n  saveSgmMu(result, time) {\n    let practSgmMu = this.state.practSgmMu;\n    let practRT = this.state.practRT;\n    let practNum = this.state.practNum;\n    practSgmMu[practNum - 1][1] = result.sgm;\n    practSgmMu[practNum - 1][2] = result.mu;\n    practRT[practNum - 1][0] = practNum;\n    practRT[practNum - 1][1] = time;\n    practRT[practNum - 1][2] = Math.round(performance.now());\n    practRT[practNum - 1][3] = practRT[practNum - 1][2] - time;\n    this.setState({\n      practSgmMu: practSgmMu,\n      practRT: practRT,\n      feedback: true,\n      practNum: practNum + 1\n    });\n  }\n\n  quest_text(practNum) {\n    if (practNum === 1) {\n      let text = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [\"Indicate the number 65 with high certainty.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 14\n      }, this);\n    } else if (practNum === 2) {\n      let text = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [\"Indicate the number 65 with high UNcertainty.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 14\n      }, this);\n    } else if (practNum === 3) {\n      let text = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [\"Indicate the number 25 with high certainty.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 12\n      }, this);\n    } else if (practNum === 4) {\n      let text = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [\"Indicate the number 25 with high UNcertainty.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 10\n      }, this);\n    } else if (practNum === 5) {\n      let text = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [\"What is your age? (If the scale refers to 0-100).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 8\n      }, this);\n    } else if (practNum === 6) {\n      let text = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [\"What is the population of the Connecticut? (If the scale refers to 0-100 Million).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 6\n      }, this);\n    } else if (practNum === 7) {\n      let text = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [\"What is the population of London? (If the scale refers to 0-100 Million).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 4\n      }, this);\n    }\n  }\n\n}\n\nexport default SliderPractice;","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/sliderTraining.js"],"names":["React","withRouter","DATABASE_URL","styles","Slider","SliderPractice","Component","constructor","props","practSgmMu","Array","trialTotal","fill","map","practRT","state","taskSession","practTotal","practNum","choiceTime0","timerCountDur","timePassed","feedback","mounted","trueValue","window","addEventListener","e","keyCode","target","document","body","preventDefault","render","cockpit","quest_text","result","saveSgmMu","time","sgm","mu","Math","round","performance","now","setState","text","questions"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\";\n////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\nclass SliderPractice extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let practSgmMu = Array(trialTotal).fill().map(() => Array(3).fill(0));\n    let practRT = Array(trialTotal).fill().map(() => Array(3).fill(0));\n\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      taskSession: \"SliderPractice\",\n      practTotal: 7,\n      practNum: 1,//adapt\n      practRT: practRT,\n      choiceTime0: 0,\n      trialTotal: trialTotal,//adapt\n      // //\n      practSgmMu: practSgmMu,\n      timerCountDur: 10,\n      timePassed: false,\n      feedback: false,\n      mounted: 0,\n      trueValue: 50\n      // trialTime: null,\n      // trialScore: null,\n      // valElem1: null,\n      // valElem2: null,\n      // valElem3: null,\n      // colElem1: null,\n      // colElem2: null,\n      // colElem3: null\n    };\n    // this.displayFeedback = this.displayFeedback.bind(this)\n    /* prevents page from going to the right/left when arrows are pressed .*/\n    window.addEventListener('keydown', function(e) {\n    if(e.keyCode === 37 && e.target === document.body) {\n      e.preventDefault();\n    }\n    else if(e.keyCode === 39 && e.target === document.body) {\n      e.preventDefault();\n    }\n    });\n  }\n/////////////////////////////////////////////////////////////////////////////////\n  // componentDidMount() {\n  //     setTimeout(\n  //       function() {\n  //         this.setState({\n  //           mounted: 1,\n  //         });\n  //       }\n  //       .bind(this),\n  //       5000\n  //     );\n  //   }\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n  /////////////////////////////////////////////////////////////////////////////////\n  render() {\n  if (this.state.practNum<=this.state.practTotal){\n       return (\n        <div className={styles.cockpit}>\n        <div>{this.quest_text(practNum)}</div>\n        <Slider onSpacebarHit={(result) => {this.saveSgmMu(result,choiceTime0);}}/>\n        </div>);\n}}\n/////////////////////////////////////////////////////////////////////////////////\n  saveSgmMu(result,time) {\n      let practSgmMu = this.state.practSgmMu;\n      let practRT = this.state.practRT;\n      let practNum = this.state.practNum;\n      practSgmMu[practNum-1][1] = result.sgm;\n      practSgmMu[practNum-1][2] = result.mu;\n      practRT[practNum-1][0] = practNum;\n      practRT[practNum-1][1] = time;\n      practRT[practNum-1][2] = Math.round(performance.now());\n      practRT[practNum-1][3] = practRT[practNum-1][2] - time;\n      this.setState({\n          practSgmMu: practSgmMu,\n          practRT: practRT,\n          feedback: true,\n          practNum: practNum+1,\n        });}\n\n        quest_text(practNum){\n          if (practNum===1){\n            let text = (\n             <div className={styles.questions}>\n             Indicate the number 65 with high certainty.\n             <br />\n             <br />\n             <br />\n             </div>)\n          } else if (practNum===2){\n            let text = (\n             <div className={styles.questions}>\n             Indicate the number 65 with high UNcertainty.\n             <br />\n             <br />\n             <br />\n             </div>)\n        } else if (practNum===3){\n          let text = (\n           <div className={styles.questions}>\n           Indicate the number 25 with high certainty.\n           <br />\n           <br />\n           <br />\n           </div>)\n      } else if (practNum===4){\n        let text = (\n         <div className={styles.questions}>\n         Indicate the number 25 with high UNcertainty.\n         <br />\n         <br />\n         <br />\n         </div>)\n    } else if (practNum===5){\n      let text = (\n       <div className={styles.questions}>\n       What is your age? (If the scale refers to 0-100).\n       <br />\n       <br />\n       <br />\n       </div>)\n  } else if (practNum===6){\n    let text = (\n     <div className={styles.questions}>\n     What is the population of the Connecticut? (If the scale refers to 0-100 Million).\n     <br />\n     <br />\n     <br />\n     </div>)\n} else if (practNum===7){\n  let text = (\n   <div className={styles.questions}>\n   What is the population of London? (If the scale refers to 0-100 Million).\n   <br />\n   <br />\n   <br />\n   </div>)\n}\n      }\n}\n\nexport default SliderPractice;\n"]},"metadata":{},"sourceType":"module"}