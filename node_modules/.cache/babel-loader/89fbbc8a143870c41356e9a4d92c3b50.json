{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTaskA.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport { ImageBackground, View, Image, StyleSheet, Text } from \"react-native\";\nimport { range } from \"lodash\";\nimport Slider from \"./slider\";\nimport OutcomeSlider from \"./sliderOutcome\";\nimport OutcomeSliderBar from \"./sliderOutcomeBar\";\nimport ElementsOneDisplay from \"./elementsOnedisplay\"; ////////////////////////////////////////////////////////////////////////////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction shuffle(array) {\n  let currentIndex = array.length,\n      randomIndex; // While there remain elements to shuffle...\n\n  while (currentIndex != 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--; // And swap it with the current element.\n\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n} /////////////////////////////////////////////////////////////////////////////////\n\n\nclass TrainingTaskA extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._handleTrainKey = event => {\n      var pressed;\n      var time_pressed;\n\n      switch (event.keyCode) {\n        case 37:\n          //    this is left arrow\n          pressed = 4;\n          this.trainCheck(pressed, time_pressed);\n          break;\n\n        case 39:\n          //    this is right arrow\n          key_pressed = 5;\n          this.trainCheck(pressed, time_pressed);\n          break;\n\n        default:\n      }\n    };\n\n    var nr_train_a_trial = 10; // var val_options = range(0, 110, 10);\n    // var val_tmp = val_options[~~(Math.random() * val_options.length)];\n\n    var val_options = range(0, 110, 10);\n    var random_val = [];\n\n    for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n      var val_tmp = val_options[~~(Math.random() * val_options.length)];\n\n      do {\n        var val_tmp = val_options[~~(Math.random() * val_options.length)];\n      } while (random_val[i - 1] === val_tmp); // make sure it changes color every time\n\n\n      random_val[i] = val_tmp;\n    }\n\n    var corr_pos = [1, 2]; //1 is left and 2 is right\n\n    shuffle(corr_pos);\n    console.log(corr_pos);\n    let trainAcc_tmp = Array(nr_train_a_trial).fill(0);\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"TrainingTaskA\",\n      traintrialNum: 1,\n      //adapt\n      traintrialTotal: nr_train_a_trial,\n      feedback: false,\n      mounted: 0,\n      rightCodeAns: [4, 4, 4, 4, 4, 5, 5, 5, 5],\n      valTrainElem: val_tmp,\n      trainAcc: trainAcc_tmp,\n      ansOne: 20,\n      ansTwo: random_val\n    }; // this.displayFeedback = this.displayFeedback.bind(this)\n\n    /* prevents page from going to the right/left when arrows are pressed .*/\n\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      } else if (e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  } /////////////////////////////////////////////////////////////////////////////////\n\n\n  handleAnswersLocal(key_pressed) {\n    var curText = this.state.instructScreenText;\n    var whichButton = key_pressed;\n\n    if (whichButton === 4) {\n      this.setState({\n        instructScreenText: curText - 1\n      });\n    } else if (whichButton === 5) {\n      this.setState({\n        instructScreenText: curText + 1\n      });\n    }\n  }\n\n  // componentDidMount() {\n  //     setTimeout(\n  //       function() {\n  //         this.setState({\n  //           mounted: 1,\n  //         });\n  //       }\n  //       .bind(this),\n  //       5000\n  //     );\n  //   }\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n  trainCheck(pressed, time_pressed) {\n    var traintrialNum = this.state.traintrialNum + 1;\n    var trainScore = this.state.trainScore;\n    var corAns = this.state.rightCodeAns[trialNum - 1];\n    var trainAcc = this.state.trainAcc;\n\n    if (pressed === corAns) {\n      trialCor = 1;\n      trainAcc[traintrialNum - 1] = 1;\n      trainScore = trainScore + 1;\n    } else {\n      trialCor = 0;\n      trainAcc[traintrialNum - 1] = 0;\n    }\n\n    this.setState({\n      trialKeypress: pressed,\n      trainScore: trainScore,\n      traintrialNum: traintrialNum,\n      trainAcc: trainAcc\n    });\n    setTimeout(function () {\n      this.trialSave();\n    }.bind(this), 5);\n  } /////////////////////////////////////////////////////////////////////////////////\n\n\n  render() {\n    setTimeout(() => {\n      this.setState({\n        timePassed: true\n      });\n    }, 100); //show elements\n\n    if (!this.state.timePassed) {\n      return /*#__PURE__*/_jsxDEV(ElementsOneDisplay, {\n        value: this.state.valTrainElem,\n        traintrialTotal: this.state.traintrialTotal,\n        traintrialNum: this.state.traintrialNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this);\n    } else {\n      // if (this.state.timePassed===true && this.state.feedback===false){\n      document.addEventListener(\"keyup\", this._handleInstructKey);\n      let choiceTime0 = Math.round(performance.now());\n\n      let text = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [\"How large is the alien population?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this);\n\n      let text2 = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: [\"The true population on the planet was \", 50, \" mio.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this);\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", this.state.feedback ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cockpit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: text2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cockpit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.main,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.container_1,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.right,\n                children: this.state.ansTwo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.left,\n                children: this.state.ansOne\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n} /////////////////////////////////////////////////////////////////////////////////\n\n\nexport default _c = withRouter(TrainingTaskA);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTaskA.js"],"names":["React","withRouter","DATABASE_URL","styles","ImageBackground","View","Image","StyleSheet","Text","range","Slider","OutcomeSlider","OutcomeSliderBar","ElementsOneDisplay","shuffle","array","currentIndex","length","randomIndex","Math","floor","random","TrainingTaskA","Component","constructor","props","_handleTrainKey","event","pressed","time_pressed","keyCode","trainCheck","key_pressed","nr_train_a_trial","val_options","random_val","i","val_tmp","corr_pos","console","log","trainAcc_tmp","Array","fill","state","traintrialNum","traintrialTotal","feedback","mounted","rightCodeAns","valTrainElem","trainAcc","ansOne","ansTwo","window","addEventListener","e","target","document","body","preventDefault","handleAnswersLocal","curText","instructScreenText","whichButton","setState","trainScore","corAns","trialNum","trialCor","trialKeypress","setTimeout","trialSave","bind","render","timePassed","_handleInstructKey","choiceTime0","round","performance","now","text","questions","text2","cockpit","main","container_1","right","left"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport { ImageBackground, View, Image, StyleSheet, Text } from \"react-native\";\nimport { range } from \"lodash\";\n\nimport Slider from \"./slider\";\nimport OutcomeSlider from \"./sliderOutcome\";\nimport OutcomeSliderBar from \"./sliderOutcomeBar\";\n\nimport ElementsOneDisplay from \"./elementsOnedisplay\";\n////////////////////////////////////////////////////////////////////////////////\nfunction shuffle(array) {\n  let currentIndex = array.length,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex != 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex],\n    ];\n  }\n\n  return array;\n}\n/////////////////////////////////////////////////////////////////////////////////\n\nclass TrainingTaskA extends React.Component {\n  constructor(props) {\n    super(props);\n\n    var nr_train_a_trial = 10;\n    // var val_options = range(0, 110, 10);\n    // var val_tmp = val_options[~~(Math.random() * val_options.length)];\n    var val_options = range(0, 110, 10);\n    var random_val = [];\n    for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n      var val_tmp = val_options[~~(Math.random() * val_options.length)];\n      do {\n        var val_tmp = val_options[~~(Math.random() * val_options.length)];\n      } while (random_val[i - 1] === val_tmp); // make sure it changes color every time\n      random_val[i] = val_tmp;\n    }\n\n    var corr_pos = [1, 2]; //1 is left and 2 is right\n    shuffle(corr_pos);\n    console.log(corr_pos);\n\n\n    let trainAcc_tmp = Array(nr_train_a_trial).fill(0)\n\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"TrainingTaskA\",\n      traintrialNum: 1, //adapt\n      traintrialTotal: nr_train_a_trial,\n      feedback: false,\n      mounted: 0,\n      rightCodeAns:[4,4,4,4,4,5,5,5,5],\n      valTrainElem: val_tmp,\n      trainAcc: trainAcc_tmp,\n      ansOne: 20,\n      ansTwo: random_val,\n    };\n    // this.displayFeedback = this.displayFeedback.bind(this)\n    /* prevents page from going to the right/left when arrows are pressed .*/\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      } else if (e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  }\n  /////////////////////////////////////////////////////////////////////////////////\n  handleAnswersLocal(key_pressed) {\n    var curText = this.state.instructScreenText;\n    var whichButton = key_pressed;\n\n    if (whichButton === 4) {\n      this.setState({ instructScreenText: curText - 1 });\n    } else if (whichButton === 5) {\n      this.setState({ instructScreenText: curText + 1 });\n    }\n  }\n\n  _handleTrainKey = (event) => {\n    var pressed;\n    var time_pressed;\n\n    switch (event.keyCode) {\n      case 37:\n        //    this is left arrow\n        pressed = 4;\n        this.trainCheck(pressed, time_pressed);\n        break;\n      case 39:\n        //    this is right arrow\n        key_pressed = 5;\n        this.trainCheck(pressed, time_pressed);\n        break;\n      default:\n    }\n  };\n  // componentDidMount() {\n  //     setTimeout(\n  //       function() {\n  //         this.setState({\n  //           mounted: 1,\n  //         });\n  //       }\n  //       .bind(this),\n  //       5000\n  //     );\n  //   }\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n  trainCheck(pressed, time_pressed) {\n    var traintrialNum = this.state.traintrialNum+1;\n    var trainScore = this.state.trainScore;\n    var corAns = this.state.rightCodeAns[trialNum - 1];\n    var trainAcc = this.state.trainAcc;\n\n    if (pressed === corAns) {\n      trialCor = 1;\n      trainAcc[traintrialNum - 1] = 1;\n      trainScore = trainScore + 1;\n    } else {\n      trialCor = 0;\n      trainAcc[traintrialNum - 1] = 0;\n    }\n\n    this.setState({\n      trialKeypress: pressed,\n      trainScore: trainScore,\n      traintrialNum: traintrialNum,\n      trainAcc: trainAcc\n    });\n\n    setTimeout(\n      function () {\n        this.trialSave();\n      }.bind(this),\n      5\n    );\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////\n  render() {\n    setTimeout(() => {\n      this.setState({ timePassed: true });\n    }, 100); //show elements\n    if (!this.state.timePassed) {\n      return (\n        <ElementsOneDisplay\n          value={this.state.valTrainElem}\n          traintrialTotal={this.state.traintrialTotal}\n          traintrialNum={this.state.traintrialNum}\n        />\n      );\n    } else {\n      // if (this.state.timePassed===true && this.state.feedback===false){\n      document.addEventListener(\"keyup\", this._handleInstructKey);\n      let choiceTime0 = Math.round(performance.now());\n      let text = (\n        <div className={styles.questions}>\n          How large is the alien population?\n          <br />\n          <br />\n          <br />\n        </div>\n      );\n\n      let text2 = (\n        <div className={styles.questions}>\n          The true population on the planet was {50} mio.\n          <br />\n          <br />\n          <br />\n        </div>\n      );\n\n      return (\n        <div>\n          {\" \"}\n          {this.state.feedback ? (\n            <div className={styles.cockpit}>\n              <div>{text2}</div>\n            </div>\n          ) : (\n            <div className={styles.cockpit}>\n              <div>{text}</div>\n              <br />\n              <div className={styles.main}>\n                <div className={styles.container_1}>\n                  <span className={styles.right}>{this.state.ansTwo}</span>\n                  <span className={styles.left}>{this.state.ansOne}</span>\n                </div>\n                <br />\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    }\n  }\n}\n  /////////////////////////////////////////////////////////////////////////////////\n\nexport default withRouter(TrainingTaskA);\n"]},"metadata":{},"sourceType":"module"}