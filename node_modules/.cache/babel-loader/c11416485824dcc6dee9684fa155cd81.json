{"ast":null,"code":"var _jsxFileName = \"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTask.js\";\nimport React, { useState, Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\";\nimport OutcomeSlider from \"./sliderOutcome\";\nimport ElementsFullDisplay from \"./elementsFulldisplay\";\nimport Cockpit from \"./img/CockpitBlank.jpg\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\"; ////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TrainingTask extends React.Component {\n  constructor(props) {\n    super(props);\n    let trialTotal = 9; //update later\n\n    let trialSgmMu = Array(trialTotal).fill().map(() => Array(3).fill(0));\n    let trialRT = Array(trialTotal).fill().map(() => Array(3).fill(0));\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"TrainingTask\",\n      trialNum: 1,\n      //adapt\n      trialRT: trialRT,\n      choiceTime0: 0,\n      trialTotal: trialTotal,\n      //adapt\n      // //\n      // trialSliderRT: null,\n      trialSgmMu: trialSgmMu,\n      timerCountDur: 10,\n      timePassed: false,\n      feedback: false,\n      mounted: 0 // trialTime: null,\n      // trialScore: null,\n      // valElem1: null,\n      // valElem2: null,\n      // valElem3: null,\n      // colElem1: null,\n      // colElem2: null,\n      // colElem3: null\n\n    }; // this.displayFeedback = this.displayFeedback.bind(this)\n\n    /* prevents page from going to the right/left when arrows are pressed .*/\n\n    window.addEventListener('keydown', function (e) {\n      if (e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      } else if (e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  } /////////////////////////////////////////////////////////////////////////////////\n  // componentDidMount() {\n  //     setTimeout(\n  //       function() {\n  //         this.setState({\n  //           mounted: 1,\n  //         });\n  //       }\n  //       .bind(this),\n  //       5000\n  //     );\n  //   }\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n  // displayFeedback() {\n  //   this.setState({feedback: true});\n  // }\n  /////////////////////////////////////////////////////////////////////////////////\n\n\n  render() {\n    setTimeout(() => {\n      this.setState({\n        timePassed: true\n      });\n    }, 100); //show elements\n\n    if (!this.state.timePassed) {\n      return /*#__PURE__*/_jsxDEV(ElementsFullDisplay, {\n        value1: 30,\n        value2: 40,\n        value3: 80,\n        trialTotal: this.state.trialTotal,\n        trialNum: this.state.trialNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 8\n      }, this);\n    } else {\n      // switch(this.state.feedback) {\n      if (this.state.feedback === false) {\n        let choiceTime0 = Math.round(performance.now());\n\n        let text = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.questions,\n          children: [\"How large is the alien population?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 8\n        }, this);\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cockpit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Slider, {\n            onSpacebarHit: result => {\n              this.saveSgmMu(result, choiceTime0);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 8\n        }, this);\n      } else {\n        var trueValue = 50;\n        let feedbackStartTime = Math.round(performance.now());\n\n        let text2 = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.questions,\n          children: [\"The true population on the planet was \", trueValue, \" mio.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 10\n        }, this);\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cockpit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: text2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Slider, {\n            onSpacebarHit: result => {\n              this.saveSgmMu(result, feedbackStartTime);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 12\n        }, this);\n      }\n    }\n  } /////////////////////////////////////////////////////////////////////////////////\n\n\n  saveSgmMu(result, time) {\n    let trialSgmMu = this.state.trialSgmMu;\n    let trialRT = this.state.trialRT;\n    let trialNum = this.state.trialNum;\n    trialSgmMu[trialNum - 1][1] = result.sgm;\n    trialSgmMu[trialNum - 1][2] = result.mu;\n    trialRT[trialNum - 1][0] = trialNum;\n    trialRT[trialNum - 1][1] = time;\n    trialRT[trialNum - 1][2] = Math.round(performance.now());\n    trialRT[trialNum - 1][3] = trialRT[trialNum - 1][2] - time;\n    this.setState({\n      trialSgmMu: trialSgmMu,\n      trialRT: trialRT,\n      feedback: true // trialNum : trialNum+1,\n      // outcome: show\n\n    });\n  }\n\n}\n\nexport default _c = withRouter(TrainingTask);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTask.js"],"names":["React","useState","Component","withRouter","DATABASE_URL","styles","Slider","OutcomeSlider","ElementsFullDisplay","Cockpit","CountdownCircleTimer","TrainingTask","constructor","props","trialTotal","trialSgmMu","Array","fill","map","trialRT","state","trialNum","choiceTime0","timerCountDur","timePassed","feedback","mounted","window","addEventListener","e","keyCode","target","document","body","preventDefault","render","setTimeout","setState","Math","round","performance","now","text","questions","cockpit","result","saveSgmMu","trueValue","feedbackStartTime","text2","time","sgm","mu"],"mappings":"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","sourcesContent":["import React, { useState, Component}  from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\";\nimport OutcomeSlider from \"./sliderOutcome\";\nimport ElementsFullDisplay from \"./elementsFulldisplay\";\nimport Cockpit from \"./img/CockpitBlank.jpg\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\n////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\nclass TrainingTask extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let trialTotal = 9;//update later\n\n    let trialSgmMu = Array(trialTotal).fill().map(() => Array(3).fill(0));\n    let trialRT = Array(trialTotal).fill().map(() => Array(3).fill(0));\n\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"TrainingTask\",\n      trialNum: 1,//adapt\n      trialRT: trialRT,\n      choiceTime0: 0,\n      trialTotal: trialTotal,//adapt\n      // //\n      // trialSliderRT: null,\n      trialSgmMu: trialSgmMu,\n      timerCountDur: 10,\n      timePassed: false,\n      feedback: false,\n      mounted: 0\n      // trialTime: null,\n      // trialScore: null,\n      // valElem1: null,\n      // valElem2: null,\n      // valElem3: null,\n      // colElem1: null,\n      // colElem2: null,\n      // colElem3: null\n    };\n    // this.displayFeedback = this.displayFeedback.bind(this)\n    /* prevents page from going to the right/left when arrows are pressed .*/\n    window.addEventListener('keydown', function(e) {\n    if(e.keyCode === 37 && e.target === document.body) {\n      e.preventDefault();\n    }\n    else if(e.keyCode === 39 && e.target === document.body) {\n      e.preventDefault();\n    }\n    });\n  }\n/////////////////////////////////////////////////////////////////////////////////\n  // componentDidMount() {\n  //     setTimeout(\n  //       function() {\n  //         this.setState({\n  //           mounted: 1,\n  //         });\n  //       }\n  //       .bind(this),\n  //       5000\n  //     );\n  //   }\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n\n  // displayFeedback() {\n  //   this.setState({feedback: true});\n  // }\n\n  /////////////////////////////////////////////////////////////////////////////////\n  render() {\n   setTimeout(() => {this.setState({timePassed: true})}, 100);//show elements\n   if (!this.state.timePassed){\n     return (\n       <ElementsFullDisplay  value1={30} value2={40} value3={80} trialTotal={this.state.trialTotal} trialNum={this.state.trialNum}/>\n     );\n   } else {\n    // switch(this.state.feedback) {\n    if (this.state.feedback===false){\n      let choiceTime0 = Math.round(performance.now());\n\n      let text = (\n       <div className={styles.questions}>\n       How large is the alien population?\n       <br />\n       <br />\n       <br />\n       </div>);\nreturn(<div className={styles.cockpit}>\n       <div>{text}</div>\n       <Slider onSpacebarHit={(result) => {this.saveSgmMu(result,choiceTime0);}}/>\n     </div>\n     );\n    } else {\n        var trueValue = 50;\n        let feedbackStartTime = Math.round(performance.now());\n        let text2 = (\n         <div className={styles.questions}>\n         The true population on the planet was {trueValue} mio.\n         <br />\n         <br />\n         <br />\n         </div>);\n         return (\n           <div className={styles.cockpit}>\n           <div>{text2}</div>\n           <Slider onSpacebarHit={(result) => {this.saveSgmMu(result,feedbackStartTime);}}/>\n\n           </div>\n         );}\n\n      }\n    }\n\n/////////////////////////////////////////////////////////////////////////////////\n\n  saveSgmMu(result,time) {\n      let trialSgmMu = this.state.trialSgmMu;\n      let trialRT = this.state.trialRT;\n      let trialNum = this.state.trialNum;\n      trialSgmMu[trialNum-1][1] = result.sgm;\n      trialSgmMu[trialNum-1][2] = result.mu;\n      trialRT[trialNum-1][0] = trialNum;\n      trialRT[trialNum-1][1] = time;\n      trialRT[trialNum-1][2] = Math.round(performance.now());\n      trialRT[trialNum-1][3] = trialRT[trialNum-1][2] - time;\n      this.setState({\n          trialSgmMu: trialSgmMu,\n          trialRT: trialRT,\n          feedback: true\n          // trialNum : trialNum+1,\n          // outcome: show\n        });\n\n    }\n}\n\n  export default withRouter(TrainingTask);\n"]},"metadata":{},"sourceType":"module"}