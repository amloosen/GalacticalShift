[{"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/index.js":"1","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/reportWebVitals.js":"2","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/App.js":"3","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/Questionnaires.js":"4","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/PathTask.js":"5","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/ExptTask.js":"6","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TutorTask.js":"7","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/EndPage.js":"8","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/config.js":"9","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/StartPage.js":"10","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/OutcomeTask.js":"11","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/slider.js":"12","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/elementBar.js":"13","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/elementsFulldisplay.js":"14","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/sliderOutcome.js":"15","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/sliderTraining.js":"16","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/sliderOutcomeBar.js":"17","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/SliderIntro.js":"18","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingIntroA.js":"19","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingIntroB.js":"20","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTaskA.js":"21","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTaskB.js":"22","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/elementsOnedisplay.js":"23","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingIntroC.js":"24","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTaskC.js":"25"},{"size":500,"mtime":1631192589730,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1631192589730,"results":"28","hashOfConfig":"27"},{"size":1834,"mtime":1633023984987,"results":"29","hashOfConfig":"27"},{"size":41619,"mtime":1631192589697,"results":"30","hashOfConfig":"27"},{"size":52799,"mtime":1631042847228,"results":"31","hashOfConfig":"27"},{"size":88099,"mtime":1631192589695,"results":"32","hashOfConfig":"27"},{"size":99445,"mtime":1631192589699,"results":"33","hashOfConfig":"27"},{"size":9592,"mtime":1631192589695,"results":"34","hashOfConfig":"27"},{"size":139,"mtime":1631815936985,"results":"35","hashOfConfig":"27"},{"size":13664,"mtime":1632672477246,"results":"36","hashOfConfig":"27"},{"size":36374,"mtime":1631042847227,"results":"37","hashOfConfig":"27"},{"size":3128,"mtime":1632740502499,"results":"38","hashOfConfig":"27"},{"size":534,"mtime":1631479901732,"results":"39","hashOfConfig":"27"},{"size":5085,"mtime":1633009699075,"results":"40","hashOfConfig":"27"},{"size":2085,"mtime":1632672864963,"results":"41","hashOfConfig":"27"},{"size":5445,"mtime":1632852063880,"results":"42","hashOfConfig":"27"},{"size":2323,"mtime":1632672858013,"results":"43","hashOfConfig":"27"},{"size":15878,"mtime":1632734750282,"results":"44","hashOfConfig":"27"},{"size":10939,"mtime":1633020321316,"results":"45","hashOfConfig":"27"},{"size":7088,"mtime":1633020372851,"results":"46","hashOfConfig":"27"},{"size":9298,"mtime":1633009792039,"results":"47","hashOfConfig":"27"},{"size":11482,"mtime":1633010239823,"results":"48","hashOfConfig":"27"},{"size":2343,"mtime":1632840567593,"results":"49","hashOfConfig":"27"},{"size":7243,"mtime":1633024791183,"results":"50","hashOfConfig":"27"},{"size":11464,"mtime":1633009518685,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"9xp6cx",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/index.js",[],["115","116"],"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/reportWebVitals.js",[],"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/App.js",[],"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/Questionnaires.js",[],"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/PathTask.js",[],["117","118"],"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/ExptTask.js",[],"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TutorTask.js",[],"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/EndPage.js",[],"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/config.js",[],"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/StartPage.js",["119","120"],"import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport * as Consent from \"survey-react\";\nimport \"../../node_modules/survey-react/survey.css\";\nimport queryString from \"query-string\"; // I need this for prolific\n\nimport \"./style/startStyle.css\";\n\n// Edit: 22/07/2021: Add in pre-load and caching of images here\nimport img_intro1 from \"./intro/ExamplePicture1.jpg\";\nimport img_intro2 from \"./intro/ExamplePicture2.jpg\";\nimport img_intro3 from \"./intro/ExamplePicture3.jpg\";\n/////////\nvar introPic = [img_intro1, img_intro2, img_intro3];\n\nclass StartPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Get data and time\n    var dateTime = new Date().toLocaleString();\n\n    var currentDate = new Date(); // maybe change to local\n    var date = currentDate.getDate();\n    var month = currentDate.getMonth(); //Be careful! January is 0 not 1\n    var year = currentDate.getFullYear();\n    var dateString = date + \"-\" + (month + 1) + \"-\" + year;\n    var timeString = currentDate.toTimeString();\n\n    // Gen a random 6 digit number for now\n    var prolific_id = Math.floor(100000 + Math.random() * 900000);\n    // var prolific_id = 120000; //for testing\n\n    // let url = this.props.location.search;\n    // let params = queryString.parse(url);\n    // // const prolific_id =\n    // //   params[\"PROLIFIC_PID\"] === undefined\n    // //     ? \"undefined\"\n    // //     : params[\"PROLIFIC_PID\"];\n    // // console.log(prolific_id);\n\n    // Set state\n    this.state = {\n      //    userID: userID,\n      userID: prolific_id,\n      date: dateString,\n      dateTime: dateTime,\n      startTime: timeString,\n      consentComplete: 0,\n    };\n\n    // update State when consent is complete\n    this.redirectToTarget = this.redirectToTarget.bind(this);\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n\n    var introPic = this.state.introPic;\n\n    [introPic].forEach((image) => {\n      new Image().src = image;\n    });\n\n    this.setState({\n      introPic: introPic,\n      mounted: 1,\n    });\n  }\n\n  componentWillUnmount() {\n    // fix Warning: Can't perform a React state update on an unmounted component\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n\n  redirectToTarget() {\n    this.setState({\n      consentComplete: 1,\n    });\n\n    this.props.history.push({\n      pathname: `/sliderTraining`,\n      state: {\n        userID: this.state.userID,\n        date: this.state.date,\n        startTime: this.state.startTime,\n        introPic: this.state.introPic,\n      },\n    });\n\n    console.log(\"UserID is: \" + this.state.userID);\n  }\n\n  render() {\n    Consent.StylesManager.applyTheme(\"default\");\n    // Full consent, non-NHS version\n    var json1 = {\n      title: null,\n      pages: [\n        {\n          questions: [\n            {\n              type: \"html\",\n              name: \"info\",\n              html: \"<b>Who is conducting this research study?</b>\",\n            },\n\n            {\n              type: \"html\",\n              name: \"info\",\n              html:\n                \"<p>This research is being conducted by the Wellcome Centre for Human Neuroimaging and the Max Planck UCL Centre for Computational Psychiatry and Ageing Research. The lead researchers for this project are Alisa Loosen, MSc, (PhD Candidate, a.loosen.17@ucl.ac.uk) and Tobias Hauser, Dr, (Principal Investigator, t.hauser@ucl.ac.uk). This study has been approved by the UCL Research Ethics Committee (project ID number 15301&#92;001) and funded by the Wellcome Trust.</p>\",\n            },\n\n            {\n              type: \"html\",\n              name: \"info\",\n              html: \"<b>What is the purpose of this study?</b>\",\n            },\n\n            {\n              type: \"html\",\n              name: \"info\",\n              html:\n                \"<p> We are interested in how the adult brain controls learning and decision-making. This research aims to provide insights into how the healthy brain works to help us understand the causes of a number of different medical conditions.</p>\",\n            },\n\n            {\n              type: \"html\",\n              name: \"info\",\n              html: \"<b>Who can participate in the study?</b>\",\n            },\n\n            {\n              type: \"html\",\n              name: \"info\",\n              html:\n                \"<p><ul><li>Adults aged above the age of <strong>18</strong></li><li>Fluent in English</li><li>Normal or corrected-to-normal vision</li></ul>If you take part in this study, you confirm that you meet the eligibity criteria.</p>\",\n            },\n\n            {\n              type: \"html\",\n              name: \"info\",\n              html: \"<b>What will happen to me if I take part?</b>\",\n            },\n\n            {\n              type: \"html\",\n              name: \"info\",\n              html:\n                \"<p>You will play one or more online computer tasks, which will last around approximately <strong>1 hour</strong>. <br/><br/>You will also be asked some questions about yourself, your feelings, background, attitudes and behaviour in your everyday life. <br/><br/>You will receive <strong>8.25 GBP</strong> for helping us.<br/>Plus, depending on your performance you can earn an <strong>additional bonus</strong> of up to <strong>1 GBP</strong>. <br/><br/>Remember, you are free to withdraw at any time without giving a reason.</p>\",\n            },\n\n            {\n              type: \"html\",\n              name: \"info\",\n              html:\n                \"<b>What are the possible disadvantages and risks of taking part?</b>\",\n            },\n\n            {\n              type: \"html\",\n              name: \"info\",\n              html:\n                \"<p> The task you complete does not pose any known risks. You will be asked to answer some questions about your mood and feelings, and we will provide information about ways to seek help should you feel affected by the issues raised by these questions.</p>\",\n            },\n\n            {\n              type: \"html\",\n              name: \"info\",\n              html: \"<b>What are the possible benefits of taking part?</b>\",\n            },\n\n            {\n              type: \"html\",\n              name: \"info\",\n              html:\n                \"<p>While there are no immediate benefits to taking part, your participation in this research will help us understand how people make decisions and this could have benefits for our understanding of mental health problems. </p>\",\n            },\n\n            { type: \"html\", name: \"info\", html: \"<b>Complaints</b>\" },\n\n            {\n              type: \"html\",\n              name: \"info\",\n              html:\n                \"<p>If you wish to complain or have any concerns about any aspect of the way you have been approached or treated by members of staff, then the research UCL complaints mechanisms are available to you. In the first instance, please talk to the researcher or the chief investigator (Dr Tobias Hauser, t.hauser@ucl.ac.uk) about your complaint. If you feel that the complaint has not been resolved satisfactorily, please contact the chair of the UCL Research Ethics Committee (ethics@ucl.ac.uk). <br/><br/>If you are concerned about how your personal data are being processed please contact the data controller who is UCL: data-protection@ucl.ac.uk. If you remain unsatisfied, you may wish to contact the Information Commissioner’s Office (ICO). Contact details, and details of data subject rights, are available on the ICO website <a href='https://ico.org.uk/for-organisations/data-protection-reform/overview-of-the-gdpr/individuals-rights' target='_blank'>here</a>. (opens in new tab) </p>\",\n            },\n\n            {\n              type: \"html\",\n              name: \"info\",\n              html: \"<b>What about my data?</b>\",\n            },\n\n            {\n              type: \"html\",\n              name: \"info\",\n              html:\n                \"<p>This ‘local’ privacy notice sets out the information that applies to this particular study. Further information on how UCL uses participant information can be found in our ‘general’ privacy notice:<br/><br/>For participants in research studies, click <a href='https://www.ucl.ac.uk/legal-services/sites/legal-services/files/ucl_general_research_participant_privacy_notice_v1.pdf' target='_blank'>here</a>. (opens in new tab)<br/><br/>The information that is required to be provided to participants under data protection legislation (GDPR and DPA 2018) is provided across both the ‘local’ and ‘general’ privacy notices.<br/><br/>To help future research and make the best use of the research data you have given us (such as answers to questionnaires) we may keep your research data indefinitely and share these. The data we collect will be shared and held as follows:<ul><li> In publications, your data will be anonymised, so you cannot be identified. </li><li> In public databases, your data will be anonymised. </li><li>We do not collect any personal data that could be used to identify you. </li><li> Personal data is any information that could be used to identify you, such as your User ID. When we collect your data, your User ID will be replaced with a nonidentifiable random ID number. No personally identifying data will be stored.</li></ul>The legal basis used to process your personal data will be the provision of public task (this means that the research you are taking part in is deemed to be in the public interest). The legal basis used to process special category data (i.e. ethnicity) will be for scientific research purposes. We will follow the UCL and legal guidelines to safeguard your data. If you change your mind and withdraw your consent to participate in this study you can contact us via Prolific. However, we collect all data in an anonymised form, which is why this data cannot be destroyed, withdrawn or recalled. <br/><br/>If there are any queries or concerns please do not hesitate to contact Ms Alisa Loosen (a.loosen.17@ucl.ac.uk).</p>\",\n            },\n          ],\n        },\n        {\n          questions: [\n            {\n              type: \"checkbox\",\n              name: \"checkbox1\",\n              title:\n                \"I have read the information above, and understand what the study involves.\",\n              isRequired: true,\n              choices: [\"Yes\"],\n            },\n\n            {\n              type: \"checkbox\",\n              name: \"checkbox2\",\n              title:\n                \"I consent to the processing of my personal information (e.g. User ID) for the purposes of this research study. I understand that such information will remain confidential and will be handled in accordance with all applicable data protection legislation and ethical standards in research. These data will only be accessible to the study team and individuals from the University and Funder who are responsible for monitoring and audits.\",\n              isRequired: true,\n              choices: [\"Yes\"],\n            },\n\n            {\n              type: \"checkbox\",\n              name: \"checkbox3\",\n              title:\n                \"I understand that my anonymised personal data can be shared with others for future research, shared in public databases and in scientific reports.\",\n              isRequired: true,\n              choices: [\"Yes\"],\n            },\n\n            {\n              type: \"checkbox\",\n              name: \"checkbox4\",\n              title:\n                \"I understand that I am free to withdraw from this study at any time without giving a reason and this will not affect my future medical care or legal rights.\",\n              isRequired: true,\n              choices: [\"Yes\"],\n            },\n\n            {\n              type: \"checkbox\",\n              name: \"checkbox5\",\n              title:\n                \"I understand the potential benefits and risks of participating, the support available to me should I become distressed during the research, and who to contact if I wish to lodge a complaint.\",\n              isRequired: true,\n              choices: [\"Yes\"],\n            },\n\n            {\n              type: \"checkbox\",\n              name: \"checkbox6\",\n              title:\n                \"I understand the inclusion and exclusion criteria in the Information Sheet and as explained to me by the researcher. I confirm that I do not fall under the exclusion criteria.\",\n              isRequired: true,\n              choices: [\"Yes\"],\n            },\n\n            {\n              type: \"checkbox\",\n              name: \"checkbox7\",\n              title:\n                \"I agree that the research project named above has been explained to me to my satisfaction and I agree to take part in this study.\",\n              isRequired: true,\n              choices: [\"Yes\"],\n            },\n          ],\n        },\n      ],\n    };\n\n    if (this.state.consentComplete === 0) {\n      return (\n        <div className=\"placeMiddle\">\n          <div className=\"placeMiddleHeader\">\n            INFORMATION FOR THE PARTICIPANT\n          </div>\n          <br />\n          Please read this information page carefully. If you are happy to\n          proceed, please check the boxes on the second page of this form to\n          consent to this study proceeding. Please note that you cannot proceed\n          to the study unless you give your full consent.\n          <br />\n          <br />\n          <Consent.Survey\n            json={json1}\n            showCompletedPage={false}\n            onComplete={this.redirectToTarget}\n          />\n        </div>\n      );\n    } else {\n      // this.redirectToTarget();\n      console.log(\"ERROR This should have given consent.\");\n      return null;\n    }\n  }\n}\n\nexport default withRouter(StartPage);\n","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/OutcomeTask.js",[],["121","122"],"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/slider.js",["123"],"import { range } from \"lodash\";\nimport normalPdf from \"normal-pdf\";\nimport { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nconst Slider = ({ onSpacebarHit = () => {} }) => {\n  const [mu, setMu] = useState(50);\n  const [sgm, setSgm] = useState(30);\n\n  const xValues = range(0, 100.5, 0.5);\n  const yValues = xValues.map((x) => normalPdf(x, mu, sgm));\n  const yValuesAdapt = yValues.map(function (element) {\n    return element * 1000;\n  });\n\n  const data = {\n    series: [{ data: yValuesAdapt }],\n    options: {\n      chart: {\n        toolbar: {\n          show: false,\n        },\n        height: 350,\n        type: \"line\",\n        zoom: {\n          enabled: false,\n        },\n      },\n      colors: [\"#d2eaf2\"],\n      fill: { colors: [\"#d2eaf2\"] },\n      dataLabels: {\n        enabled: false,\n      },\n      stroke: {\n        curve: \"smooth\",\n      },\n      markers: {\n        size: 0,\n      },\n      yaxis: {\n        min: 0,\n        labels: { show: false },\n        axisTicks: {\n          show: false,\n        },\n        lines: {\n          show: false,\n        },\n      },\n      xaxis: {\n        color: \"#d2eaf2\",\n        tickAmount: 5,\n        overwriteCategories: [\"0\", \"25\", \"50\", \"75\", \"100\"],\n        lines: {\n          show: false,\n        },\n        axisTicks: {\n          color: \"#e7e6e2\",\n          width: 3,\n          height: 10,\n        },\n        axisBorder: {\n          show: true,\n          color: \"#e7e6e2\",\n          height: 4,\n          width: \"100%\",\n        },\n        labels: {\n          rotate: 0,\n          style: {\n            fontSize: \"20px\",\n            colors: [\"#e7e6e2\", \"#e7e6e2\", \"#e7e6e2\", \"#e7e6e2\", \"#e7e6e2\"],\n            offsetX: 0,\n            offsetY: 0,\n          },\n        },\n      },\n      grid: { show: false },\n      tooltip: { enabled: false },\n    },\n  };\n  //\n\n  //\n  function muPlus(event) {\n    if (mu === 100) {\n      setMu(mu);\n    } else {\n      setMu(mu + 1);\n    }\n  }\n\n  function muMinus(event) {\n    if (mu === 0) {\n      setMu(mu);\n    } else {\n      setMu(mu - 1);\n    }\n  }\n  function sgmPlus(event) {\n    setSgm(sgm + 10);\n  }\n  function sgmMinus(event) {\n    if (sgm <= 10) {\n      setSgm(sgm);\n    } else setSgm(sgm - 5);\n  }\nfunction resetSlider(event){\n    setSgm(30);\n    setMu(50);\n  }\n\n  useEffect(() => {\n    const handler = (event) => {\n      // do something with data\n      if (event.keyCode === 32) {\n        onSpacebarHit({ mu, sgm });\n        resetSlider();\n      } else if (event.keyCode === 39) {\n        muPlus();\n      } else if (event.keyCode === 37) {\n        muMinus();\n      } else if (event.keyCode === 38) {\n        sgmPlus();\n      } else if (event.keyCode === 40) {\n        sgmMinus();\n      }\n    };\n    document.addEventListener(\"keydown\", handler);\n    return () => {\n      document.removeEventListener(\"keydown\", handler);\n    };\n  }, [onSpacebarHit, mu, sgm]);\n\n  return (\n    <div>\n      <ReactApexChart\n        options={data.options}\n        series={data.series}\n        type=\"line\"\n        height={350}\n        width={700}\n        align=\"center\"\n      />\n    </div>\n  );\n};\n\nexport default Slider;\n","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/elementBar.js",[],"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/elementsFulldisplay.js",["124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140"],"import React from 'react';\nimport { render } from \"react-dom\";\nimport styles from \"./style/taskStyle.module.css\";\nimport { ImageBackground, View, Image, StyleSheet,Text } from \"react-native\";\nimport ElementBar from './elementBar';\n\nimport Cover from \"./img/cover.jpg\";\nimport Blue from \"./img/stimuli3_blue.jpg\";\nimport Red from \"./img/stimuli3_red.jpg\";\nimport Green from \"./img/stimuli3_green.jpg\";\nimport Yellow from \"./img/stimuli3_yellow.jpg\";\nimport \"./style/barstyles.css\";\n//\n//\nvar trialNum = 1;\n\nclass ElementsFullDisplay extends React.Component{\n  constructor(props) {\n    super(props);\n    var trial_per_block = 100;//to be changed\n\n\n    /* data to be saved .*/\n  var times_element1 = Array(1).fill().map(() => Array(3).fill(0));\n  var times_element2 = Array(1).fill().map(() => Array(3).fill(0));\n  var times_element3 = Array(1).fill().map(() => Array(3).fill(0));\n\n\n  this.state  = {\n    img1: Cover,\n    img2: Cover,\n    img3: Cover,\n    // value1: 70,\n    // value2: 40,\n    // value3: 50,\n    show1: null,\n    show2: null,\n    show3: null,\n    times_element1: times_element1,\n    times_element2: times_element2,\n    times_element3: times_element3\n  };\n\n  this.mouseOver = this.mouseOver.bind(this);\n  this.mouseOut = this.mouseOut.bind(this);\n\n  /* prevents page from going down when space bar is hit .*/\n  window.addEventListener(\"keydown\", function (e) {\n    if (e.keyCode === 32 && e.target === document.body) {\n      e.preventDefault();\n    }\n  });\n  }\n\n  mouseOver(elNr) {\n    if (elNr === 1){\n         this.state.times_element1.push([Math.round(performance.now()),0,0]);\n         this.setState({\n           img1: Blue,\n           show1: 1,\n         });} else if (elNr === 2){\n        this.state.times_element2.push([Math.round(performance.now()),0,0]);\n        this.setState({\n          img2: Red,\n          show2: 1,\n        });} else if (elNr === 3){\n       this.state.times_element3.push([Math.round(performance.now()),0,0]);\n       this.setState({\n         img3: Yellow,\n         show3: 1,\n       });}\n     }\n\n     mouseOut(elNr) {\n       if (elNr === 1){\n         this.state.times_element1[this.state.times_element1.length-1][1] =Math.round(performance.now());\n         this.state.times_element1[this.state.times_element1.length-1][2] = this.state.times_element1[this.state.times_element1.length-1][1]-this.state.times_element1[this.state.times_element1.length-1][0];\n         this.setState({\n           img1: Cover,\n           show1: null\n         });} else if (elNr === 2){\n           this.state.times_element2[this.state.times_element2.length-1][1] =Math.round(performance.now());\n           this.state.times_element2[this.state.times_element2.length-1][2] = this.state.times_element2[this.state.times_element2.length-1][1]-this.state.times_element2[this.state.times_element2.length-1][0];\n           this.setState({\n             img2: Cover,\n             show2: null\n           });} else if (elNr === 3){debugger;\n             this.state.times_element3[this.state.times_element3.length-1][1] =Math.round(performance.now());\n             this.state.times_element3[this.state.times_element3.length-1][2] = this.state.times_element3[this.state.times_element3.length-1][1]-this.state.times_element3[this.state.times_element3.length-1][0];\n             this.setState({\n               img3: Cover,\n               show3: null\n             });}\n         }\n\n  render() {\n    return (<div className={styles.cockpit}>\n      <div className={styles.main}>\n      <span className={styles.centerTwo}>\n      <View style={styles.container}>\n      <img className={styles.elementsize }\n      src={this.state.img1}\n      onMouseOver={(elNr) => this.mouseOver(1)}\n      onMouseOut={(elNr) => this.mouseOut(1)}\n      />\n      {this.state.show1? <div className={styles.overlay}>\n      <ElementBar progress={this.props.value1} />\n      </div>: null}\n      {this.state.show1? <div className={styles.overlaytext}>{this.props.value1}%\n      </div>: null}\n      </View>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      <View style={styles.container}>\n      <img className={styles.elementsize }\n      src={this.state.img2}\n      onMouseOver={(elNr) => this.mouseOver(2)}\n      onMouseOut={(elNr) => this.mouseOut(2)}\n      />\n      {this.state.show2? <div className={styles.overlay}>\n      <ElementBar progress={this.props.value2} />\n      </div>: null}\n      {this.state.show2? <div className={styles.overlaytext}>{this.props.value2}%\n      </div>: null}\n      </View>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      <View style={styles.container}>\n      <img className={styles.elementsize}\n      src={this.state.img3}\n      onMouseOver={(elNr) => this.mouseOver(3)}\n      onMouseOut={(elNr) => this.mouseOut(3)}\n      />\n      {this.state.show3? <div className={styles.overlay}>\n      <ElementBar progress={this.props.value3}/>\n      </div>: null}\n      {this.state.show3? <div className={styles.overlaytext}>{this.props.value3}%\n      </div>: null}\n      </View>\n      </span>\n      </div>\n      </div>\n\n    );\n  }\n}\n\nexport default ElementsFullDisplay ;\n","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/sliderOutcome.js",["141","142"],"import { range } from \"lodash\";\nimport normalPdf from \"normal-pdf\";\nimport { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nconst OutcomeSlider = (props) => {\n  const xValues = range(0, 100, 0.5);\n  const yValues = xValues.map((x) => normalPdf(x, props.mu, props.sgm));\n  const yValuesAdapt = yValues.map(function (element) {\n    return element * 1000;\n  });\n\n  const data = {\n    series: [{ data: yValuesAdapt }],\n    options: {\n      chart: {\n        toolbar: {\n          show: false,\n        },\n        type: \"line\",\n        zoom: {\n          enabled: false,\n        },\n      },\n      colors: [\"#d2eaf2\"],\n      fill: { colors: [\"#d2eaf2\"] },\n      dataLabels: {\n        enabled: false,\n      },\n      stroke: {\n        curve: \"smooth\",\n      },\n      markers: {\n        size: 0,\n      },\n      yaxis: {\n        min: 0,\n        labels: { show: false },\n        axisTicks: {\n          show: false,\n        },\n        lines: {\n          show: false,\n        },\n      },\n      xaxis: {\n        color: \"#1C00ff00\",\n        show: false,\n        tickAmount: 5,\n        overwriteCategories: [\"0\", \"25\", \"50\", \"75\", \"100\"],\n        lines: {\n          show: false,\n        },\n        axisTicks: {\n          show: false,\n        },\n        axisBorder: {\n          show: false,\n          color: \"#1C00ff00\",\n          opacity: 1,\n          height: 4,\n          width: \"100%\",\n        },\n        labels: {\n          rotate: 0,\n          style: {\n            fontSize: \"20px\",\n            colors: [\n              \"#1C00ff00\",\n              \"#1C00ff00\",\n              \"#1C00ff00\",\n              \"#1C00ff00\",\n              \"#1C00ff00\",\n            ],\n            offsetX: 0,\n            offsetY: 0,\n          },\n        },\n      },\n      grid: { show: false },\n      tooltip: { enabled: false },\n    },\n  };\n  //\n\n  return (\n    <div>\n      <ReactApexChart\n        options={data.options}\n        series={data.series}\n        type=\"line\"\n        height={350}\n        width={700}\n        align=\"center\"\n      />\n    </div>\n  );\n};\n\nexport default OutcomeSlider;\n","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/sliderTraining.js",["143","144"],"import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport Slider from \"./slider\";\n/////////////////////////////////////////////////////////////////////////////////\nclass SliderPractice extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let practSgmMu = Array(7)\n      .fill()\n      .map(() => Array(3).fill(0));\n    let practRT = Array(7)\n      .fill()\n      .map(() => Array(3).fill(0));\n\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      taskSession: \"SliderPractice\",\n      practTotal: 7,\n      practNum: 1, //adapt\n      practRT: practRT,\n      choiceTime0: 0,\n      practSgmMu: practSgmMu,\n      timerCountDur: 10,\n      timePassed: false,\n      mounted: 0,\n      trueValue: 50,\n    };\n    this.redirectToNextStage = this.redirectToNextStage.bind(this);\n\n    /* prevents page from going to the right/left when arrows are pressed .*/\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      } else if (e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  }\n  /////////////////////////////////////////////////////////////////////////////////\n  componentDidMount() {\n    setTimeout(\n      function () {\n        this.setState({\n          mounted: 1,\n        });\n      }.bind(this),\n      5000\n    );\n  }\n\n  componentWillUnmount() {\n  // fix Warning: Can't perform a React state update on an unmounted component\n  this.setState = (state, callback) => {\n    return;\n  };\n}\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n  /////////////////////////////////////////////////////////////////////////////////\n  render() {\n    if (this.state.practNum <= this.state.practTotal) {\n      let choiceTime0 = Math.round(performance.now());\n      return (\n        <div className={styles.cockpit}>\n          <div> {this.quest_text(this.state.practNum)} </div>{\" \"}\n          <Slider\n            onSpacebarHit={(result) => {\n              this.saveSgmMu(result, choiceTime0)\n            }}\n          />{\" \"}\n        </div>\n      );\n    } else {\n      this.redirectToNextStage();\n    }\n  }\n  /////////////////////////////////////////////////////////////////////////////////\n  saveSgmMu(result, time) {\n    let practSgmMu = this.state.practSgmMu;\n    let practRT = this.state.practRT;\n    let practNum = this.state.practNum;\n    practSgmMu[practNum - 1][1] = result.sgm;\n    practSgmMu[practNum - 1][2] = result.mu;\n    practRT[practNum - 1][0] = practNum;\n    practRT[practNum - 1][1] = time;\n    practRT[practNum - 1][2] = Math.round(performance.now());\n    practRT[practNum - 1][3] = practRT[practNum - 1][2] - time;\n    this.setState({\n      practSgmMu: practSgmMu,\n      practRT: practRT,\n      practNum: practNum + 1,\n    });\n  }\n\n  quest_text(practNum) {\n    if (practNum === 1) {\n      return (\n        <div className={styles.questions}>\n          Please indicate the number 65 with high certainty. <br />\n          <br />\n          <br />\n        </div>\n      );\n    } else if (practNum === 2) {\n      return (\n        <div className={styles.questions}>\n          Please indicate the number 65 with high UNcertainty. <br />\n          <br />\n          <br />\n        </div>\n      );\n    } else if (practNum === 3) {\n      return (\n        <div className={styles.questions}>\n          Please indicate the number 25 with high certainty. <br />\n          <br />\n          <br />\n        </div>\n      );\n    } else if (practNum === 4) {\n      return (\n        <div className={styles.questions}>\n          Please indicate the number 25 with high UNcertainty. <br />\n          <br />\n          <br />\n        </div>\n      );\n    } else if (practNum === 5) {\n      return (\n        <div className={styles.questions}>\n          What is your age ? (If the scale refers to 0 - 100). <br />\n          <br />\n          <br />\n        </div>\n      );\n    } else if (practNum === 6) {\n      return (\n        <div className={styles.questions}>\n          What is the population of Connecticut ?\n          <br />\n          (If the scale refers to 0 - 100 Million). <br />\n          <br />\n        </div>\n      );\n    } else if (practNum === 7) {\n      return (\n        <div className={styles.questions}>\n          What is the population of New York City <br />\n          (If the scale refers to 0 - 100 Million). <br />\n          <br />\n        </div>\n      );\n    }\n  }\n\n  redirectToNextStage() {\n\n    this.props.history.push({\n      pathname: `/TrainingIntroA`,\n      state: {\n        // userID: this.state.userID,\n        // date: this.state.date,\n        // startTime: this.state.startTime,\n      },\n    });\n\n    // console.log(\"UserID is: \" + this.state.userID);\n  }\n}\n\nexport default SliderPractice;\n","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/sliderOutcomeBar.js",["145","146"],"import { range } from \"lodash\";\nimport normalPdf from \"normal-pdf\";\nimport { useEffect, useState } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nconst OutcomeSliderBar = (props) => {\n  const trueValue = props.value;\n  const xValues = range(0, 100, 0.5);\n  const yValues = xValues.map((x) => normalPdf(x, props.mu, props.sgm));\n  const yValuesAdaptNew = yValues.map(function (element) {\n    return element * 1000;\n  });\n  const xValuesOutcome = new Array(200).fill(null);\n  xValuesOutcome[trueValue * 2] = yValuesAdaptNew[trueValue * 2];\n\n  const data = {\n    series: [\n      { data: yValuesAdaptNew, type: \"line\" },\n      { data: xValuesOutcome, type: \"column\" },\n    ],\n    options: {\n      chart: {\n        toolbar: {\n          show: false,\n        },\n        type: \"line\",\n        zoom: {\n          enabled: false,\n        },\n      },\n      colors: [\"#1C00ff00\", \"#DAA520\"],\n      fill: { colors: [\"#1C00ff00\", \"#DAA520\"] },\n      dataLabels: {\n        enabled: false,\n      },\n      stroke: {\n        curve: \"smooth\",\n      },\n      markers: {\n        size: 0,\n      },\n      yaxis: {\n        min: 0,\n        labels: { show: false },\n        axisTicks: {\n          show: false,\n        },\n        lines: {\n          show: false,\n        },\n      },\n      xaxis: {\n        color: \"#d2eaf2\",\n        // min: 0,\n        // max: 100,\n        tickAmount: 5,\n        overwriteCategories: [\"0\", \"25\", \"50\", \"75\", \"100\"],\n        lines: {\n          show: false,\n        },\n        axisTicks: {\n          color: \"#e7e6e2\",\n          width: 3,\n          height: 10,\n        },\n        axisBorder: {\n          show: true,\n          color: \"#e7e6e2\",\n          height: 4,\n          width: \"100%\",\n        },\n        labels: {\n          rotate: 0,\n          style: {\n            fontSize: \"20px\",\n            colors: [\"#e7e6e2\", \"#e7e6e2\", \"#e7e6e2\", \"#e7e6e2\", \"#e7e6e2\"],\n            offsetX: 0,\n            offsetY: 0,\n          },\n        },\n      },\n      grid: { show: false },\n      tooltip: { enabled: false },\n      legend: { show: false },\n    },\n  };\n  //\n\n  return (\n    <div>\n      <ReactApexChart\n        options={data.options}\n        series={data.series}\n        type=\"line\"\n        height={350}\n        width={700}\n        align=\"center\"\n      />\n    </div>\n  );\n};\nexport default OutcomeSliderBar;\n","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/SliderIntro.js",["147","148"],"import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { DATABASE_URL } from \"./config\";\n\nimport styles from \"./style/taskStyle.module.css\";\nimport Cockpit from \"./img/CockpitBlank.jpg\";\n\nimport img_spacebar from \"./intro/spacebar.png\";\nimport img_up from \"./intro/up.png\";\nimport img_down from \"./intro/down.png\";\nimport img_left from \"./intro/left.png\";\nimport img_right from \"./intro/right.png\";\nimport img_slider1 from \"./intro/SliderExamplePicture1.png\";\nimport img_slider2 from \"./intro/SliderExamplePoint.png\";\nimport img_slider3 from \"./intro/SliderExampleLine.png\";\nimport img_slider4 from \"./intro/SliderExamplePicture2.png\";\nimport img_slider5 from \"./intro/SliderExamplePicture3.png\";\nimport img_slider6 from \"./intro/SliderExamplePicture4.png\";\nimport img_slider7 from \"./intro/SliderExamplePicture5.png\";\n/////////////////////////////////////////////////////////////////////////////////\n\nclass SliderIntro extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // var user_info = this.props.location.state.user_info;\n\n    var currentDate = new Date();\n    var introSliderStartTime = currentDate.toTimeString();\n\n    /////////////////////////////////////////////////////////////////////////////////\n    // SET COMPONENT STATES\n    this.state = {\n      // userID: userID,\n      date: currentDate,\n      startTime: introSliderStartTime,\n      sectionTime: introSliderStartTime,\n      taskSessionTry: 1,\n      taskSession: \"SliderIntro\",\n      instructScreenText: 1,\n      instructScreen: true,\n    };\n\n    this.handleInstructLocal = this.handleInstructLocal.bind(this);\n\n    /* prevents page from going down when space bar is hit .*/\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 32 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  }\n  /////////////////////////////////////////////////////////////////////////////////\n  // END COMPONENT STATE\n\n  // This handles instruction screen within the component USING KEYBOARD\n  handleInstructLocal(key_pressed) {\n    var curText = this.state.instructScreenText;\n    var whichButton = key_pressed;\n\n    if (whichButton === 4 && curText > 1) {\n      this.setState({ instructScreenText: curText - 1 });\n    } else if (whichButton === 5 && curText < 12) {\n      this.setState({ instructScreenText: curText + 1 });\n    } else if (curText === 12 && whichButton === 10) {\n      setTimeout(\n        function () {\n          this.nextPart();\n        }.bind(this),\n        0\n      );\n    }\n  }\n\n  // handle key key_pressed\n  _handleInstructKey = (event) => {\n    var key_pressed;\n\n    switch (event.keyCode) {\n      case 37:\n        //    this is left arrow\n        key_pressed = 4;\n        this.handleInstructLocal(key_pressed);\n        break;\n      case 39:\n        //    this is right arrow\n        key_pressed = 5;\n        this.handleInstructLocal(key_pressed);\n        break;\n      case 32:\n        //    this is SPACEBAR\n        key_pressed = 10;\n        this.handleInstructLocal(key_pressed);\n        break;\n      default:\n    }\n  };\n\n  /////////////////////////////////////////////////////////////////////////////////\n  // END COMPONENT PROPS\n\n  nextPart() {\n    document.removeEventListener(\"keyup\", this._handleInstructKey);\n    document.removeEventListener(\"keyup\", this._handleDebugKey);\n    this.props.history.push({\n      pathname: `/sliderTraining`,\n      state: {\n        userID: this.state.userID,\n        date: this.state.date,\n        startTime: this.state.startTime,\n      },\n    });\n  }\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  render() {\n    let text;\n    if (this.state.instructScreen === true) {\n      if (this.state.instructScreenText === 1) {\n        document.addEventListener(\"keyup\", this._handleInstructKey);\n        text = (\n          <div className={styles.main}>\n            <p>\n              <br />\n              <span className={styles.center}>Welcome to our study!</span>\n              <br />\n              In the following game, you will use a special response slider.\n              <br />\n              With this slider you can indicate both <br />\n              (1) a <strong>number</strong> we are asking for and <br />\n              (2) how <strong>certain</strong> you are about this number.\n              <br />\n              <br />\n              We will now show you how this slider works and give you a chance\n              to get used to it.\n              <br />\n              <br />\n              <br /> <br />\n              <span className={styles.center}>\n                <i>(Use the ← → keys to navigate the pages.)</i>\n              </span>\n              <span className={styles.center}>\n                [<strong>NEXT →</strong>]\n              </span>\n            </p>\n          </div>\n        );\n      } else if (this.state.instructScreenText === 2) {\n        text = (\n          <div className={styles.main}>\n            <p>\n              <br />\n              <br />\n              When you make an estimate, such as how expensive something is, you\n              might be more or less certain about this estimate's accuracy.\n              <br />\n              <br />\n              This means, sometimes you might be certain (sure.) that your\n              estimate is correct and other times you might be very uncertain\n              (unsure) about your estimate.\n              <br />\n              <br />\n              <br /> <br />\n              <span className={styles.center}>\n                [<strong>← BACK</strong>] [<strong>NEXT →</strong>]\n              </span>\n            </p>\n          </div>\n        );\n      } else if (this.state.instructScreenText === 3) {\n        text = (\n          <div className={styles.main}>\n            <p>\n              <br />\n              <br />\n              For instance a scenario might be:\n              <br />\n              <br />\n              <li>Your estimate:</li>\n              “The ice cream will cost £2”\n              <br />\n              <br />\n              <li>Your certainty in your estimate:</li>\n              “I am very certain that the ice-cream will cost £2 since this is\n              what I paid last time I went to this shop”\n              <br /> <br />\n              or <br />\n              <br />\n              “I am very uncertain how much the ice-cream will actually cost\n              because I have never been to this shop before.”\n              <br />\n              <br />\n              <br /> <br />\n              <span className={styles.center}>\n                [<strong>← BACK</strong>] [<strong>NEXT →</strong>]\n              </span>\n            </p>\n          </div>\n        );\n      } else if (this.state.instructScreenText === 4) {\n        text = (\n          <div className={styles.main}>\n            <p>\n              <br />\n              This is the slider you will use:\n              <br />\n              <br />\n              <span className={styles.center}>\n                <img\n                  className={styles.introImg}\n                  src={img_slider1}\n                  alt=\"example1\"\n                />\n              </span>\n              <br />\n              <br />\n              <span className={styles.center}>\n                [<strong>← BACK</strong>] [<strong>NEXT →</strong>]\n              </span>\n            </p>\n          </div>\n        );\n      } else if (this.state.instructScreenText === 5) {\n        text = (\n          <div className={styles.main}>\n            <p>\n              The peak of this curve shows the estimate that you think is most\n              likely:\n              <br />\n              <span className={styles.center}>\n                <img\n                  className={styles.introImgTwo}\n                  src={img_slider2}\n                  alt=\"example1\"\n                />\n              </span>\n              And the width of the slider shows how certain you are:\n              <br />\n              <span className={styles.center}>\n                <img\n                  className={styles.introImgTwo}\n                  src={img_slider3}\n                  alt=\"example1\"\n                />\n              </span>\n              <br />\n              <br />\n              <span className={styles.center}>\n                [<strong>← BACK</strong>] [<strong>NEXT →</strong>]\n              </span>\n            </p>\n          </div>\n        );\n      } else if (this.state.instructScreenText === 6) {\n        text = (\n          <div className={styles.main}>\n            <p>\n              You can move the position of the peak\n              <br />\n              <br />\n              <span className={styles.center}>\n                <img\n                  className={styles.introImg2}\n                  src={img_slider2}\n                  alt=\"example1\"\n                />\n              </span>\n              <br />\n              to the left using the left arrow key\n              <img\n                className={styles.introImgTwo2}\n                src={img_left}\n                alt=\"example1\"\n              />\n              <br />\n              and to the right using the right arrow key\n              <img\n                className={styles.introImgTwo2}\n                src={img_right}\n                alt=\"example1\"\n              />\n              <br />\n              <br />\n              <br />\n              <span className={styles.center}>\n                [<strong>← BACK</strong>] [<strong>NEXT →</strong>]\n              </span>\n            </p>\n          </div>\n        );\n      } else if (this.state.instructScreenText === 7) {\n        text = (\n          <div className={styles.main}>\n            <p>\n              You can make change the width as well.\n              <br />\n              <br />\n              <span className={styles.center}>\n                <img\n                  className={styles.introImg2}\n                  src={img_slider3}\n                  alt=\"example1\"\n                />\n              </span>\n              <br />\n              You can make the slider wider using the up arrow key\n              <img\n                className={styles.introImgTwo2}\n                src={img_up}\n                alt=\"example1\"\n              />\n              and narrower using the down arrow key\n              <img\n                className={styles.introImgTwo2}\n                src={img_down}\n                alt=\"example1\"\n              />\n              <br />\n              <br />\n              <br />\n              <span className={styles.center}>\n                [<strong>← BACK</strong>] [<strong>NEXT →</strong>]\n              </span>\n            </p>\n          </div>\n        );\n      } else if (this.state.instructScreenText === 8) {\n        text = (\n          <div className={styles.main}>\n            <p>\n              <br />\n              Here you see how it looks like when the estimate is 50\n              <br />\n              <span className={styles.center}>\n                <img\n                  className={styles.introImgTwo}\n                  src={img_slider1}\n                  alt=\"example1\"\n                />\n              </span>\n              and here you see how it looks like when it is 75\n              <br />\n              <span className={styles.center}>\n                <img\n                  className={styles.introImgTwo}\n                  src={img_slider4}\n                  alt=\"example1\"\n                />\n              </span>\n              <br />\n              <span className={styles.center}>\n                [<strong>← BACK</strong>] [<strong>NEXT →</strong>]\n              </span>\n            </p>\n          </div>\n        );\n      } else if (this.state.instructScreenText === 9) {\n        text = (\n          <div className={styles.main}>\n            <p>\n              The second aspect of the slider, the changeable width, enables you\n              to indicate your certainty.\n              <br />\n              Here you see how it looks like when the estimate is 50 with high{\" \"}\n              <strong>certainty</strong>\n              <br />\n              <br />\n              <span className={styles.center}>\n                <img\n                  className={styles.introImgTwo}\n                  src={img_slider5}\n                  alt=\"example1\"\n                />\n              </span>\n              and here 50 is indicated with <strong>uncertainty</strong>\n              <br />\n              <span className={styles.center}>\n                <img\n                  className={styles.introImgTwo}\n                  src={img_slider6}\n                  alt=\"example1\"\n                />\n              </span>\n              <span className={styles.center}>\n                [<strong>← BACK</strong>] [<strong>NEXT →</strong>]\n              </span>\n            </p>\n          </div>\n        );\n      } else if (this.state.instructScreenText === 10) {\n        text = (\n          <div className={styles.main}>\n            <p>\n              <br />\n              <br />\n              To familiarize you with the slider, we will now ask you several\n              questions.\n              <br />\n              <br />\n              Some questions are related to yourself and some are not.\n              <br />\n              <br />\n              Please indicate your answer to the question, as well as your\n              certainty in your answer by using the slider.\n              <br />\n              <br />\n              <br /> <br />\n              <span className={styles.center}>\n                [<strong>← BACK</strong>] [<strong>NEXT →</strong>]\n              </span>\n            </p>\n          </div>\n        );\n      } else if (this.state.instructScreenText === 11) {\n        text = (\n          <div className={styles.main}>\n            <p>\n              <br />\n              One example could be:\n              <br />\n              <br />\n              “How large is the population of Thailand? (If the scale refers to\n              0-100 Million)”\n              <br />\n              <br />\n              If you think it is approximately 65 mio and you are relatively\n              certain,your answer could be:\n              <br />\n              <span className={styles.center}>\n                <img\n                  className={styles.introImg}\n                  src={img_slider7}\n                  alt=\"example1\"\n                />\n              </span>\n              <br />\n              <br />\n              <span className={styles.center}>\n                [<strong>← BACK</strong>] [<strong>NEXT →</strong>]\n              </span>\n            </p>\n          </div>\n        );\n      } else if (this.state.instructScreenText === 12) {\n        text = (\n          <div className={styles.main}>\n            <p>\n              <br />\n              When indicating your estimate and certainty, please try to do be\n              as precise as possible.\n              <br />\n              <br />\n              To submit your answer, please press the space bar.\n              <br />\n              <span className={styles.center}>\n                <img\n                  className={styles.introImgTwo3}\n                  src={img_spacebar}\n                  alt=\"example1\"\n                />\n              </span>\n              <br /> <br />\n              Let's practice this!\n              <br /> <br /> <br /> <br />\n              Also press the [<strong>SPACEBAR</strong>] to start the practice.\n              <br />\n              <br />\n              <span className={styles.center}>\n                [<strong>← BACK</strong>]\n              </span>\n            </p>\n          </div>\n        );\n      }\n    }\n\n    return (\n      <div className={styles.cockpit}>\n        <div className={styles.textblock}>{text}</div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SliderIntro);\n","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingIntroA.js",["149","150","151"],"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingIntroB.js",["152","153","154","155"],"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTaskA.js",["156","157","158","159","160","161","162","163"],"import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n// import { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport { range } from \"lodash\";\nimport ElementsOneDisplay from \"./elementsOnedisplay\";\n////////////////////////////////////////////////////////////////////////////////\nfunction shuffle(array) {\n  let currentIndex = array.length,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex != 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex],\n    ];\n  }\n\n  return array;\n}\n////////////////////////////////////////////////////////////////////////////////\nclass TrainingTaskA extends React.Component {\n  constructor(props) {\n    super(props);\n\n    var nr_train_a_trial = 10;\n    var val_options = range(0, 110, 10);\n    val_options.splice(val_options.indexOf(50), 1); //remove the 50 to make it clearer which element is correct\n    var random_val = [];\n    for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n      var val_tmp = val_options[~~(Math.random() * val_options.length)];\n      do {\n        var val_tmp = val_options[~~(Math.random() * val_options.length)];\n      } while (random_val[i - 1] === val_tmp); // make sure it changes every time\n      random_val[i] = val_tmp;\n    }\n\n    var corr_values = random_val.slice(0, 5);\n    var inverse_tmp = random_val.slice(5, 10);\n    var inverse = inverse_tmp.map(function (value) {\n      return 100 - value;\n    });\n    corr_values.push(inverse[0],inverse[1],inverse[2],inverse[3],inverse[4]);\n    let array_tmp = Array(nr_train_a_trial).fill(0);\n\n    // var rightCodeAns = [4, 4, 4, 4, 4, 5, 5, 5, 5];\n    var corr_pos = [4, 4, 4, 4, 4, 5, 5, 5, 5]; //1 is left and 2 is right; determine where the correct value is displayed\n    shuffle(corr_pos);\n    // initialize options for the first trial\n    if (corr_pos[0] === 4) {\n      var ansTwo = 100 - corr_values[0];\n      var ansOne = corr_values[0];\n    } else {\n      var ansOne = 100 - corr_values[0];\n      var ansTwo = corr_values[0];\n    }\n\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"TrainingTaskA\",\n      trialKeypress: array_tmp,\n      traintrialNum: 1,\n      traintrialTotal: nr_train_a_trial,\n      feedback: 0,\n      timePassed: false,\n      timePassed2: false,\n      mounted: 0,\n      all_corr_values: corr_values,\n      valTrainElem: corr_values[0],\n      corr_value: corr_values[0],\n      trainAcc: array_tmp,\n      ansOne: ansOne,\n      ansTwo: ansTwo,\n      corr_pos: corr_pos,\n    };\n\n    this.nextTrial = this.nextTrial.bind(this);\n    this.trainCheck = this.trainCheck.bind(this);\n    this.disp_options = this.disp_options.bind(this);\n    this.disp_feedback = this.disp_feedback.bind(this);\n    this.disp_element = this.disp_element.bind(this);\n    this.redirectToNextStage = this.redirectToNextStage.bind(this);\n    /* prevents page from going to the right/left when arrows are pressed .*/\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      } else if (e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  }\n\n  /////////////////////////////////////////////////////////////////////////////////\n  trainCheck(pressed) {\n    var trainAcc = this.state.trainAcc;\n    var trialKeypress = this.state.trialKeypress;\n    trialKeypress[this.state.traintrialNum - 1] = pressed;\n\n    if (pressed === this.state.corr_pos[this.state.traintrialNum - 1]) {\n      trainAcc[this.state.traintrialNum - 1] = 1;\n    } else {\n      trainAcc[this.state.traintrialNum - 1] = 0;\n    }\n\n    this.setState({\n      trialKeypress: trialKeypress,\n      trainAcc: trainAcc,\n      feedback: 1,\n    });\n  }\n\n  _handleTrainKey = (event) => {\n    var pressed;\n    switch (event.keyCode) {\n      case 37:\n        //    this is left arrow\n        pressed = 4;\n        this.trainCheck(pressed);\n        break;\n      case 39:\n        //    this is right arrow\n        pressed = 5;\n        this.trainCheck(pressed);\n        break;\n      default:\n    }\n  };\n\n  nextTrial() {\n    document.removeEventListener(\"keyup\", this._handleTrainKey);\n    var traintrialNum_tmp = this.state.traintrialNum + 1;\n    var all_corr_values = this.state.all_corr_values;\n    if (traintrialNum_tmp === this.state.traintrialTotal) {\n      this.redirectToNextStage();\n    } else {\n\n      if (traintrialNum_tmp <= this.state.traintrialTotal / 2) {\n        var valTrainElem = all_corr_values[traintrialNum_tmp-1];\n      } else {\n        var valTrainElem = 100 - all_corr_values[traintrialNum_tmp-1];\n      }\n\n      var corr_pos = this.state.corr_pos;\n      if (corr_pos[traintrialNum_tmp - 1] === 4) {\n        var ansTwo = 100 - all_corr_values[traintrialNum_tmp-1];\n        var ansOne = all_corr_values[traintrialNum_tmp-1];\n      } else {\n        var ansOne = 100 - all_corr_values[traintrialNum_tmp-1];\n        var ansTwo = all_corr_values[traintrialNum_tmp-1];\n      }\n      this.setState({\n        traintrialNum: traintrialNum_tmp,\n        feedback: 0,\n        timePassed: false,\n        timePassed2: false,\n        valTrainElem: valTrainElem,\n        corr_value: this.state.all_corr_values[traintrialNum_tmp - 1],\n        ansTwo: ansTwo,\n        ansOne: ansOne,\n      });\n    }\n  }\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    //send the outcomeTask conditions?\n\n    // setTimeout(\n    //   function () {\n    //     this.condSave();\n    //   }.bind(this),\n    //   0\n    // );\n\n    setTimeout(\n      function () {\n        this.setState({\n          mounted: 1,\n        });\n      }.bind(this),\n      5000\n    );\n  }\n\n  componentWillUnmount() {\n    // fix Warning: Can't perform a React state update on an unmounted component\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n\n  // setTimeout(\n  //   function () {\n  //     this.trainTrialSave();\n  //   }.bind(this),\n  //   5\n  // );\n  /////////////////////////////////////////////////////////////////////////////////\n  render() {\n    if (!this.state.timePassed && this.state.feedback === 0) {\n      return <div className={styles.cockpit}>{this.disp_element()}</div>;\n    } else if (this.state.feedback === 0 && this.state.timePassed === true) {\n      return <div className={styles.cockpit}>{this.disp_options()}</div>;\n    } else if (!this.state.timePassed2 && this.state.feedback === 1) {\n      return <div className={styles.cockpit}>{this.disp_feedback()}</div>;\n    } else if (this.state.timePassed2 === true && this.state.feedback === 1) {\n      {\n        this.nextTrial();\n      }\n      return null;\n    }\n  }\n\n  disp_element(event) {\n    setTimeout(() => {\n      this.setState({ timePassed: true, timePassed2: false });\n    }, 2000);\n    return (\n      <ElementsOneDisplay\n        value={this.state.valTrainElem}\n        traintrialTotal={this.state.traintrialTotal}\n        traintrialNum={this.state.traintrialNum}\n      />\n    );\n  }\n\n  disp_options(event) {\n    document.addEventListener(\"keyup\", this._handleTrainKey);\n    let text = (\n      <div className={styles.questions}>\n        How large is the alien population?\n        <br />\n        <br />\n        <br />\n      </div>\n    );\n    return (\n      <div className={styles.cockpit}>\n        <div>{text}</div>\n        <br />\n        <div className={styles.main}>\n          <div className={styles.container_1}>\n            <span className={styles.right}>{this.state.ansTwo}</span>\n            <span className={styles.left}>{this.state.ansOne}</span>\n          </div>\n          <br />\n        </div>\n      </div>\n    );\n  }\n\n  disp_feedback() {\n    let text2 = (\n      <div className={styles.questions}>\n        The true population on the planet was {this.state.corr_value} mio.\n        <br />\n        <br />\n        <br />\n      </div>\n    );\n    setTimeout(() => {\n      this.setState({ timePassed2: true });\n    }, 700);\n\n    return (\n      <div className={styles.cockpit}>\n        <div>{text2}</div>\n      </div>\n    );\n  }\n\n  redirectToNextStage() {\n    this.props.history.push({\n      pathname: `/TrainingIntroB`,\n      state: {\n        // userID: this.state.userID,\n        // date: this.state.date,\n        // startTime: this.state.startTime,\n      },\n    });\n\n    // console.log(\"UserID is: \" + this.state.userID);\n  }\n}\n\n/////////////////////////////////////////////////////////////////////////////////\n\nexport default withRouter(TrainingTaskA);\n","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTaskB.js",["164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179"],"import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n// import { DATABASE_URL } from \"./config\";\nimport styles from \"./style/taskStyle.module.css\";\nimport { range } from \"lodash\";\nimport ElementsFullDisplay from \"./elementsFulldisplay\";\n////////////////////////////////////////////////////////////////////////////////\nfunction shuffle(array) {\n  let currentIndex = array.length,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex != 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex],\n    ];\n  }\n  return array;\n}\n\nfunction getRand(array) {\n  var val_options = range(0, 110, 10);\n  var rand = val_options[~~(Math.random() * val_options.length)];\n  // var rand = Math.floor(Math.random() * 10);\n  if (array.indexOf(rand) === -1) {\n    return rand;\n  } else {\n    return getRand(array);\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\nclass TrainingTaskB extends React.Component {\n  constructor(props) {\n    super(props);\n\n    var nr_train_a_trial = 12;\n    var val_options = range(0, 110, 10);\n    val_options.splice(val_options.indexOf(50), 1); //remove the 50 to make it clearer which element is correct\n    var random_val = [];\n    for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n      var val_tmp = val_options[~~(Math.random() * val_options.length)];\n      do {\n        var val_tmp = val_options[~~(Math.random() * val_options.length)];\n      } while (random_val[i - 1] === val_tmp); // make sure it changes every time\n      random_val[i] = val_tmp;\n    }\n\n    var corr_values = random_val.slice(0, 6);\n    var inverse_tmp = random_val.slice(6, 12);\n    var inverse = inverse_tmp.map(function (value) {\n      return 100 - value;\n    });\n    corr_values.push(\n      inverse[0],\n      inverse[1],\n      inverse[2],\n      inverse[3],\n      inverse[4],\n      inverse[5]\n    );\n    let array_tmp = Array(nr_train_a_trial).fill(0);\n\n    // var rightCodeAns = [4, 4, 4, 4, 4, 5, 5, 5, 5];\n    var corr_pos = [4, 4, 4, 4, 4, 5, 5, 5, 5]; //1 is left and 2 is right; determine where the correct value is displayed\n    shuffle(corr_pos);\n    // initialize options for the first trial\n    if (corr_pos[0] === 4) {\n      // var ansTwo = 100 - corr_values[0];\n      var ansOne = corr_values[0];\n    } else {\n      // var ansOne = 100 - corr_values[0];\n      var ansTwo = corr_values[0];\n    }\n\n    var corr_elem_tmp = [1, 2, 3]; //1 is left and 2 is right; determine where the correct value is displayed\n    shuffle(corr_elem_tmp);\n    var corr_elem = Array(nr_train_a_trial).fill(0);\n\n    for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n      if (i < nr_train_a_trial / 3) {\n        corr_elem[i] = corr_elem_tmp[0];\n      } else if (i >= nr_train_a_trial / 3 && i < (nr_train_a_trial / 3) * 2) {\n        corr_elem[i] = corr_elem_tmp[1];\n      } else {\n        corr_elem[i] = corr_elem_tmp[2];\n      }\n    }\n    //pregenerate the values for all elements\n    var check_al2 = [];\n    var check_al1 = [];\n\n    for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n      var restricted = [corr_values[i], 100 - corr_values[i]];\n      if (i < nr_train_a_trial / 2) {\n        check_al1[i] = getRand(restricted);\n        check_al2[i] = 100 - corr_values[i];\n      } else {\n        check_al1[i] = 100 - corr_values[i];\n        check_al2[i] = getRand(restricted);\n      }\n    }\n\n    var all_element_values = Array(nr_train_a_trial)\n      .fill()\n      .map(() => Array(3).fill(0));\n\n    for (var i = 0; i <= nr_train_a_trial - 1; i++) {\n      all_element_values[i][corr_elem[i]-1] = corr_values[i];\n      if (corr_elem[i] == 1) {\n        all_element_values[i][1] = check_al1[i];\n        all_element_values[i][2] = check_al2[i];\n      } else if (corr_elem[i] == 2) {\n        all_element_values[i][0] = check_al1[i];\n        all_element_values[i][2] = check_al2[i];\n      } else if (corr_elem[i] == 3) {\n        all_element_values[i][0] = check_al1[i];\n        all_element_values[i][1] = check_al2[i];\n      }\n    }\n    // initialize options for the first trial\n    if (corr_pos[0] === 4) {\n      var ansTwo = 100 - corr_values[0];\n      var ansOne = corr_values[0];\n    } else {\n      var ansOne = 100 - corr_values[0];\n      var ansTwo = corr_values[0];\n    }\n\n    this.state = {\n      // userID: userID,\n      // date: date,\n      // startTime: startTime,\n      // sectionTime: timeString,\n      // taskSessionTry: 1,\n      // taskSession: \"TrainingTaskA\",\n      trialKeypress: array_tmp,\n      traintrialNum: 1,\n      traintrialTotal: nr_train_a_trial,\n      feedback: 0,\n      timePassed: false,\n      timePassed2: false,\n      mounted: 0,\n      all_corr_values: corr_values,\n      valTrainElem: corr_values[0],\n      corr_value: corr_values[0],\n      trainAcc: array_tmp,\n      ansOne: ansOne,\n      ansTwo: ansTwo,\n      corr_pos: corr_pos,\n      corr_elem:corr_elem,\n      all_element_values: all_element_values,\n    };\n    // this.displayFeedback = this.displayFeedback.bind(this)\n    /* prevents page from going to the right/left when arrows are pressed .*/\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 37 && e.target === document.body) {\n        e.preventDefault();\n      } else if (e.keyCode === 39 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  }\n  /////////////////////////////////////////////////////////////////////////////////\n  trainCheck(pressed) {\n    var trainAcc = this.state.trainAcc;\n    var trialKeypress = this.state.trialKeypress;\n    trialKeypress[this.state.traintrialNum - 1] = pressed;\n\n    if (pressed === this.state.corr_pos[this.state.traintrialNum - 1]) {\n      trainAcc[this.state.traintrialNum - 1] = 1;\n    } else {\n      trainAcc[this.state.traintrialNum - 1] = 0;\n    }\n\n    this.setState({\n      trialKeypress: trialKeypress,\n      trainAcc: trainAcc,\n      feedback: 1,\n    });\n  }\n\n  _handleTrainKey = (event) => {\n    var pressed;\n    switch (event.keyCode) {\n      case 37:\n        //    this is left arrow\n        pressed = 4;\n        this.trainCheck(pressed);\n        break;\n      case 39:\n        //    this is right arrow\n        pressed = 5;\n        this.trainCheck(pressed);\n        break;\n      default:\n    }\n  };\n\n  nextTrial() {\n    document.removeEventListener(\"keyup\", this._handleTrainKey);\n    var traintrialNum_tmp = this.state.traintrialNum + 1;\n    var all_corr_values = this.state.all_corr_values;\n    if (traintrialNum_tmp === this.state.traintrialTotal) {\n      this.redirectToNextStage();\n    } else {\n\n      if (traintrialNum_tmp <= this.state.traintrialTotal / 2) {\n        var valTrainElem = all_corr_values[traintrialNum_tmp-1];\n      } else {\n        var valTrainElem = 100 - all_corr_values[traintrialNum_tmp-1];\n      }\n\n      var corr_pos = this.state.corr_pos;\n      if (corr_pos[traintrialNum_tmp - 1] === 4) {\n        var ansTwo = 100 - all_corr_values[traintrialNum_tmp-1];\n        var ansOne = all_corr_values[traintrialNum_tmp-1];\n      } else {\n        var ansOne = 100 - all_corr_values[traintrialNum_tmp-1];\n        var ansTwo = all_corr_values[traintrialNum_tmp-1];\n      }\n      this.setState({\n        traintrialNum: traintrialNum_tmp,\n        feedback: 0,\n        timePassed: false,\n        timePassed2: false,\n        valTrainElem: valTrainElem,\n        corr_value: this.state.all_corr_values[traintrialNum_tmp - 1],\n        ansTwo: ansTwo,\n        ansOne: ansOne,\n      });\n    }\n  }\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    //send the outcomeTask conditions?\n\n    // setTimeout(\n    //   function () {\n    //     this.condSave();\n    //   }.bind(this),\n    //   0\n    // );\n\n    setTimeout(\n      function () {\n        this.setState({\n          mounted: 1,\n        });\n      }.bind(this),\n      5000\n    );\n  }\n\n  componentWillUnmount() {\n    // fix Warning: Can't perform a React state update on an unmounted component\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n  //\n  //   fetchUserInfo () {\n  //        fetch(`${API_URL}/questions_behaviour/last_user_no`)\n  //          .then(handleResponse)\n  //          .then((data) => {\n  //            const user_no_ = parseInt(data['new_user_no'])\n  //            //console.log(\"fetchUserInfo in Intro \", \"user_no\", user_no_)\n  //\n  //            this.setState({\n  //                    UserNo : user_no_,\n  //                    fetched: 1,\n  //                });\n  //        })\n  //          .catch((error) => {\n  //           console.log(error)\n  //        });\n  //       }\n\n  // setTimeout(\n  //   function () {\n  //     this.trainTrialSave();\n  //   }.bind(this),\n  //   5\n  // );\n  /////////////////////////////////////////////////////////////////////////////////\n  render() {\n    if (!this.state.timePassed && this.state.feedback === 0) {\n      return <div className={styles.cockpit}>{this.disp_elements()}</div>;\n    } else if (this.state.feedback === 0 && this.state.timePassed === true) {\n      return <div className={styles.cockpit}>{this.disp_options()}</div>;\n    } else if (!this.state.timePassed2 && this.state.feedback === 1) {\n      return <div className={styles.cockpit}>{this.disp_feedback()}</div>;\n    } else if (this.state.timePassed2 === true && this.state.feedback === 1) {\n      {\n        this.nextTrial();\n      }\n      return null;\n    }\n  }\n\n  disp_elements(event) {\n    setTimeout(() => {\n      this.setState({ timePassed: true, timePassed2: false });\n    }, 7500);\n        return (\n          <ElementsFullDisplay\n            value1={this.state.all_element_values[this.state.traintrialNum-1][0]}\n            value2={this.state.all_element_values[this.state.traintrialNum-1][1]}\n            value3={this.state.all_element_values[this.state.traintrialNum-1][2]}\n            trialTotal={this.state.trialTotal}\n            trialNum={this.state.trialNum}\n          />\n        );\n  }\n\n  disp_options(event) {\n    document.addEventListener(\"keyup\", this._handleTrainKey);\n    let text = (\n      <div className={styles.questions}>\n        How large is the alien population?\n        <br />\n        <br />\n        <br />\n      </div>\n    );\n    return (\n      <div className={styles.cockpit}>\n        <div>{text}</div>\n        <br />\n        <div className={styles.main}>\n          <div className={styles.container_1}>\n            <span className={styles.right}>{this.state.ansTwo}</span>\n            <span className={styles.left}>{this.state.ansOne}</span>\n          </div>\n          <br />\n        </div>\n      </div>\n    );\n  }\n\n  disp_feedback() {\n    let text2 = (\n      <div className={styles.questions}>\n        The true population on the planet was {this.state.all_corr_values[this.state.traintrialNum-1]} mio.\n        <br />\n        <br />\n        <br />\n      </div>\n    );\n    setTimeout(() => {\n      this.setState({ timePassed2: true, timePassed: false });\n    }, 700);\n\n    return (\n      <div className={styles.cockpit}>\n        <div>{text2}</div>\n      </div>\n    );\n  }\n\n  redirectToNextStage() {\n    this.props.history.push({\n      pathname: `/TrainingIntroC`,\n      state: {\n        // userID: this.state.userID,\n        // date: this.state.date,\n        // startTime: this.state.startTime,\n      },\n    });\n\n    // console.log(\"UserID is: \" + this.state.userID);\n  }\n}\n\nexport default withRouter(TrainingTaskB);\n","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/elementsOnedisplay.js",["180"],"import React from \"react\";\nimport styles from \"./style/taskStyle.module.css\";\nimport ElementBar from \"./elementBar\";\n\nimport { View} from \"react-native\";\nimport Cover from \"./img/cover.jpg\";\nimport Blue from \"./img/stimuli3_blue.jpg\";\nimport \"./style/barstyles.css\";\n\nclass ElementsOneDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n\n    /* data to be saved .*/\n    var times_element = Array(1)\n      .fill()\n      .map(() => Array(3).fill(0));\n\n    this.state = {\n      img: Cover,\n      value: props.value,\n      show: null,\n      times_element: times_element,\n    };\n\n    this.mouseOver = this.mouseOver.bind(this);\n    this.mouseOut = this.mouseOut.bind(this);\n\n    /* prevents page from going down when space bar is hit .*/\n    window.addEventListener(\"keydown\", function (e) {\n      if (e.keyCode === 32 && e.target === document.body) {\n        e.preventDefault();\n      }\n    });\n  }\n\n  mouseOver(elNr) {\n    this.state.times_element.push([Math.round(performance.now()), 0, 0]);\n    this.setState({\n      img: Blue,\n      show: 1,\n    });\n  }\n\n  mouseOut(elNr) {\nvar times_element = this.state.times_element\n\n    times_element[times_element.length - 1][1] = Math.round(performance.now());\n    times_element[times_element.length - 1][2] = times_element[times_element.length - 1][1] -\n      times_element[times_element.length - 1][0];\n    this.setState({\n      times_element: times_element,\n      img: Cover,\n      show: null,\n    });\n  }\n\n  render() {\n    return (\n      <div className={styles.cockpit}>\n        <div className={styles.main}>\n          <span className={styles.centerTwo}>\n            <View style={styles.container}>\n              <img\n                className={styles.elementsize}\n                src={this.state.img}\n                onMouseOver={(elNr) => this.mouseOver(1)}\n                onMouseOut={(elNr) => this.mouseOut(1)}\n              />\n              {this.state.show ? (\n                <div className={styles.overlay}>\n                  <ElementBar progress={this.props.value} />\n                </div>\n              ) : null}\n              {this.state.show ? (\n                <div className={styles.overlaytext}>{this.props.value}%</div>\n              ) : null}\n            </View>\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ElementsOneDisplay;\n","/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingIntroC.js",["181","182","183"],"/Users/alisaloosen/Documents/GitHub/GalacticalShift/src/Components/TrainingTaskC.js",["184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199"],{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"200","replacedBy":"204"},{"ruleId":"202","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":5,"column":8,"nodeType":"208","messageId":"209","endLine":5,"endColumn":19},{"ruleId":"206","severity":1,"message":"210","line":14,"column":5,"nodeType":"208","messageId":"209","endLine":14,"endColumn":13},{"ruleId":"200","replacedBy":"211"},{"ruleId":"202","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":133,"column":6,"nodeType":"215","endLine":133,"endColumn":30,"suggestions":"216"},{"ruleId":"206","severity":1,"message":"217","line":2,"column":10,"nodeType":"208","messageId":"209","endLine":2,"endColumn":16},{"ruleId":"206","severity":1,"message":"218","line":4,"column":10,"nodeType":"208","messageId":"209","endLine":4,"endColumn":25},{"ruleId":"206","severity":1,"message":"219","line":4,"column":33,"nodeType":"208","messageId":"209","endLine":4,"endColumn":38},{"ruleId":"206","severity":1,"message":"220","line":4,"column":40,"nodeType":"208","messageId":"209","endLine":4,"endColumn":50},{"ruleId":"206","severity":1,"message":"221","line":4,"column":51,"nodeType":"208","messageId":"209","endLine":4,"endColumn":55},{"ruleId":"206","severity":1,"message":"222","line":10,"column":8,"nodeType":"208","messageId":"209","endLine":10,"endColumn":13},{"ruleId":"206","severity":1,"message":"223","line":15,"column":5,"nodeType":"208","messageId":"209","endLine":15,"endColumn":13},{"ruleId":"206","severity":1,"message":"224","line":20,"column":9,"nodeType":"208","messageId":"209","endLine":20,"endColumn":24},{"ruleId":"225","severity":1,"message":"226","line":76,"column":10,"nodeType":"227","messageId":"228","endLine":76,"endColumn":71},{"ruleId":"225","severity":1,"message":"226","line":77,"column":10,"nodeType":"227","messageId":"228","endLine":77,"endColumn":71},{"ruleId":"225","severity":1,"message":"226","line":82,"column":12,"nodeType":"227","messageId":"228","endLine":82,"endColumn":73},{"ruleId":"225","severity":1,"message":"226","line":83,"column":12,"nodeType":"227","messageId":"228","endLine":83,"endColumn":73},{"ruleId":"225","severity":1,"message":"226","line":88,"column":14,"nodeType":"227","messageId":"228","endLine":88,"endColumn":75},{"ruleId":"225","severity":1,"message":"226","line":89,"column":14,"nodeType":"227","messageId":"228","endLine":89,"endColumn":75},{"ruleId":"229","severity":1,"message":"230","line":101,"column":7,"nodeType":"231","endLine":105,"endColumn":9},{"ruleId":"229","severity":1,"message":"230","line":114,"column":7,"nodeType":"231","endLine":118,"endColumn":9},{"ruleId":"229","severity":1,"message":"230","line":127,"column":7,"nodeType":"231","endLine":131,"endColumn":9},{"ruleId":"206","severity":1,"message":"232","line":3,"column":10,"nodeType":"208","messageId":"209","endLine":3,"endColumn":19},{"ruleId":"206","severity":1,"message":"233","line":3,"column":21,"nodeType":"208","messageId":"209","endLine":3,"endColumn":29},{"ruleId":"206","severity":1,"message":"234","line":2,"column":10,"nodeType":"208","messageId":"209","endLine":2,"endColumn":20},{"ruleId":"206","severity":1,"message":"235","line":3,"column":10,"nodeType":"208","messageId":"209","endLine":3,"endColumn":22},{"ruleId":"206","severity":1,"message":"232","line":3,"column":10,"nodeType":"208","messageId":"209","endLine":3,"endColumn":19},{"ruleId":"206","severity":1,"message":"233","line":3,"column":21,"nodeType":"208","messageId":"209","endLine":3,"endColumn":29},{"ruleId":"206","severity":1,"message":"235","line":3,"column":10,"nodeType":"208","messageId":"209","endLine":3,"endColumn":22},{"ruleId":"206","severity":1,"message":"236","line":6,"column":8,"nodeType":"208","messageId":"209","endLine":6,"endColumn":15},{"ruleId":"206","severity":1,"message":"235","line":3,"column":10,"nodeType":"208","messageId":"209","endLine":3,"endColumn":22},{"ruleId":"206","severity":1,"message":"236","line":6,"column":8,"nodeType":"208","messageId":"209","endLine":6,"endColumn":15},{"ruleId":"206","severity":1,"message":"237","line":12,"column":5,"nodeType":"208","messageId":"209","endLine":12,"endColumn":15},{"ruleId":"206","severity":1,"message":"235","line":3,"column":10,"nodeType":"208","messageId":"209","endLine":3,"endColumn":22},{"ruleId":"206","severity":1,"message":"236","line":6,"column":8,"nodeType":"208","messageId":"209","endLine":6,"endColumn":15},{"ruleId":"206","severity":1,"message":"238","line":8,"column":8,"nodeType":"208","messageId":"209","endLine":8,"endColumn":18},{"ruleId":"206","severity":1,"message":"237","line":10,"column":5,"nodeType":"208","messageId":"209","endLine":10,"endColumn":15},{"ruleId":"239","severity":1,"message":"240","line":13,"column":23,"nodeType":"241","messageId":"242","endLine":13,"endColumn":25},{"ruleId":"243","severity":1,"message":"244","line":39,"column":13,"nodeType":"208","messageId":"245","endLine":39,"endColumn":20},{"ruleId":"243","severity":1,"message":"246","line":60,"column":11,"nodeType":"208","messageId":"245","endLine":60,"endColumn":17},{"ruleId":"243","severity":1,"message":"247","line":61,"column":11,"nodeType":"208","messageId":"245","endLine":61,"endColumn":17},{"ruleId":"243","severity":1,"message":"248","line":150,"column":13,"nodeType":"208","messageId":"245","endLine":150,"endColumn":25},{"ruleId":"243","severity":1,"message":"246","line":158,"column":13,"nodeType":"208","messageId":"245","endLine":158,"endColumn":19},{"ruleId":"243","severity":1,"message":"247","line":159,"column":13,"nodeType":"208","messageId":"245","endLine":159,"endColumn":19},{"ruleId":"249","severity":1,"message":"250","line":233,"column":7,"nodeType":"251","messageId":"252","endLine":235,"endColumn":8},{"ruleId":"239","severity":1,"message":"240","line":13,"column":23,"nodeType":"241","messageId":"242","endLine":13,"endColumn":25},{"ruleId":"243","severity":1,"message":"244","line":50,"column":13,"nodeType":"208","messageId":"245","endLine":50,"endColumn":20},{"ruleId":"243","severity":1,"message":"253","line":86,"column":14,"nodeType":"208","messageId":"245","endLine":86,"endColumn":15},{"ruleId":"243","severity":1,"message":"253","line":99,"column":14,"nodeType":"208","messageId":"245","endLine":99,"endColumn":15},{"ruleId":"243","severity":1,"message":"253","line":114,"column":14,"nodeType":"208","messageId":"245","endLine":114,"endColumn":15},{"ruleId":"239","severity":1,"message":"254","line":116,"column":24,"nodeType":"241","messageId":"242","endLine":116,"endColumn":26},{"ruleId":"239","severity":1,"message":"254","line":119,"column":31,"nodeType":"241","messageId":"242","endLine":119,"endColumn":33},{"ruleId":"239","severity":1,"message":"254","line":122,"column":31,"nodeType":"241","messageId":"242","endLine":122,"endColumn":33},{"ruleId":"243","severity":1,"message":"247","line":129,"column":11,"nodeType":"208","messageId":"245","endLine":129,"endColumn":17},{"ruleId":"243","severity":1,"message":"246","line":130,"column":11,"nodeType":"208","messageId":"245","endLine":130,"endColumn":17},{"ruleId":"243","severity":1,"message":"246","line":132,"column":11,"nodeType":"208","messageId":"245","endLine":132,"endColumn":17},{"ruleId":"243","severity":1,"message":"247","line":133,"column":11,"nodeType":"208","messageId":"245","endLine":133,"endColumn":17},{"ruleId":"243","severity":1,"message":"248","line":217,"column":13,"nodeType":"208","messageId":"245","endLine":217,"endColumn":25},{"ruleId":"243","severity":1,"message":"246","line":225,"column":13,"nodeType":"208","messageId":"245","endLine":225,"endColumn":19},{"ruleId":"243","severity":1,"message":"247","line":226,"column":13,"nodeType":"208","messageId":"245","endLine":226,"endColumn":19},{"ruleId":"249","severity":1,"message":"250","line":300,"column":7,"nodeType":"251","messageId":"252","endLine":302,"endColumn":8},{"ruleId":"229","severity":1,"message":"230","line":64,"column":15,"nodeType":"231","endLine":69,"endColumn":17},{"ruleId":"206","severity":1,"message":"235","line":3,"column":10,"nodeType":"208","messageId":"209","endLine":3,"endColumn":22},{"ruleId":"206","severity":1,"message":"236","line":6,"column":8,"nodeType":"208","messageId":"209","endLine":6,"endColumn":15},{"ruleId":"206","severity":1,"message":"237","line":10,"column":5,"nodeType":"208","messageId":"209","endLine":10,"endColumn":15},{"ruleId":"239","severity":1,"message":"240","line":13,"column":23,"nodeType":"241","messageId":"242","endLine":13,"endColumn":25},{"ruleId":"243","severity":1,"message":"244","line":50,"column":13,"nodeType":"208","messageId":"245","endLine":50,"endColumn":20},{"ruleId":"243","severity":1,"message":"253","line":86,"column":14,"nodeType":"208","messageId":"245","endLine":86,"endColumn":15},{"ruleId":"243","severity":1,"message":"253","line":99,"column":14,"nodeType":"208","messageId":"245","endLine":99,"endColumn":15},{"ruleId":"243","severity":1,"message":"253","line":114,"column":14,"nodeType":"208","messageId":"245","endLine":114,"endColumn":15},{"ruleId":"239","severity":1,"message":"254","line":116,"column":24,"nodeType":"241","messageId":"242","endLine":116,"endColumn":26},{"ruleId":"239","severity":1,"message":"254","line":119,"column":31,"nodeType":"241","messageId":"242","endLine":119,"endColumn":33},{"ruleId":"239","severity":1,"message":"254","line":122,"column":31,"nodeType":"241","messageId":"242","endLine":122,"endColumn":33},{"ruleId":"243","severity":1,"message":"247","line":129,"column":11,"nodeType":"208","messageId":"245","endLine":129,"endColumn":17},{"ruleId":"243","severity":1,"message":"246","line":130,"column":11,"nodeType":"208","messageId":"245","endLine":130,"endColumn":17},{"ruleId":"243","severity":1,"message":"246","line":132,"column":11,"nodeType":"208","messageId":"245","endLine":132,"endColumn":17},{"ruleId":"243","severity":1,"message":"247","line":133,"column":11,"nodeType":"208","messageId":"245","endLine":133,"endColumn":17},{"ruleId":"243","severity":1,"message":"248","line":217,"column":13,"nodeType":"208","messageId":"245","endLine":217,"endColumn":25},{"ruleId":"243","severity":1,"message":"246","line":225,"column":13,"nodeType":"208","messageId":"245","endLine":225,"endColumn":19},{"ruleId":"243","severity":1,"message":"247","line":226,"column":13,"nodeType":"208","messageId":"245","endLine":226,"endColumn":19},{"ruleId":"249","severity":1,"message":"250","line":300,"column":7,"nodeType":"251","messageId":"252","endLine":302,"endColumn":8},"no-native-reassign",["255"],"no-negated-in-lhs",["256"],["255"],["256"],"no-unused-vars","'queryString' is defined but never used.","Identifier","unusedVar","'introPic' is assigned a value but never used.",["255"],["256"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'muMinus', 'muPlus', 'sgmMinus', and 'sgmPlus'. Either include them or remove the dependency array.","ArrayExpression",["257"],"'render' is defined but never used.","'ImageBackground' is defined but never used.","'Image' is defined but never used.","'StyleSheet' is defined but never used.","'Text' is defined but never used.","'Green' is defined but never used.","'trialNum' is assigned a value but never used.","'trial_per_block' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'useState' is defined but never used.","'withRouter' is defined but never used.","'DATABASE_URL' is defined but never used.","'Cockpit' is defined but never used.","'trialTotal' is assigned a value but never used.","'img_intro1' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-redeclare","'val_tmp' is already defined.","redeclared","'ansOne' is already defined.","'ansTwo' is already defined.","'valTrainElem' is already defined.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'i' is already defined.","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation",{"desc":"258","fix":"259"},"Update the dependencies array to be: [onSpacebarHit, mu, sgm, muPlus, muMinus, sgmPlus, sgmMinus]",{"range":"260","text":"261"},[2861,2885],"[onSpacebarHit, mu, sgm, muPlus, muMinus, sgmPlus, sgmMinus]"]